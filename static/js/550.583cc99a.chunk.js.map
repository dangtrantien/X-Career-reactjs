{"version":3,"file":"static/js/550.583cc99a.chunk.js","mappings":"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","sources":["services/TaskAPI.js","ui-component/MenuButton/FilterBtn.js","services/UploadAPI.js","services/CommentAPI.js","views/board/task/comment/Input.js","views/board/task/comment/CommentForm.js","views/board/task/FileUpload.js","ui-component/MenuButton/MoveTaskBtn.js","utils/validateDateFormat.js","ui-component/MenuButton/CalendarBtn.js","views/board/task/TaskForm.js","views/board/task/Item.js","views/board/task/List.js","views/board/Detail.js"],"sourcesContent":["import axios from 'axios';\r\nimport { BaseAPI } from './baseAPI';\r\n\r\nexport default class TaskAPI extends BaseAPI {\r\n  constructor() {\r\n    super({ endpoint: 'api/tasks' });\r\n  }\r\n\r\n  createNew = async (data) => {\r\n    const res = await axios({\r\n      method: 'POST',\r\n      url: `${this.api}/${this.endpoint}/createTask`,\r\n      data: {\r\n        task: data,\r\n      },\r\n    });\r\n\r\n    return res;\r\n  };\r\n\r\n  getAll = async () => {\r\n    const res = await axios({\r\n      method: 'GET',\r\n      url: `${this.api}/${this.endpoint}/getAllTasksOfAllBoards`,\r\n      data: null,\r\n    });\r\n\r\n    return res;\r\n  };\r\n\r\n  updateByID = async (id, data) => {\r\n    const res = await axios({\r\n      method: 'PUT',\r\n      url: `${this.api}/${this.endpoint}/updateTaskByID?id=${id}`,\r\n      data: {\r\n        task: data,\r\n      },\r\n    });\r\n\r\n    return res;\r\n  };\r\n}\r\n","import PropTypes from 'prop-types';\r\nimport { useState } from 'react';\r\n\r\n// material-ui\r\nimport { styled, alpha } from '@mui/material/styles';\r\nimport { Avatar, Button, Checkbox, FormControl, FormControlLabel, FormGroup, FormLabel, Grid, Menu } from '@mui/material';\r\n\r\n// icons\r\nimport { IconClock, IconFilter } from '@tabler/icons';\r\n\r\n// project imports\r\n\r\n// ==============================|| FILTER BUTTON ||============================== //\r\n\r\nconst StyledMenu = styled((props) => (\r\n  <Menu\r\n    elevation={0}\r\n    anchorOrigin={{\r\n      vertical: 'bottom',\r\n      horizontal: 'right',\r\n    }}\r\n    transformOrigin={{\r\n      vertical: 'top',\r\n      horizontal: 'right',\r\n    }}\r\n    {...props}\r\n  />\r\n))(({ theme }) => ({\r\n  '& .MuiPaper-root': {\r\n    borderRadius: 6,\r\n    marginTop: theme.spacing(1),\r\n    minWidth: 180,\r\n    color: theme.palette.mode === 'light' ? 'rgb(55, 65, 81)' : theme.palette.grey[300],\r\n    boxShadow:\r\n      'rgb(255, 255, 255) 0px 0px 0px 0px, rgba(0, 0, 0, 0.05) 0px 0px 0px 1px, rgba(0, 0, 0, 0.1) 0px 10px 15px -3px, rgba(0, 0, 0, 0.05) 0px 4px 6px -2px',\r\n    '& .MuiMenu-list': {\r\n      padding: '4px 0',\r\n    },\r\n    '& .MuiMenuItem-root': {\r\n      '& .MuiSvgIcon-root': {\r\n        fontSize: 18,\r\n        color: theme.palette.text.secondary,\r\n        marginRight: theme.spacing(1.5),\r\n      },\r\n      '&:active': {\r\n        backgroundColor: alpha(theme.palette.primary.main, theme.palette.action.selectedOpacity),\r\n      },\r\n    },\r\n  },\r\n}));\r\n\r\nconst FilterBtn = (props) => {\r\n  const {\r\n    page,\r\n    userId,\r\n    checkMember,\r\n    checkNone,\r\n    member,\r\n    handleFilterMemberNone,\r\n    handleFilterMember,\r\n    checkBoard,\r\n    boardId,\r\n    board,\r\n    handleFilterBoard,\r\n    checkDate,\r\n    date,\r\n    dateId,\r\n    handleFilterDate,\r\n  } = props;\r\n\r\n  const [anchorEl, setAnchorEl] = useState(null);\r\n  const open = Boolean(anchorEl);\r\n\r\n  const handleClick = (event) => {\r\n    setAnchorEl(event.currentTarget);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setAnchorEl(null);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Button\r\n        id=\"demo-customized-button\"\r\n        aria-controls={open ? 'demo-customized-menu' : undefined}\r\n        aria-haspopup=\"true\"\r\n        aria-expanded={open ? 'true' : undefined}\r\n        variant=\"contained\"\r\n        disableElevation\r\n        onClick={handleClick}\r\n        startIcon={<IconFilter size={20} />}\r\n      >\r\n        filter\r\n      </Button>\r\n      <StyledMenu\r\n        id=\"demo-customized-menu\"\r\n        MenuListProps={{\r\n          'aria-labelledby': 'demo-customized-button',\r\n        }}\r\n        anchorEl={anchorEl}\r\n        open={open}\r\n        onClose={handleClose}\r\n      >\r\n        {page === 'board' && (\r\n          <Grid sx={{ display: 'flex', flexDirection: 'column' }}>\r\n            <FormControl sx={{ m: '16px 16px 0 16px' }} component=\"fieldset\" variant=\"standard\">\r\n              <FormLabel component=\"legend\">Filter by member</FormLabel>\r\n\r\n              <FormGroup>\r\n                <FormControlLabel\r\n                  control={\r\n                    <>\r\n                      <Checkbox\r\n                        checked={checkNone}\r\n                        onChange={(e) => {\r\n                          handleFilterMemberNone(e);\r\n                        }}\r\n                      />\r\n                      <Avatar src={''} sx={{ width: 20, height: 20, mr: 1 }} />\r\n                    </>\r\n                  }\r\n                  label=\"No membres\"\r\n                />\r\n                {member &&\r\n                  member.map((user) => (\r\n                    <FormControlLabel\r\n                      key={user._id}\r\n                      control={\r\n                        <>\r\n                          <Checkbox\r\n                            checked={userId === user._id ? checkMember : false}\r\n                            onChange={(e) => {\r\n                              handleFilterMember(e, user._id);\r\n                            }}\r\n                          />\r\n                          <Avatar src={user.avatar.data} sx={{ width: 20, height: 20, mr: 1 }} />\r\n                        </>\r\n                      }\r\n                      label={user.name}\r\n                    />\r\n                  ))}\r\n              </FormGroup>\r\n            </FormControl>\r\n\r\n            <FormControl sx={{ m: 2 }} component=\"fieldset\" variant=\"standard\">\r\n              <FormLabel component=\"legend\">Filter by date</FormLabel>\r\n\r\n              <FormGroup>\r\n                {date &&\r\n                  date.map((data) => (\r\n                    <FormControlLabel\r\n                      key={data.id}\r\n                      control={\r\n                        <>\r\n                          <Checkbox\r\n                            checked={dateId === data.id ? checkDate : false}\r\n                            onChange={(e) => {\r\n                              handleFilterDate(e, data.id);\r\n                            }}\r\n                          />\r\n                          <IconClock size={20} color={data.iconColor} style={{ marginRight: '10px' }} />\r\n                        </>\r\n                      }\r\n                      label={data.label}\r\n                    />\r\n                  ))}\r\n              </FormGroup>\r\n            </FormControl>\r\n          </Grid>\r\n        )}\r\n\r\n        {page === 'user' && (\r\n          <Grid sx={{ display: 'flex', flexDirection: 'column' }}>\r\n            <FormControl sx={{ m: '16px 16px 0 16px' }} component=\"fieldset\" variant=\"standard\">\r\n              <FormLabel component=\"legend\">Filter by board</FormLabel>\r\n\r\n              <FormGroup>\r\n                {board &&\r\n                  board.map((data) => (\r\n                    <FormControlLabel\r\n                      key={data._id}\r\n                      control={\r\n                        <>\r\n                          <Checkbox\r\n                            checked={boardId === data._id ? checkBoard : false}\r\n                            onChange={(e) => {\r\n                              handleFilterBoard(e, data._id);\r\n                            }}\r\n                          />\r\n                        </>\r\n                      }\r\n                      label={data.name}\r\n                    />\r\n                  ))}\r\n              </FormGroup>\r\n            </FormControl>\r\n\r\n            <FormControl sx={{ m: 2 }} component=\"fieldset\" variant=\"standard\">\r\n              <FormLabel component=\"legend\">Filter by date</FormLabel>\r\n\r\n              <FormGroup>\r\n                {date &&\r\n                  date.map((data) => (\r\n                    <FormControlLabel\r\n                      key={data.id}\r\n                      control={\r\n                        <>\r\n                          <Checkbox\r\n                            checked={dateId === data.id ? checkDate : false}\r\n                            onChange={(e) => {\r\n                              handleFilterDate(e, data.id);\r\n                            }}\r\n                          />\r\n                          <IconClock size={20} color={data.iconColor} style={{ marginRight: '10px' }} />\r\n                        </>\r\n                      }\r\n                      label={data.label}\r\n                    />\r\n                  ))}\r\n              </FormGroup>\r\n            </FormControl>\r\n          </Grid>\r\n        )}\r\n      </StyledMenu>\r\n    </>\r\n  );\r\n};\r\n\r\nFilterBtn.propTypes = {\r\n  page: PropTypes.string,\r\n  userId: PropTypes.any,\r\n  checkMember: PropTypes.bool,\r\n  checkNone: PropTypes.bool,\r\n  member: PropTypes.array,\r\n  handleFilterMemberNone: PropTypes.any,\r\n  handleFilterMember: PropTypes.any,\r\n  boardId: PropTypes.any,\r\n  checkBoard: PropTypes.bool,\r\n  board: PropTypes.array,\r\n  handleFilterBoard: PropTypes.any,\r\n  checkDate: PropTypes.bool,\r\n  date: PropTypes.array,\r\n  dateId: PropTypes.any,\r\n  handleFilterDate: PropTypes.any,\r\n};\r\n\r\nexport default FilterBtn;\r\n","import axios from 'axios';\r\nimport { BaseAPI } from './baseAPI';\r\n\r\nexport default class UploadAPI extends BaseAPI {\r\n  constructor() {\r\n    super({ endpoint: 'api/uploads' });\r\n  }\r\n\r\n  uploadFile = async (data) => {\r\n    const res = await axios({\r\n      method: 'POST',\r\n      url: `${this.api}/${this.endpoint}/uploadFile`,\r\n      data: {\r\n        upload: data,\r\n      },\r\n    });\r\n\r\n    return res;\r\n  };\r\n\r\n  getFromTask = async () => {\r\n    const res = await axios({\r\n      method: 'GET',\r\n      url: `${this.api}/${this.endpoint}/getAllFilesOfAllTasks`,\r\n      data: null,\r\n    });\r\n\r\n    return res;\r\n  };\r\n\r\n  getFromComment = async () => {\r\n    const res = await axios({\r\n      method: 'GET',\r\n      url: `${this.api}/${this.endpoint}/getAllFilesOfAllComments`,\r\n      data: null,\r\n    });\r\n\r\n    return res;\r\n  };\r\n}\r\n","import axios from 'axios';\r\nimport { BaseAPI } from './baseAPI';\r\n\r\nconst token = sessionStorage.getItem('token');\r\n\r\nexport default class CommentAPI extends BaseAPI {\r\n  constructor() {\r\n    super({ endpoint: 'api/comments' });\r\n  }\r\n\r\n  createNew = async (data) => {\r\n    const res = await axios({\r\n      headers: {\r\n        Authorization: `Bearer ${token}`,\r\n      },\r\n      method: 'POST',\r\n      url: `${this.api}/${this.endpoint}/addComment`,\r\n      data: {\r\n        comment: data,\r\n      },\r\n    });\r\n\r\n    return res;\r\n  };\r\n\r\n  getByTaskID = async (id) => {\r\n    const res = await axios({\r\n      method: 'GET',\r\n      url: `${this.api}/${this.endpoint}/getCommentByTaskID?id=${id}`,\r\n      data: null,\r\n    });\r\n\r\n    return res;\r\n  };\r\n\r\n  updateByID = async (id, data) => {\r\n    const res = await axios({\r\n      method: 'PUT',\r\n      url: `${this.api}/${this.endpoint}/updateCommentByID?id=${id}`,\r\n      data: {\r\n        comment: data,\r\n      },\r\n    });\r\n\r\n    return res;\r\n  };\r\n}\r\n","import PropTypes from 'prop-types';\r\nimport { useEffect, useState, createRef } from 'react';\r\n\r\n// material-ui\r\nimport { Button, Grid, Avatar, IconButton } from '@mui/material';\r\n\r\n// icons/img\r\nimport { IconMoodSmile, IconPaperclip, IconSend, IconX } from '@tabler/icons';\r\nimport Picker from 'emoji-picker-react';\r\n\r\n// project imports\r\nimport swal from 'sweetalert';\r\nimport CommentAPI from 'services/CommentAPI';\r\nimport UserAPI from 'services/UserAPI';\r\nimport UploadAPI from 'services/UploadAPI';\r\nimport AnimateButton from 'ui-component/extended/AnimateButton';\r\nimport EndcodeFileBase64 from 'utils/endcodeFileBase64';\r\nimport io from 'socket.io-client';\r\nimport { host } from 'services/baseAPI';\r\n\r\n// ==============================|| INPUT COMMENT ||============================== //\r\nconst commentAPI = new CommentAPI();\r\nconst userAPI = new UserAPI();\r\nconst uploadAPI = new UploadAPI();\r\nconst socket = io(host, {\r\n  transports: ['websocket', 'polling'],\r\n  withCredentials: true,\r\n});\r\n\r\nconst InputComment = (props) => {\r\n  const { taskId, onEdit, onClose, editMessage, fileMessage, commentId, inputWidth } = props;\r\n\r\n  const inputRef = createRef();\r\n  const userID = sessionStorage.getItem('id');\r\n\r\n  const [inputStr, setInputStr] = useState('');\r\n  const [sender, setSender] = useState({});\r\n\r\n  const [showEmoji, setShowEmoji] = useState(false);\r\n  const [file, setFile] = useState(false);\r\n\r\n  const handleClose = () => {\r\n    onClose(!onEdit);\r\n  };\r\n\r\n  const onSelectFile = async (e) => {\r\n    const upload = {\r\n      taskID: taskId,\r\n    };\r\n    const base64 = await EndcodeFileBase64(e.target.files[0]);\r\n\r\n    upload.file = base64;\r\n\r\n    uploadAPI\r\n      .uploadFile(upload)\r\n      .then((res) => {\r\n        if (res.data.success === true) {\r\n          socket.emit('upload', res.data.data);\r\n\r\n          setFile(true);\r\n          setInputStr(res.data.data.file);\r\n        }\r\n      })\r\n      .catch(() => {\r\n        swal({\r\n          text: 'Sorry, something went wrong. Please contact to admin for support.',\r\n          buttons: false,\r\n          timer: 5000,\r\n          icon: 'error',\r\n        });\r\n      });\r\n  };\r\n\r\n  const handleShowEmoji = () => {\r\n    inputRef.current.focus();\r\n    setShowEmoji(!showEmoji);\r\n  };\r\n\r\n  const pickEmoji = ({ emoji }, e) => {\r\n    const ref = inputRef.current;\r\n    ref.focus();\r\n    const start = inputStr.substring(0, ref.selectionStart);\r\n    const end = inputStr.substring(ref.selectionStart);\r\n    const text = start + emoji + end;\r\n    setInputStr(text);\r\n    setShowEmoji(false);\r\n  };\r\n\r\n  const handleComment = async (e) => {\r\n    e.preventDefault();\r\n    const comment = {\r\n      message: inputStr,\r\n      taskID: taskId,\r\n    };\r\n\r\n    if (file === true) {\r\n      comment.message = fileMessage;\r\n    }\r\n\r\n    commentAPI\r\n      .createNew(comment)\r\n      .then((res) => {\r\n        if (res.data.success === true) {\r\n          socket.emit('comment', res.data.post);\r\n\r\n          setInputStr('');\r\n          setFile(false);\r\n        }\r\n      })\r\n      .catch(() => {\r\n        swal({\r\n          text: 'Sorry, something went wrong. Please contact to admin for support.',\r\n          buttons: false,\r\n          timer: 5000,\r\n          icon: 'error',\r\n        });\r\n      });\r\n  };\r\n\r\n  const handleEditComment = async (e) => {\r\n    e.preventDefault();\r\n    const comment = {\r\n      message: inputStr,\r\n      taskID: taskId,\r\n    };\r\n\r\n    commentAPI\r\n      .updateByID(commentId, comment)\r\n      .then((res) => {\r\n        if (res.data.success === true) {\r\n          socket.emit('comment', res.data.data);\r\n\r\n          onClose(!onEdit);\r\n        }\r\n      })\r\n      .catch(() => {\r\n        swal({\r\n          text: 'Sorry, something went wrong. Please contact to admin for support.',\r\n          buttons: false,\r\n          timer: 5000,\r\n          icon: 'error',\r\n        });\r\n      });\r\n  };\r\n\r\n  useEffect(() => {\r\n    userAPI.getByID(userID).then((res) => {\r\n      setSender(res.data[0]);\r\n    });\r\n\r\n    if (editMessage) {\r\n      setInputStr(editMessage);\r\n    }\r\n\r\n    if (fileMessage) {\r\n      setFile(true);\r\n      setInputStr(`[${fileMessage.name}]`);\r\n    }\r\n  }, [userID, editMessage, fileMessage]);\r\n\r\n  return (\r\n    <Grid container alignItems=\"flex-start\" sx={{ mt: 1 }}>\r\n      {!editMessage && <Avatar src={sender.avatar && sender.avatar.data} sx={{ width: 40, height: 40, mr: 1 }} />}\r\n\r\n      <Grid sx={{ p: 1, borderRadius: 2, boxShadow: 4, position: 'relative', width: inputWidth }}>\r\n        <textarea\r\n          className=\"comment\"\r\n          placeholder=\"Write a comment...\"\r\n          value={inputStr}\r\n          onChange={(e) => {\r\n            e.target.style.height = 'auto';\r\n            e.target.style.height = e.target.scrollHeight + 'px';\r\n\r\n            setInputStr(e.target.value);\r\n          }}\r\n          ref={inputRef}\r\n        />\r\n\r\n        <Grid item display=\"flex\" justifyContent=\"space-between\" alignItems=\"center\">\r\n          <Grid item display=\"flex\" alignItems=\"center\">\r\n            <AnimateButton>\r\n              <Button\r\n                disableElevation\r\n                disabled={inputStr === '' ? true : false}\r\n                type=\"submit\"\r\n                size=\"small\"\r\n                variant=\"contained\"\r\n                color=\"primary\"\r\n                onClick={!editMessage ? handleComment : handleEditComment}\r\n              >\r\n                {!editMessage ? <IconSend size={20} /> : 'Save'}\r\n              </Button>\r\n            </AnimateButton>\r\n\r\n            {onEdit === true ? (\r\n              <IconButton aria-label=\"image\" component=\"label\" onClick={handleClose}>\r\n                <IconX />\r\n              </IconButton>\r\n            ) : null}\r\n          </Grid>\r\n\r\n          <Grid item display=\"flex\" alignItems=\"center\">\r\n            <IconButton aria-label=\"image\" component=\"label\" onClick={handleShowEmoji}>\r\n              <IconMoodSmile />\r\n            </IconButton>\r\n\r\n            <IconButton aria-label=\"image\" component=\"label\">\r\n              <IconPaperclip />\r\n\r\n              <input type=\"file\" name=\"image\" multiple hidden onChange={onSelectFile} />\r\n            </IconButton>\r\n          </Grid>\r\n        </Grid>\r\n\r\n        {showEmoji && (\r\n          <div style={{ position: 'absolute', top: 95, right: 60 }}>\r\n            <Picker previewConfig={{ showPreview: false }} emojiStyle=\"google\" onEmojiClick={pickEmoji} />\r\n          </div>\r\n        )}\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n};\r\n\r\nInputComment.propTypes = {\r\n  taskId: PropTypes.any.isRequired,\r\n  onEdit: PropTypes.bool,\r\n  onClose: PropTypes.func,\r\n  editMessage: PropTypes.any,\r\n  fileMessage: PropTypes.any,\r\n  commentId: PropTypes.any,\r\n  inputWidth: PropTypes.any,\r\n};\r\n\r\nexport default InputComment;\r\n","import PropTypes from 'prop-types';\r\nimport { useEffect, useState } from 'react';\r\n\r\n// material-ui\r\nimport { Grid, Avatar, Typography } from '@mui/material';\r\n\r\n// icons/img\r\n\r\n// project imports\r\nimport swal from 'sweetalert';\r\nimport CommentAPI from 'services/CommentAPI';\r\nimport InputComment from './Input';\r\nimport io from 'socket.io-client';\r\nimport { host } from 'services/baseAPI';\r\n\r\n// ==============================|| COMMENT FORM ||============================== //\r\nconst commentAPI = new CommentAPI();\r\nconst socket = io(host, {\r\n  transports: ['websocket', 'polling'],\r\n  withCredentials: true,\r\n});\r\n\r\nconst CForm = ({ taskID, fileComment }) => {\r\n  const userId = sessionStorage.getItem('id');\r\n\r\n  const [message, setMessage] = useState([]);\r\n\r\n  const [editMS, setEditMS] = useState(false);\r\n  const [messageId, setMessageId] = useState();\r\n\r\n  const loadData = (id) => {\r\n    commentAPI.getByTaskID(id).then((result) => {\r\n      setMessage(result.data.comment);\r\n    });\r\n  };\r\n\r\n  const handleEdit = (id) => {\r\n    setMessageId(id);\r\n    setEditMS(true);\r\n  };\r\n\r\n  const handleCloseEdit = () => {\r\n    setEditMS(false);\r\n  };\r\n\r\n  const handleDelete = (id) => {\r\n    swal({\r\n      title: 'Are you sure?',\r\n      text: 'Once deleted, you will not be able to recover.',\r\n      icon: 'warning',\r\n      buttons: [true, 'Delete'],\r\n      dangerMode: true,\r\n    }).then((willDelete) => {\r\n      if (willDelete) {\r\n        commentAPI\r\n          .deleteByID(id)\r\n          .then((res) => {\r\n            if (res.status === 200) {\r\n              socket.emit('comment', res.data);\r\n            }\r\n          })\r\n          .catch(() => {\r\n            //Thông báo lỗi\r\n            swal({\r\n              text: 'Sorry, something went wrong. Please contact to admin for support.',\r\n              buttons: false,\r\n              timer: 5000,\r\n              icon: 'error',\r\n            });\r\n          });\r\n      }\r\n    });\r\n  };\r\n\r\n  useEffect(() => {\r\n    loadData(taskID);\r\n\r\n    socket.on('comment', () => {\r\n      loadData(taskID);\r\n    });\r\n  }, [taskID]);\r\n\r\n  return (\r\n    <>\r\n      <InputComment taskId={taskID} inputWidth={435} fileMessage={fileComment} />\r\n\r\n      <Grid\r\n        height={400}\r\n        sx={{\r\n          mt: 4,\r\n          overflow: 'hidden',\r\n          '&:hover': {\r\n            overflowY: 'auto',\r\n            '&::-webkit-scrollbar': {\r\n              width: 7,\r\n            },\r\n            '&::-webkit-scrollbar-track': {\r\n              background: '#f1f1f1',\r\n              borderRadius: 10,\r\n            },\r\n            '&::-webkit-scrollbar-thumb': {\r\n              background: '#888',\r\n              borderRadius: 10,\r\n            },\r\n            '&::-webkit-scrollbar-thumb:hover': {\r\n              background: '#555',\r\n            },\r\n          },\r\n        }}\r\n      >\r\n        {message.map((data) => {\r\n          let createDate = new Date(data.createdAt).toLocaleString();\r\n          let updateDate = new Date(data.updatedAt).toLocaleString();\r\n\r\n          return (\r\n            <Grid key={data._id} item display=\"flex\" alignItems=\"flex-start\" sx={{ mt: 2 }}>\r\n              <Avatar src={data.senderID.avatar.data} sx={{ width: 40, height: 40, mr: 1 }} />\r\n\r\n              <Grid>\r\n                <Grid item display=\"flex\" alignItems=\"center\">\r\n                  <Typography variant=\"h3\" sx={{ mr: 1 }}>\r\n                    {data.senderID.name}\r\n                  </Typography>\r\n\r\n                  <Typography variant=\"subtitle1\">{createDate === updateDate ? createDate : `${updateDate} (fixed)`}</Typography>\r\n                </Grid>\r\n\r\n                {messageId === data._id && editMS === true ? (\r\n                  <InputComment\r\n                    taskId={taskID}\r\n                    onEdit={editMS}\r\n                    onClose={handleCloseEdit}\r\n                    editMessage={data.message}\r\n                    commentId={messageId}\r\n                    inputWidth={435}\r\n                  />\r\n                ) : (\r\n                  <>\r\n                    <Grid sx={{ width: 435, p: 1, borderRadius: 2, boxShadow: 4 }}>\r\n                      <Typography variant=\"h4\" sx={{ mr: 1 }}>\r\n                        {data.message.url ? (\r\n                          <a href={data.message.url} target=\"_blank\">\r\n                            {data.message.name}\r\n                          </a>\r\n                        ) : (\r\n                          <>{data.message}</>\r\n                        )}\r\n                      </Typography>\r\n                    </Grid>\r\n\r\n                    <Grid item display=\"flex\" alignItems=\"center\">\r\n                      {!data.message.url && (\r\n                        <>\r\n                          {data.senderID._id === userId ? (\r\n                            <Typography\r\n                              variant=\"subtitle1\"\r\n                              sx={{ mr: 1, cursor: 'pointer', textDecoration: 'underline', '&:hover': { color: '#90CAF9' } }}\r\n                              onClick={() => handleEdit(data._id)}\r\n                            >\r\n                              Edit\r\n                            </Typography>\r\n                          ) : (\r\n                            <Typography\r\n                              variant=\"subtitle1\"\r\n                              sx={{ mr: 1, cursor: 'pointer', textDecoration: 'underline', '&:hover': { color: '#90CAF9' } }}\r\n                            >\r\n                              Reply\r\n                            </Typography>\r\n                          )}\r\n                        </>\r\n                      )}\r\n\r\n                      <Typography\r\n                        variant=\"subtitle1\"\r\n                        sx={{ cursor: 'pointer', textDecoration: 'underline', '&:hover': { color: '#90CAF9' } }}\r\n                        onClick={() => handleDelete(data._id)}\r\n                      >\r\n                        Delete\r\n                      </Typography>\r\n                    </Grid>\r\n                  </>\r\n                )}\r\n              </Grid>\r\n            </Grid>\r\n          );\r\n        })}\r\n      </Grid>\r\n    </>\r\n  );\r\n};\r\n\r\nCForm.propTypes = {\r\n  taskID: PropTypes.any,\r\n  fileComment: PropTypes.any,\r\n};\r\n\r\nexport default CForm;\r\n","import PropTypes from 'prop-types';\r\nimport { useEffect, useState } from 'react';\r\n\r\n// material-ui\r\nimport { Button, Grid, Avatar, Typography } from '@mui/material';\r\n\r\n// icons/img\r\nimport { IconListDetails, IconPoint } from '@tabler/icons';\r\n\r\n// project imports\r\nimport swal from 'sweetalert';\r\nimport UploadAPI from 'services/UploadAPI';\r\nimport AnimateButton from 'ui-component/extended/AnimateButton';\r\nimport EndcodeFileBase64 from 'utils/endcodeFileBase64';\r\nimport BackgroundLetterAvatars from 'ui-component/BackgroundLetterAvatar';\r\nimport io from 'socket.io-client';\r\nimport { host } from 'services/baseAPI';\r\nimport CForm from './comment/CommentForm';\r\n\r\n// ==============================|| FILE UPLOAD ||============================== //\r\nconst uploadAPI = new UploadAPI();\r\nconst socket = io(host, {\r\n  transports: ['websocket', 'polling'],\r\n  withCredentials: true,\r\n});\r\n\r\nconst FileUpload = ({ taskID, show }) => {\r\n  const [file, setFile] = useState([]);\r\n\r\n  const [message, setMessage] = useState();\r\n\r\n  const loadData = (id) => {\r\n    uploadAPI.getFromTask().then((result) => {\r\n      const arr = [];\r\n\r\n      result.data.data.map((res) => {\r\n        if (res.taskID._id === id) {\r\n          arr.push(res);\r\n        }\r\n      });\r\n\r\n      setFile(arr);\r\n    });\r\n  };\r\n\r\n  const onSelectFile = async (e) => {\r\n    const upload = {\r\n      taskID: taskID,\r\n    };\r\n    const base64 = await EndcodeFileBase64(e.target.files[0]);\r\n    upload.file = base64;\r\n\r\n    uploadAPI\r\n      .uploadFile(upload)\r\n      .then((res) => {\r\n        if (res.data.success === true) {\r\n          socket.emit('upload', res.data.data);\r\n        }\r\n      })\r\n      .catch(() => {\r\n        swal({\r\n          text: 'Sorry, something went wrong. Please contact to admin for support.',\r\n          buttons: false,\r\n          timer: 5000,\r\n          icon: 'error',\r\n        });\r\n      });\r\n  };\r\n\r\n  const handleComment = (id) => {\r\n    file.map((res) => {\r\n      if (res._id === id) {\r\n        setMessage(res.file);\r\n      }\r\n    });\r\n  };\r\n\r\n  const handleDelete = (id) => {\r\n    swal({\r\n      title: 'Are you sure?',\r\n      text: 'Once deleted, you will not be able to recover.',\r\n      icon: 'warning',\r\n      buttons: [true, 'Delete'],\r\n      dangerMode: true,\r\n    }).then((willDelete) => {\r\n      if (willDelete) {\r\n        uploadAPI\r\n          .deleteByID(id)\r\n          .then((res) => {\r\n            if (res.status === 200) {\r\n              socket.emit('upload', res.data);\r\n            }\r\n          })\r\n          .catch(() => {\r\n            //Thông báo lỗi\r\n            swal({\r\n              text: 'Sorry, something went wrong. Please contact to admin for support.',\r\n              buttons: false,\r\n              timer: 5000,\r\n              icon: 'error',\r\n            });\r\n          });\r\n      }\r\n    });\r\n  };\r\n\r\n  useEffect(() => {\r\n    loadData(taskID);\r\n\r\n    socket.on('upload', () => {\r\n      loadData(taskID);\r\n    });\r\n  }, [taskID]);\r\n\r\n  return (\r\n    <>\r\n      {show && (\r\n        <>\r\n          <Grid sx={{ mt: 2, paddingLeft: 4 }}>\r\n            <AnimateButton>\r\n              <Button variant=\"contained\" color=\"primary\" component=\"label\">\r\n                Choose file\r\n                <input type=\"file\" id=\"upload\" multiple hidden onChange={onSelectFile} />\r\n              </Button>\r\n            </AnimateButton>\r\n          </Grid>\r\n\r\n          <Grid\r\n            maxHeight={250}\r\n            sx={{\r\n              paddingLeft: 4,\r\n              overflowY: 'hidden',\r\n              '&:hover': {\r\n                overflowY: 'auto',\r\n                '&::-webkit-scrollbar': {\r\n                  width: 7,\r\n                },\r\n                '&::-webkit-scrollbar-track': {\r\n                  background: '#f1f1f1',\r\n                  borderRadius: 10,\r\n                },\r\n                '&::-webkit-scrollbar-thumb': {\r\n                  background: '#888',\r\n                  borderRadius: 10,\r\n                },\r\n                '&::-webkit-scrollbar-thumb:hover': {\r\n                  background: '#555',\r\n                },\r\n              },\r\n            }}\r\n          >\r\n            {file.map((item) => {\r\n              let createDate = new Date(item.createdAt).toLocaleString();\r\n\r\n              return (\r\n                <Grid\r\n                  key={item._id}\r\n                  sx={{\r\n                    mt: 2,\r\n                    p: 1,\r\n                    width: 450,\r\n                    boxShadow: 4,\r\n                    display: 'flex',\r\n                    alignItems: 'center',\r\n                  }}\r\n                >\r\n                  {item.file.type.match(/[^:/]\\w+\\//)[0] === 'image/' ? (\r\n                    <Avatar src={item.file.url} sx={{ borderRadius: 0, height: 70, width: 100 }} />\r\n                  ) : (\r\n                    <BackgroundLetterAvatars name={item.file.name} h={70} w={100} f={20} />\r\n                  )}\r\n\r\n                  <Grid sx={{ ml: 2 }}>\r\n                    <a href={item.file.url} target=\"_blank\" style={{ textDecoration: 'none' }}>\r\n                      <Typography variant=\"h3\">{item.file.name}</Typography>\r\n                    </a>\r\n\r\n                    <Grid container alignItems=\"center\">\r\n                      <Typography variant=\"subtitle1\">{createDate}</Typography>\r\n\r\n                      <Typography variant=\"subtitle2\">\r\n                        <IconPoint />\r\n                      </Typography>\r\n\r\n                      <Typography\r\n                        variant=\"subtitle1\"\r\n                        sx={{ cursor: 'pointer', textDecoration: 'underline', '&:hover': { color: '#90CAF9' } }}\r\n                        onClick={() => handleComment(item._id)}\r\n                      >\r\n                        Comment\r\n                      </Typography>\r\n\r\n                      <Typography variant=\"subtitle2\">\r\n                        <IconPoint />\r\n                      </Typography>\r\n\r\n                      <Typography\r\n                        variant=\"subtitle1\"\r\n                        sx={{ cursor: 'pointer', textDecoration: 'underline', '&:hover': { color: '#90CAF9' } }}\r\n                        onClick={() => handleDelete(item._id)}\r\n                      >\r\n                        Delete\r\n                      </Typography>\r\n                    </Grid>\r\n                  </Grid>\r\n                </Grid>\r\n              );\r\n            })}\r\n          </Grid>\r\n        </>\r\n      )}\r\n\r\n      <Grid>\r\n        <Grid container alignItems=\"center\" sx={{ mt: 4 }}>\r\n          <IconListDetails />\r\n\r\n          <Typography sx={{ ml: 1 }} color=\"primary\" variant=\"h5\">\r\n            Work:\r\n          </Typography>\r\n        </Grid>\r\n\r\n        <CForm taskID={taskID} fileComment={message} />\r\n      </Grid>\r\n    </>\r\n  );\r\n};\r\n\r\nFileUpload.propTypes = {\r\n  taskID: PropTypes.any,\r\n  show: PropTypes.bool,\r\n};\r\n\r\nexport default FileUpload;\r\n","import PropTypes from 'prop-types';\r\nimport { useEffect, useState } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\n\r\n// material-ui\r\nimport { Box, Grid, Button, Menu, DialogTitle, Select, DialogContent, InputLabel } from '@mui/material';\r\n\r\n// icons\r\n\r\n// project imports\r\nimport swal from 'sweetalert';\r\nimport BoardAPI from 'services/BoardAPI';\r\nimport TaskAPI from 'services/TaskAPI';\r\nimport AnimateButton from 'ui-component/extended/AnimateButton';\r\nimport io from 'socket.io-client';\r\nimport { host } from 'services/baseAPI';\r\n\r\n// ==============================|| MOVE TASK BUTTON ||============================== //\r\nconst boardAPI = new BoardAPI();\r\nconst taskAPI = new TaskAPI();\r\nconst socket = io(host, {\r\n  transports: ['websocket', 'polling'],\r\n  withCredentials: true,\r\n});\r\n\r\nconst lists = [\r\n  {\r\n    id: 0,\r\n    title: 'Backlog',\r\n  },\r\n  {\r\n    id: 1,\r\n    title: 'To-Do',\r\n  },\r\n  {\r\n    id: 2,\r\n    title: 'Doing',\r\n  },\r\n  {\r\n    id: 3,\r\n    title: 'Done',\r\n  },\r\n];\r\n\r\nconst MoveTaskBtn = (props) => {\r\n  const { task, anchorEl, open, handleClose } = props;\r\n  const navigate = useNavigate();\r\n  const userId = sessionStorage.getItem('id');\r\n\r\n  const [board, setBoard] = useState([]);\r\n\r\n  const [currentBoardID, setCurrentBoardID] = useState();\r\n  const [boardID, setBoardID] = useState();\r\n  const [listID, setListID] = useState();\r\n\r\n  const loadData = (id) => {\r\n    boardAPI.getAll().then((result) => {\r\n      const arr = [];\r\n\r\n      result.data.data.map((res) => {\r\n        res.member.map((value) => {\r\n          if (value._id === id) {\r\n            arr.push(res);\r\n          }\r\n        });\r\n      });\r\n\r\n      setBoard(arr);\r\n    });\r\n\r\n    setCurrentBoardID(task.boardID);\r\n    setBoardID(task.boardID);\r\n    setListID(task.status);\r\n  };\r\n\r\n  const handleBoardChange = (event) => {\r\n    setBoardID(event.target.value);\r\n  };\r\n\r\n  const handleListChange = (event) => {\r\n    setListID(event.target.value);\r\n  };\r\n\r\n  const handleSubmit = () => {\r\n    taskAPI.getAll().then((result) => {\r\n      result.data.data.map((res) => {\r\n        if (res._id === task._id) {\r\n          const task = {\r\n            boardID: boardID,\r\n            status: listID,\r\n          };\r\n\r\n          taskAPI\r\n            .updateByID(res._id, task)\r\n            .then((res) => {\r\n              if (res.data.success === true) {\r\n                socket.emit('task', res.data.data);\r\n\r\n                if (res.data.data.boardID !== currentBoardID) {\r\n                  navigate(`/b/${res.data.data.boardID}`, { replace: true });\r\n                }\r\n              }\r\n            })\r\n            .catch(() => {\r\n              swal({\r\n                text: 'Sorry, something went wrong. Please contact to admin for support.',\r\n                buttons: false,\r\n                timer: 5000,\r\n                icon: 'error',\r\n              });\r\n            });\r\n        }\r\n      });\r\n    });\r\n  };\r\n\r\n  useEffect(() => {\r\n    loadData(userId);\r\n  }, [userId]);\r\n\r\n  return (\r\n    <Menu\r\n      anchorEl={anchorEl}\r\n      id=\"account-menu\"\r\n      open={open}\r\n      onClose={handleClose}\r\n      PaperProps={{\r\n        elevation: 0,\r\n        sx: {\r\n          overflow: 'visible',\r\n          filter: 'drop-shadow(0px 2px 8px rgba(0,0,0,0.32))',\r\n          mt: 1.5,\r\n          '& .MuiAvatar-root': {\r\n            width: 80,\r\n            height: 80,\r\n            ml: -0.5,\r\n            mr: 1,\r\n          },\r\n          '&:before': {\r\n            content: '\"\"',\r\n            display: 'block',\r\n            position: 'absolute',\r\n            top: 0,\r\n            right: 14,\r\n            width: 10,\r\n            height: 10,\r\n            transform: 'translateY(-50%) rotate(45deg)',\r\n            zIndex: 0,\r\n          },\r\n        },\r\n      }}\r\n      transformOrigin={{ horizontal: 'right', vertical: 'top' }}\r\n      anchorOrigin={{ horizontal: 'right', vertical: 'bottom' }}\r\n    >\r\n      <Box component=\"form\" onSubmit={handleSubmit} noValidate sx={{ width: 250 }}>\r\n        <DialogTitle display=\"flex\" justifyContent=\"center\" sx={{ fontSize: 16, fontWeight: 500 }}>\r\n          Move Task\r\n        </DialogTitle>\r\n\r\n        <DialogContent spacing={2}>\r\n          <InputLabel>Board</InputLabel>\r\n          <Select fullWidth native id=\"board\" value={boardID} onChange={handleBoardChange}>\r\n            {board.map((data) => (\r\n              <option key={data._id} value={data._id}>\r\n                {data._id === task.boardID ? `${data.name} (currently)` : data.name}\r\n              </option>\r\n            ))}\r\n          </Select>\r\n\r\n          <Grid sx={{ my: 2 }}>\r\n            <InputLabel>List</InputLabel>\r\n            <Select fullWidth native id=\"list\" value={listID} onChange={handleListChange}>\r\n              {lists.map((data) => (\r\n                <option key={data.id} value={data.id}>\r\n                  {data.id === task.status ? `${data.title} (currently)` : data.title}\r\n                </option>\r\n              ))}\r\n            </Select>\r\n          </Grid>\r\n\r\n          <AnimateButton>\r\n            <Button disableElevation size=\"small\" type=\"submit\" variant=\"contained\" color=\"primary\">\r\n              Move\r\n            </Button>\r\n          </AnimateButton>\r\n        </DialogContent>\r\n      </Box>\r\n    </Menu>\r\n  );\r\n};\r\n\r\nMoveTaskBtn.propTypes = {\r\n  task: PropTypes.any,\r\n  anchorEl: PropTypes.any,\r\n  open: PropTypes.any,\r\n  handleClose: PropTypes.any,\r\n};\r\n\r\nexport default MoveTaskBtn;\r\n","export function checkValidDate(dateString) {\r\n  // First check for the pattern\r\n  if (!/^\\d{1,2}\\/\\d{1,2}\\/\\d{4}$/.test(dateString)) return false;\r\n\r\n  // Parse the date parts to integers\r\n  var parts = dateString.split('/');\r\n  var day = parseInt(parts[1], 10);\r\n  var month = parseInt(parts[0], 10);\r\n  var year = parseInt(parts[2], 10);\r\n\r\n  // Check the ranges of month and year\r\n  if (year < 1000 || year > 3000 || month == 0 || month > 12) return false;\r\n\r\n  var monthLength = [31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31];\r\n\r\n  // Adjust for leap years\r\n  if (year % 400 == 0 || (year % 100 != 0 && year % 4 == 0)) monthLength[1] = 29;\r\n\r\n  // Check the range of the day\r\n  return day > 0 && day <= monthLength[month - 1];\r\n}\r\n\r\nexport function checkValidTime(timeString) {\r\n  if (/^([0-9]|[0-9][0-9]|[0-9][0-9][0-9]|[0-9][0-9][0-9][0-9])$/.test(timeString)) return true;\r\n  else if (/^([0-9]|0[0-9]|1[0-9]|2[0-3]):[0-5][0-9]$/.test(timeString)) return true;\r\n}\r\n","import PropTypes from 'prop-types';\r\nimport { useEffect, useState } from 'react';\r\n\r\n// material-ui\r\nimport { Box, Grid, Button, Menu, DialogTitle, DialogContent, Divider, Checkbox, OutlinedInput, Typography } from '@mui/material';\r\n\r\n// icons\r\n\r\n// project imports\r\nimport swal from 'sweetalert';\r\nimport TaskAPI from 'services/TaskAPI';\r\nimport AnimateButton from 'ui-component/extended/AnimateButton';\r\nimport Calendar from 'react-calendar';\r\nimport dayjs from 'dayjs';\r\nimport { checkValidDate, checkValidTime } from 'utils/validateDateFormat';\r\nimport io from 'socket.io-client';\r\nimport { host } from 'services/baseAPI';\r\n\r\n// ==============================|| CALENDAR BUTTON ||============================== //\r\nconst taskAPI = new TaskAPI();\r\nconst socket = io(host, {\r\n  transports: ['websocket', 'polling'],\r\n  withCredentials: true,\r\n});\r\n\r\nconst CalendarBtn = (props) => {\r\n  const { task, anchorEl, open, handleClose, expiredDate } = props;\r\n\r\n  const [time, setTime] = useState(new Date());\r\n\r\n  const [startTime, setStartTime] = useState();\r\n  const [expirationDate, setExpirationDate] = useState();\r\n  const [expirationTime, setExpirationTime] = useState();\r\n\r\n  const [checkStart, setCheckStart] = useState(false);\r\n  const [checkExpired, setCheckExpired] = useState(false);\r\n\r\n  const handleChangeTime = (value) => {\r\n    setTime(value);\r\n\r\n    if (checkStart === true) {\r\n      if (value.length > 0) {\r\n        setStartTime(value[0].toLocaleDateString());\r\n      }\r\n    }\r\n\r\n    if (checkExpired === true) {\r\n      if (value.length > 0) {\r\n        setExpirationDate(value[1].toLocaleDateString());\r\n      }\r\n    }\r\n  };\r\n\r\n  const handleCheckStart = (event) => {\r\n    setCheckStart(event.target.checked);\r\n  };\r\n\r\n  const handleCheckExpired = (event) => {\r\n    setCheckExpired(event.target.checked);\r\n\r\n    if (time.length > 0) {\r\n      setExpirationDate(time[1].toLocaleDateString());\r\n    } else {\r\n      setExpirationDate(time.toLocaleDateString());\r\n    }\r\n  };\r\n\r\n  const handleStartTime = (event) => {\r\n    setStartTime(event.target.value);\r\n  };\r\n\r\n  const handleExpirationDate = (event) => {\r\n    setExpirationDate(event.target.value);\r\n  };\r\n\r\n  const handleExpirationTime = (event) => {\r\n    setExpirationTime(event.target.value);\r\n  };\r\n\r\n  const handleSubmit = () => {\r\n    const editTask = {\r\n      day: {\r\n        startTime: startTime,\r\n        expirationDate: expirationDate,\r\n        expirationTime: expirationTime,\r\n        expired: expiredDate,\r\n      },\r\n    };\r\n\r\n    const startTimeFormat = checkValidDate(editTask.day.startTime);\r\n    const expirationDateFormat = checkValidDate(editTask.day.expirationDate);\r\n    const expirationTimeFormat = checkValidTime(editTask.day.expirationTime);\r\n\r\n    if (!startTimeFormat || !expirationDateFormat) {\r\n      swal({\r\n        title: 'Please enter correct date format.',\r\n        text: \"Example '12/22/2023'.\",\r\n        icon: 'warning',\r\n        buttons: 'Ok',\r\n      });\r\n    } else if (!expirationTimeFormat) {\r\n      swal({\r\n        title: 'Please enter correct time format.',\r\n        text: \"Example '00:00'.\",\r\n        icon: 'warning',\r\n        buttons: 'Ok',\r\n      });\r\n    } else {\r\n      taskAPI\r\n        .updateByID(task._id, editTask)\r\n        .then((res) => {\r\n          if (res.data.success === true) {\r\n            socket.emit('task', res.data.data);\r\n\r\n            handleClose();\r\n          }\r\n        })\r\n        .catch(() => {\r\n          swal({\r\n            text: 'Sorry, something went wrong. Please contact to admin for support.',\r\n            buttons: false,\r\n            timer: 5000,\r\n            icon: 'error',\r\n          });\r\n        });\r\n    }\r\n  };\r\n\r\n  const handleRemoved = () => {\r\n    const editTask = {\r\n      day: {\r\n        startTime: '',\r\n        expirationDate: '',\r\n        expirationTime: '',\r\n      },\r\n    };\r\n\r\n    taskAPI\r\n      .updateByID(task._id, editTask)\r\n      .then((res) => {\r\n        if (res.data.success === true) {\r\n          socket.emit('task', res.data.data);\r\n\r\n          handleClose();\r\n        }\r\n      })\r\n      .catch(() => {\r\n        swal({\r\n          text: 'Sorry, something went wrong. Please contact to admin for support.',\r\n          buttons: false,\r\n          timer: 5000,\r\n          icon: 'error',\r\n        });\r\n      });\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (task.day) {\r\n      if (task.day.startTime !== '' && task.day.expirationDate !== '' && task.day.expirationTime !== '') {\r\n        setCheckStart(true);\r\n        setStartTime(task.day.startTime);\r\n\r\n        setCheckExpired(true);\r\n        setExpirationDate(task.day.expirationDate);\r\n        setExpirationTime(task.day.expirationTime);\r\n      }\r\n    } else if (checkStart === false) {\r\n      setStartTime(new Date().toLocaleDateString());\r\n    }\r\n  }, [task, checkStart, time]);\r\n\r\n  return (\r\n    <Menu\r\n      anchorEl={anchorEl}\r\n      id=\"account-menu\"\r\n      open={open}\r\n      onClose={handleClose}\r\n      PaperProps={{\r\n        elevation: 0,\r\n        sx: {\r\n          overflow: 'visible',\r\n          filter: 'drop-shadow(0px 2px 8px rgba(0,0,0,0.32))',\r\n          mt: 1.5,\r\n          '& .MuiAvatar-root': {\r\n            width: 80,\r\n            height: 80,\r\n            ml: -0.5,\r\n            mr: 1,\r\n          },\r\n          '&:before': {\r\n            content: '\"\"',\r\n            display: 'block',\r\n            position: 'absolute',\r\n            top: 0,\r\n            right: 14,\r\n            width: 10,\r\n            height: 10,\r\n            transform: 'translateY(-50%) rotate(45deg)',\r\n            zIndex: 0,\r\n          },\r\n        },\r\n      }}\r\n      transformOrigin={{ horizontal: 'right', vertical: 'top' }}\r\n      anchorOrigin={{ horizontal: 'right', vertical: 'bottom' }}\r\n    >\r\n      <Box component=\"form\" onSubmit={handleSubmit} noValidate sx={{ width: 400 }}>\r\n        <DialogTitle display=\"flex\" justifyContent=\"center\" sx={{ fontSize: 16, fontWeight: 500 }}>\r\n          Day\r\n        </DialogTitle>\r\n        <Divider />\r\n\r\n        <DialogContent spacing={2}>\r\n          <Calendar\r\n            onChange={handleChangeTime}\r\n            returnValue=\"range\"\r\n            selectRange={true}\r\n            calendarType=\"US\"\r\n            formatMonthYear={(locale, date) => dayjs(date).format('MMMM YYYY')}\r\n            formatShortWeekday={(locale, date) => dayjs(date).format('ddd')}\r\n          />\r\n\r\n          <Grid sx={{ mt: 4 }}>\r\n            <Typography color=\"primary\" variant=\"h5\">\r\n              Start day\r\n            </Typography>\r\n\r\n            <Grid item display=\"flex\" alignItems=\"center\">\r\n              <Checkbox checked={checkStart} onChange={handleCheckStart} />\r\n\r\n              <OutlinedInput\r\n                sx={{ width: 120, mr: 2 }}\r\n                disabled={checkStart === false ? true : false}\r\n                id=\"startTime\"\r\n                type=\"text\"\r\n                value={startTime}\r\n                name=\"startTime\"\r\n                onChange={handleStartTime}\r\n                placeholder=\"MM/DD/YYYY\"\r\n              />\r\n            </Grid>\r\n          </Grid>\r\n\r\n          <Grid sx={{ mt: 2 }}>\r\n            <Typography color=\"primary\" variant=\"h5\">\r\n              Expiration date\r\n            </Typography>\r\n\r\n            <Grid item display=\"flex\" alignItems=\"center\">\r\n              <Checkbox checked={checkExpired} onChange={handleCheckExpired} />\r\n\r\n              <OutlinedInput\r\n                sx={{ width: 120, mr: 2 }}\r\n                disabled={checkExpired === false ? true : false}\r\n                id=\"expirationDate\"\r\n                type=\"text\"\r\n                value={expirationDate}\r\n                name=\"expirationDate\"\r\n                onChange={handleExpirationDate}\r\n                placeholder=\"MM/DD/YYYY\"\r\n              />\r\n\r\n              <OutlinedInput\r\n                sx={{ width: 100 }}\r\n                disabled={checkExpired === false ? true : false}\r\n                id=\"expirationTime\"\r\n                type=\"text\"\r\n                value={expirationTime}\r\n                name=\"expirationTime\"\r\n                onChange={handleExpirationTime}\r\n                placeholder=\"HH:MM\"\r\n              />\r\n            </Grid>\r\n          </Grid>\r\n        </DialogContent>\r\n\r\n        <Grid container alignItems=\"center\" justifyContent=\"space-around\" sx={{ my: 2 }}>\r\n          <AnimateButton>\r\n            <Button disableElevation size=\"small\" onClick={handleRemoved} variant=\"contained\" color=\"primary\">\r\n              Removed\r\n            </Button>\r\n          </AnimateButton>\r\n\r\n          <AnimateButton>\r\n            <Button disableElevation size=\"small\" onClick={handleSubmit} variant=\"contained\" color=\"primary\">\r\n              Save\r\n            </Button>\r\n          </AnimateButton>\r\n        </Grid>\r\n      </Box>\r\n    </Menu>\r\n  );\r\n};\r\n\r\nCalendarBtn.propTypes = {\r\n  task: PropTypes.any,\r\n  anchorEl: PropTypes.any,\r\n  open: PropTypes.any,\r\n  handleClose: PropTypes.any,\r\n  expiredDate: PropTypes.any,\r\n};\r\n\r\nexport default CalendarBtn;\r\n","import PropTypes from 'prop-types';\r\nimport { useEffect, useState } from 'react';\r\nimport { Editor } from 'react-draft-wysiwyg';\r\nimport { EditorState, ContentState, convertFromHTML, convertToRaw } from 'draft-js';\r\nimport draftToMarkdown from 'draftjs-to-markdown';\r\nimport '../../../../node_modules/react-draft-wysiwyg/dist/react-draft-wysiwyg.css';\r\n\r\n// material-ui\r\nimport { Button, OutlinedInput, Typography, Grid, Dialog, Box, DialogContent, MenuList, MenuItem, Checkbox, Chip } from '@mui/material';\r\n\r\n// icons/img\r\nimport {\r\n  IconAlignJustified,\r\n  IconCreditCard,\r\n  IconPaperclip,\r\n  IconUser,\r\n  IconUsers,\r\n  IconClock,\r\n  IconArrowBigRightLines,\r\n  IconArchive,\r\n} from '@tabler/icons';\r\n\r\n// project imports\r\nimport swal from 'sweetalert';\r\nimport TaskAPI from 'services/TaskAPI';\r\nimport BoardAPI from 'services/BoardAPI';\r\nimport UploadAPI from 'services/UploadAPI';\r\nimport AnimateButton from 'ui-component/extended/AnimateButton';\r\nimport DialogForm from 'ui-component/extended/DialogForm';\r\nimport AutocompleteBtn from 'ui-component/extended/AutocompleteBtn';\r\nimport FileUpload from './FileUpload';\r\nimport MoveTaskBtn from 'ui-component/MenuButton/MoveTaskBtn';\r\nimport CalendarBtn from 'ui-component/MenuButton/CalendarBtn';\r\nimport io from 'socket.io-client';\r\nimport { host } from 'services/baseAPI';\r\n\r\n// ==============================|| BOARD FORM ||============================== //\r\nconst taskAPI = new TaskAPI();\r\nconst boardAPI = new BoardAPI();\r\nconst uploadAPI = new UploadAPI();\r\nconst socket = io(host, {\r\n  transports: ['websocket', 'polling'],\r\n  withCredentials: true,\r\n});\r\n\r\nconst TForm = (props) => {\r\n  const { open, onClose, formData, bId, status, dialogForm, formDataID } = props;\r\n\r\n  const [taskForm, setTaskForm] = useState({});\r\n  const [BId, setBId] = useState();\r\n  const [Status, setStatus] = useState();\r\n\r\n  const [editorState, setEditorState] = useState();\r\n  const [describe, setDescribe] = useState();\r\n\r\n  const [TMember, setTMember] = useState([]);\r\n  const [BMember, setBMember] = useState([]);\r\n\r\n  const [show, setShow] = useState();\r\n  const [showMember, setShowMember] = useState(false);\r\n  const [showAttach, setShowAttach] = useState(false);\r\n\r\n  const [anchorElCalendar, setAnchorElCalendar] = useState(null);\r\n  const openCalendar = Boolean(anchorElCalendar);\r\n\r\n  const [anchorElTask, setAnchorElTask] = useState(null);\r\n  const openMoveTask = Boolean(anchorElTask);\r\n\r\n  const [check, setCheck] = useState(false);\r\n  const [expiredDate, setExpiredDate] = useState();\r\n\r\n  const handleClose = () => {\r\n    onClose(!open);\r\n  };\r\n\r\n  const handleShowMember = (id) => {\r\n    setShow(id);\r\n    setShowMember(!showMember);\r\n  };\r\n\r\n  const handleCalendar = (event) => {\r\n    setAnchorElCalendar(event.currentTarget);\r\n  };\r\n\r\n  const handleCloseCalendar = () => {\r\n    setAnchorElCalendar(null);\r\n  };\r\n\r\n  const handleCheck = () => {\r\n    setCheck(!check);\r\n    setExpiredDate('done');\r\n  };\r\n\r\n  const handleShowAttach = (id) => {\r\n    setShow(id);\r\n    setShowAttach(!showAttach);\r\n  };\r\n\r\n  const handleMoveTask = (event) => {\r\n    setAnchorElTask(event.currentTarget);\r\n  };\r\n\r\n  const handleCloseMoveTask = () => {\r\n    setAnchorElTask(null);\r\n  };\r\n\r\n  const handleChange = (event) => {\r\n    const name = event.target.name;\r\n    const value = event.target.value;\r\n    setTaskForm({ ...taskForm, [name]: value });\r\n  };\r\n\r\n  const handleMemberChange = (event, value) => {\r\n    setTMember(value);\r\n  };\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    const data = new FormData(e.currentTarget);\r\n    const task = {\r\n      task: data.get('task'),\r\n      describe: describe,\r\n      member: TMember,\r\n      day: {\r\n        startTime: taskForm.day.startTime,\r\n        expirationDate: taskForm.day.expirationDate,\r\n        expirationTime: taskForm.day.expirationTime,\r\n        expired: check === true ? 'done' : '',\r\n      },\r\n    };\r\n\r\n    if (task.task === '') {\r\n      swal({\r\n        text: 'Please enter a title for the task.',\r\n        buttons: false,\r\n        timer: 3000,\r\n        icon: 'info',\r\n      });\r\n    } else {\r\n      if (data.get('_id') === '') {\r\n        task.status = Status;\r\n        task.boardID = BId;\r\n\r\n        taskAPI\r\n          .createNew(task)\r\n          .then((res) => {\r\n            if (res.data.success === true) {\r\n              socket.emit('task', res.data.data);\r\n\r\n              onClose(!open);\r\n            }\r\n          })\r\n          .catch(() => {\r\n            swal({\r\n              text: 'Sorry, something went wrong. Please contact to admin for support.',\r\n              buttons: false,\r\n              timer: 5000,\r\n              icon: 'error',\r\n            });\r\n          });\r\n      } else {\r\n        taskAPI\r\n          .updateByID(data.get('_id'), task)\r\n          .then((res) => {\r\n            if (res.data.success === true) {\r\n              socket.emit('task', res.data.data);\r\n\r\n              //Thông báo thành công\r\n              swal({\r\n                text: 'Successfully update task.',\r\n                buttons: false,\r\n                timer: 2000,\r\n                icon: 'success',\r\n              });\r\n\r\n              setTimeout(() => {\r\n                onClose(!open);\r\n              }, 2000);\r\n            }\r\n          })\r\n          .catch(() => {\r\n            swal({\r\n              text: 'Sorry, something went wrong. Please contact to admin for support.',\r\n              buttons: false,\r\n              timer: 5000,\r\n              icon: 'error',\r\n            });\r\n          });\r\n      }\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (dialogForm === 0) {\r\n      setTaskForm({\r\n        _id: '',\r\n        task: '',\r\n        day: {\r\n          startTime: '',\r\n          expirationDate: '',\r\n          expirationTime: '',\r\n          expired: '',\r\n        },\r\n      });\r\n      setBId(bId);\r\n      setStatus(status);\r\n      setDescribe('');\r\n      setTMember([]);\r\n    } else if (dialogForm === 1) {\r\n      setTaskForm(formData);\r\n      setStatus(formData.status);\r\n      setEditorState(EditorState.createWithContent(ContentState.createFromBlockArray(convertFromHTML(`<p>${formData.describe}</p>`))));\r\n      setDescribe(formData.describe);\r\n\r\n      if (bId !== undefined) {\r\n        boardAPI.getByID(bId).then((result) => {\r\n          setBMember(result.data[0].member);\r\n        });\r\n      }\r\n\r\n      if (formData.member.length !== 0) {\r\n        setTMember(formData.member);\r\n        setShow(formData._id);\r\n        setShowMember(true);\r\n      } else {\r\n        setShowMember(false);\r\n      }\r\n\r\n      uploadAPI.getFromTask().then((result) => {\r\n        const arr = [];\r\n\r\n        result.data.data.map((res) => {\r\n          if (res.taskID._id === formData._id) {\r\n            arr.push(res);\r\n          }\r\n        });\r\n\r\n        if (arr.length !== 0) {\r\n          setShow(formData._id);\r\n          setShowAttach(true);\r\n        }\r\n      });\r\n\r\n      if (formData._id === formDataID && formData.day) {\r\n        if (formData.day.expired === 'done') {\r\n          setCheck(true);\r\n          setExpiredDate('done');\r\n        } else {\r\n          if (new Date().toLocaleDateString() > formData.day.expirationDate) {\r\n            setExpiredDate('expired');\r\n          } else if (new Date().toLocaleDateString() === formData.day.expirationDate) {\r\n            if (new Date().getHours() > formData.day.expirationTime.split(':')[0]) {\r\n              setExpiredDate('expired');\r\n            } else if (new Date().getHours() === formData.day.expirationTime.split(':')[0]) {\r\n              if (new Date().getMinutes() > formData.day.expirationTime.split(':')[1]) {\r\n                setExpiredDate('expired');\r\n              } else {\r\n                setExpiredDate('');\r\n              }\r\n            } else {\r\n              setExpiredDate('');\r\n            }\r\n          } else {\r\n            setExpiredDate('');\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }, [dialogForm, formData, bId, status, formDataID]);\r\n\r\n  return (\r\n    <Dialog open={open} onClose={handleClose} maxWidth=\"lg\" scroll=\"body\">\r\n      <Box component=\"form\" onSubmit={handleSubmit} noValidate sx={{ mt: 1 }}>\r\n        <DialogContent>\r\n          <DialogForm value={dialogForm} index={0}>\r\n            <Grid sx={{ display: 'none' }}>\r\n              <Typography variant=\"h4\">Id:</Typography>\r\n\r\n              <OutlinedInput id=\"_id\" name=\"_id\" value={taskForm._id} onChange={handleChange} variant=\"standard\" />\r\n            </Grid>\r\n\r\n            <Grid container alignItems=\"center\" sx={{ height: 70 }}>\r\n              <Typography sx={{ mr: 6 }} color=\"primary\" variant=\"h5\">\r\n                Task title:\r\n              </Typography>\r\n\r\n              <OutlinedInput\r\n                id=\"task\"\r\n                type=\"text\"\r\n                value={taskForm.task}\r\n                name=\"task\"\r\n                onChange={handleChange}\r\n                placeholder=\"Enter task title\"\r\n              />\r\n            </Grid>\r\n\r\n            <Grid container alignItems=\"center\" justifyContent=\"space-evenly\" sx={{ mt: 4 }}>\r\n              <AnimateButton>\r\n                <Button disableElevation size=\"large\" onClick={handleClose} variant=\"contained\" color=\"secondary\">\r\n                  Cancel\r\n                </Button>\r\n              </AnimateButton>\r\n\r\n              <AnimateButton>\r\n                <Button disableElevation size=\"large\" type=\"submit\" variant=\"contained\" color=\"primary\">\r\n                  Save\r\n                </Button>\r\n              </AnimateButton>\r\n            </Grid>\r\n          </DialogForm>\r\n\r\n          <DialogForm value={dialogForm} index={1}>\r\n            <Grid item display=\"flex\">\r\n              <Grid sx={{ width: 500, mr: 1 }}>\r\n                <Grid sx={{ display: 'none' }}>\r\n                  <Typography variant=\"h4\">Id:</Typography>\r\n\r\n                  <OutlinedInput id=\"_id\" name=\"_id\" value={taskForm._id} onChange={handleChange} variant=\"standard\" />\r\n                </Grid>\r\n\r\n                <Grid item display=\"flex\" alignItems=\"center\">\r\n                  <IconCreditCard />\r\n\r\n                  <textarea id=\"task\" className=\"task-title\" value={taskForm.task} name=\"task\" onChange={handleChange} />\r\n                </Grid>\r\n\r\n                {show === taskForm._id && showMember && (\r\n                  <Grid>\r\n                    <Grid container alignItems=\"center\" sx={{ mt: 2, mb: 1 }}>\r\n                      <IconUsers />\r\n\r\n                      <Typography sx={{ ml: 1 }} color=\"primary\" variant=\"h5\">\r\n                        Member:\r\n                      </Typography>\r\n                    </Grid>\r\n\r\n                    <Grid sx={{ pl: 4, pr: 2 }}>\r\n                      <AutocompleteBtn options={BMember} member={TMember} handleChange={handleMemberChange} />\r\n                    </Grid>\r\n                  </Grid>\r\n                )}\r\n\r\n                {taskForm.day && taskForm.day.startTime !== '' && taskForm.day.expirationDate !== '' && taskForm.day.expirationTime !== '' && (\r\n                  <Grid container alignItems=\"center\" sx={{ mt: 2, mb: 1 }}>\r\n                    <Grid item display=\"flex\" alignItems=\"center\">\r\n                      <IconClock />\r\n\r\n                      <Typography sx={{ ml: 1 }} color=\"primary\" variant=\"h5\">\r\n                        Expiration date:\r\n                      </Typography>\r\n                    </Grid>\r\n\r\n                    <Checkbox checked={check} onChange={handleCheck} />\r\n\r\n                    <Typography color=\"black\" variant=\"h5\">\r\n                      {taskForm.day.startTime} - {taskForm.day.expirationDate} at {taskForm.day.expirationTime}\r\n                      {check === false && expiredDate === 'expired' && <Chip sx={{ ml: 1 }} size=\"small\" label=\"expired\" color=\"error\" />}\r\n                      {check === true && expiredDate === 'done' && <Chip sx={{ ml: 1 }} size=\"small\" label=\"done\" color=\"success\" />}\r\n                    </Typography>\r\n                  </Grid>\r\n                )}\r\n\r\n                <Grid>\r\n                  <Grid container alignItems=\"center\" sx={{ mt: 4 }}>\r\n                    <IconAlignJustified />\r\n\r\n                    <Typography sx={{ ml: 1 }} color=\"primary\" variant=\"h5\">\r\n                      Describe:\r\n                    </Typography>\r\n                  </Grid>\r\n\r\n                  <Grid sx={{ paddingLeft: 4 }}>\r\n                    <Editor\r\n                      editorState={editorState}\r\n                      toolbarStyle={{ width: 439, border: '1px solid' }}\r\n                      editorStyle={{\r\n                        color: 'black',\r\n                        border: '1px solid',\r\n                        width: 450,\r\n                        paddingRight: 10,\r\n                        paddingLeft: 10,\r\n                      }}\r\n                      onEditorStateChange={(newState) => {\r\n                        setEditorState(newState);\r\n                        setDescribe(editorState && draftToMarkdown(convertToRaw(editorState.getCurrentContent())));\r\n                      }}\r\n                      toolbar={{\r\n                        options: ['inline', 'fontSize', 'fontFamily', 'list', 'textAlign', 'embedded', 'emoji', 'image', 'history'],\r\n                        list: { inDropdown: true },\r\n                        textAlign: { inDropdown: true },\r\n                        link: { inDropdown: true },\r\n                      }}\r\n                      placeholder=\"Add more detailed description...\"\r\n                    />\r\n                  </Grid>\r\n                </Grid>\r\n\r\n                <Grid>\r\n                  {show === taskForm._id && showAttach && (\r\n                    <Grid container alignItems=\"center\" sx={{ mt: 4 }}>\r\n                      <IconPaperclip />\r\n\r\n                      <Typography sx={{ ml: 1 }} color=\"primary\" variant=\"h5\">\r\n                        Attachments:\r\n                      </Typography>\r\n                    </Grid>\r\n                  )}\r\n\r\n                  <FileUpload taskID={taskForm._id} show={showAttach} />\r\n                </Grid>\r\n              </Grid>\r\n\r\n              <MenuList>\r\n                <Typography variant=\"subtitle1\" sx={{ mt: 4 }}>\r\n                  Add to card\r\n                </Typography>\r\n\r\n                <MenuItem sx={{ mb: 2, boxShadow: 2 }} onClick={() => handleShowMember(taskForm._id)}>\r\n                  <Grid sx={{ mr: 1 }}>\r\n                    <IconUser size={16} />\r\n                  </Grid>\r\n                  Member\r\n                </MenuItem>\r\n\r\n                <MenuItem sx={{ mb: 2, boxShadow: 2 }} onClick={handleCalendar}>\r\n                  <Grid sx={{ mr: 1 }}>\r\n                    <IconClock size={16} />\r\n                  </Grid>\r\n                  Day\r\n                </MenuItem>\r\n                <CalendarBtn\r\n                  task={taskForm}\r\n                  anchorEl={anchorElCalendar}\r\n                  open={openCalendar}\r\n                  handleClose={handleCloseCalendar}\r\n                  expiredDate={expiredDate}\r\n                />\r\n\r\n                <MenuItem sx={{ mb: 2, boxShadow: 2 }} onClick={() => handleShowAttach(taskForm._id)}>\r\n                  <Grid sx={{ mr: 1 }}>\r\n                    <IconPaperclip size={16} />\r\n                  </Grid>\r\n                  Attach\r\n                </MenuItem>\r\n\r\n                <Typography variant=\"subtitle1\" sx={{ mt: 4 }}>\r\n                  Manipulation\r\n                </Typography>\r\n\r\n                <MenuItem sx={{ mb: 2, boxShadow: 2 }} onClick={handleMoveTask}>\r\n                  <Grid sx={{ mr: 1 }}>\r\n                    <IconArrowBigRightLines size={16} />\r\n                  </Grid>\r\n                  Move\r\n                </MenuItem>\r\n                <MoveTaskBtn task={taskForm} anchorEl={anchorElTask} open={openMoveTask} handleClose={handleCloseMoveTask} />\r\n\r\n                {/* <MenuItem sx={{ mb: 2, boxShadow: 2 }}>\r\n                  <Grid sx={{ mr: 1 }}>\r\n                    <IconArchive size={16} />\r\n                  </Grid>\r\n                  Storage\r\n                </MenuItem> */}\r\n\r\n                <AnimateButton>\r\n                  <Button sx={{ mt: 4, ml: 3 }} disableElevation size=\"small\" type=\"submit\" variant=\"contained\" color=\"primary\">\r\n                    Save\r\n                  </Button>\r\n                </AnimateButton>\r\n              </MenuList>\r\n            </Grid>\r\n          </DialogForm>\r\n        </DialogContent>\r\n      </Box>\r\n    </Dialog>\r\n  );\r\n};\r\n\r\nTForm.propTypes = {\r\n  open: PropTypes.bool.isRequired,\r\n  onClose: PropTypes.func.isRequired,\r\n  formData: PropTypes.object,\r\n  bId: PropTypes.any,\r\n  status: PropTypes.number,\r\n  dialogForm: PropTypes.number.isRequired,\r\n  formDataID: PropTypes.any,\r\n};\r\n\r\nexport default TForm;\r\n","import PropTypes from 'prop-types';\r\nimport { useState } from 'react';\r\n\r\n// material-ui\r\nimport { Avatar, ListItemButton, ListItemText, Grid } from '@mui/material';\r\n\r\n// icons\r\nimport { IconTrash } from '@tabler/icons';\r\n\r\n// project imports\r\nimport swal from 'sweetalert';\r\nimport TForm from './TaskForm';\r\nimport TaskAPI from 'services/TaskAPI';\r\nimport io from 'socket.io-client';\r\nimport { host } from 'services/baseAPI';\r\n\r\n// ==============================|| TASK ITEM ||============================== //\r\nconst taskAPI = new TaskAPI();\r\nconst socket = io(host, {\r\n  transports: ['websocket', 'polling'],\r\n  withCredentials: true,\r\n});\r\n\r\nconst TaskItem = ({ item, bId }) => {\r\n  const [openT, setOpenT] = useState(false);\r\n\r\n  const dragStart = (e, id) => {\r\n    e.dataTransfer.setData('id', id);\r\n  };\r\n\r\n  const handleEditT = () => {\r\n    setOpenT(true);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setOpenT(false);\r\n  };\r\n\r\n  const handleDelete = (id) => {\r\n    swal({\r\n      title: 'Are you sure?',\r\n      text: 'Once deleted, you will not be able to recover.',\r\n      icon: 'warning',\r\n      buttons: [true, 'Delete'],\r\n      dangerMode: true,\r\n    }).then((willDelete) => {\r\n      if (willDelete) {\r\n        taskAPI\r\n          .deleteByID(id)\r\n          .then((res) => {\r\n            if (res.status === 200) {\r\n              socket.emit('task', res.data);\r\n            }\r\n          })\r\n          .catch(() => {\r\n            //Thông báo lỗi\r\n            swal({\r\n              text: 'Sorry, something went wrong. Please contact to admin for support.',\r\n              buttons: false,\r\n              timer: 5000,\r\n              icon: 'error',\r\n            });\r\n          });\r\n      }\r\n    });\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Grid container sx={{ position: 'relative', p: 1 }}>\r\n        <ListItemButton\r\n          sx={{\r\n            borderRadius: 2,\r\n            width: 215,\r\n            backgroundColor: 'white',\r\n            display: 'flex',\r\n            flexDirection: 'column',\r\n            alignItems: 'flex-start',\r\n            '&:hover': { backgroundColor: 'rgb(250, 250, 250)' },\r\n            '&:hover + .hide': {\r\n              display: 'block',\r\n            },\r\n          }}\r\n          onClick={handleEditT}\r\n          onDragStart={(e) => dragStart(e, item._id)}\r\n          draggable\r\n        >\r\n          <ListItemText primary={item.task} />\r\n\r\n          {item.member !== [] && (\r\n            <div style={{ marginTop: 10, display: 'flex' }}>\r\n              {item.member.map((user) => (\r\n                <Avatar key={user._id} src={user.avatar.data} sx={{ width: 24, height: 24 }} />\r\n              ))}\r\n            </div>\r\n          )}\r\n        </ListItemButton>\r\n\r\n        <Grid\r\n          className=\"hide\"\r\n          sx={{\r\n            display: 'none',\r\n            cursor: 'pointer',\r\n            position: 'absolute',\r\n            top: 18,\r\n            right: 4,\r\n            minWidth: 30,\r\n            p: '0 0 0 0',\r\n            '&:hover': { display: 'block', color: '#90CAF9' },\r\n          }}\r\n          onClick={() => {\r\n            handleDelete(item._id);\r\n          }}\r\n        >\r\n          <IconTrash />\r\n        </Grid>\r\n      </Grid>\r\n      <TForm open={openT} onClose={handleClose} formDataID={item._id} formData={item} bId={bId} dialogForm={1} />\r\n    </>\r\n  );\r\n};\r\n\r\nTaskItem.propTypes = {\r\n  item: PropTypes.object,\r\n  bId: PropTypes.any,\r\n};\r\n\r\nexport default TaskItem;\r\n","import PropTypes from 'prop-types';\r\nimport { useState } from 'react';\r\n\r\n// material-ui\r\nimport { Typography, Grid, Card, Button, CardContent } from '@mui/material';\r\n\r\n// icons\r\nimport { IconPlus } from '@tabler/icons';\r\n\r\n// project imports\r\nimport swal from 'sweetalert';\r\nimport TForm from './TaskForm';\r\nimport TaskItem from './Item';\r\nimport TaskAPI from 'services/TaskAPI';\r\nimport io from 'socket.io-client';\r\nimport { host } from 'services/baseAPI';\r\n\r\n// ==============================|| TASK LIST ||============================== //\r\nconst taskAPI = new TaskAPI();\r\nconst socket = io(host, {\r\n  transports: ['websocket', 'polling'],\r\n  withCredentials: true,\r\n});\r\n\r\nconst TaskList = ({ list, item, bId }) => {\r\n  const [openT, setOpenT] = useState(false);\r\n\r\n  const dragOver = (e) => {\r\n    e.preventDefault();\r\n  };\r\n\r\n  const drop = (e, index) => {\r\n    let id = e.dataTransfer.getData('id');\r\n\r\n    taskAPI.getAll().then((result) => {\r\n      result.data.data.map((res) => {\r\n        if (res._id === id) {\r\n          const task = {\r\n            status: index,\r\n          };\r\n\r\n          taskAPI\r\n            .updateByID(res._id, task)\r\n            .then((res) => {\r\n              if (res.data.success === true) {\r\n                socket.emit('task', res.data.data);\r\n              }\r\n            })\r\n            .catch(() => {\r\n              swal({\r\n                text: 'Sorry, something went wrong. Please contact to admin for support.',\r\n                buttons: false,\r\n                timer: 5000,\r\n                icon: 'error',\r\n              });\r\n            });\r\n        }\r\n      });\r\n    });\r\n  };\r\n\r\n  const handleCreateT = () => {\r\n    setOpenT(true);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setOpenT(false);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Card\r\n        sx={{\r\n          width: 240,\r\n          height: 'fit-content',\r\n          borderRadius: 2,\r\n          backgroundColor: 'rgba(255, 255, 255, 0.5)',\r\n        }}\r\n        variant=\"outlined\"\r\n      >\r\n        <CardContent\r\n          sx={{ backgroundColor: `${list.bgColor}`, height: 100, display: 'flex', justifyContent: 'center', alignItems: 'center' }}\r\n        >\r\n          <Typography variant=\"h3\" sx={{ color: 'white' }}>\r\n            {list.title}\r\n          </Typography>\r\n        </CardContent>\r\n\r\n        <Grid\r\n          sx={{\r\n            height: 285,\r\n            overflowY: 'hidden',\r\n            '&:hover': {\r\n              overflowY: 'auto',\r\n              '&::-webkit-scrollbar': {\r\n                width: 7,\r\n              },\r\n              '&::-webkit-scrollbar-track': {\r\n                background: '#f1f1f1',\r\n                borderRadius: 10,\r\n              },\r\n              '&::-webkit-scrollbar-thumb': {\r\n                background: '#888',\r\n                borderRadius: 10,\r\n              },\r\n              '&::-webkit-scrollbar-thumb:hover': {\r\n                background: '#555',\r\n              },\r\n            },\r\n          }}\r\n          onDragOver={(e) => dragOver(e)}\r\n          onDrop={(e) => drop(e, list.id)}\r\n        >\r\n          {item.map((data) => (\r\n            <div key={data._id}>{data.status === list.id && <TaskItem item={data} bId={bId} />}</div>\r\n          ))}\r\n        </Grid>\r\n\r\n        <Button\r\n          variant=\"contained\"\r\n          sx={{ mx: 1, my: 2, borderRadius: 2, height: 40, width: 212 }}\r\n          onClick={handleCreateT}\r\n          startIcon={<IconPlus size={20} />}\r\n        >\r\n          Add task\r\n        </Button>\r\n      </Card>\r\n\r\n      <TForm open={openT} onClose={handleClose} bId={bId} status={list.id} dialogForm={0} />\r\n    </>\r\n  );\r\n};\r\n\r\nTaskList.propTypes = {\r\n  list: PropTypes.object,\r\n  item: PropTypes.array,\r\n  bId: PropTypes.any,\r\n};\r\n\r\nexport default TaskList;\r\n","import { useEffect, useState } from 'react';\r\nimport { useNavigate, useParams } from 'react-router';\r\n\r\n// material-ui\r\nimport { Avatar, Typography, Grid, Button, Tooltip, IconButton, Menu, MenuItem, Divider } from '@mui/material';\r\n\r\n// icons\r\nimport { IconPencil } from '@tabler/icons';\r\n\r\n// project imports\r\nimport BoardAPI from 'services/BoardAPI';\r\nimport BForm from 'views/board/BoardForm';\r\nimport TaskList from './task/List';\r\nimport FilterBtn from 'ui-component/MenuButton/FilterBtn';\r\nimport io from 'socket.io-client';\r\nimport { host } from 'services/baseAPI';\r\n\r\n// ==============================|| BOARD DETAIL ||============================== //\r\nconst boardAPI = new BoardAPI();\r\nconst socket = io(host, {\r\n  transports: ['websocket', 'polling'],\r\n  withCredentials: true,\r\n});\r\n\r\nconst lists = [\r\n  {\r\n    id: 0,\r\n    title: 'Backlog',\r\n    bgColor: 'rgb(4, 124, 188)',\r\n  },\r\n  {\r\n    id: 1,\r\n    title: 'To-Do',\r\n    bgColor: 'rgb(236, 92, 68)',\r\n  },\r\n  {\r\n    id: 2,\r\n    title: 'Doing',\r\n    bgColor: 'rgb(236, 92, 68)',\r\n  },\r\n  {\r\n    id: 3,\r\n    title: 'Done',\r\n    bgColor: 'rgb(100, 188, 76)',\r\n  },\r\n];\r\n\r\nconst date = [\r\n  {\r\n    id: 0,\r\n    label: 'No expiration date',\r\n    iconColor: 'grey',\r\n    task: [],\r\n  },\r\n  {\r\n    id: 1,\r\n    label: 'Task done',\r\n    iconColor: 'green',\r\n    task: [],\r\n  },\r\n  {\r\n    id: 2,\r\n    label: 'Out of date',\r\n    iconColor: 'red',\r\n    task: [],\r\n  },\r\n];\r\n\r\nconst Detail = () => {\r\n  const { boardId } = useParams();\r\n  const navigate = useNavigate();\r\n\r\n  const [open, setOpen] = useState(false);\r\n\r\n  const [board, setBoard] = useState({});\r\n  const [bgImg, setBgImg] = useState({});\r\n  const [task, setTask] = useState([]);\r\n\r\n  const [BMember, setBMember] = useState([]);\r\n\r\n  const [anchorEl, setAnchorEl] = useState(null);\r\n  const [userID, setUserID] = useState();\r\n  const openUser = Boolean(anchorEl);\r\n\r\n  const [checkNone, setCheckNone] = useState(false);\r\n  const [check, setCheck] = useState(false);\r\n\r\n  const [dateID, setDateID] = useState();\r\n  const [checkDate, setCheckDate] = useState(false);\r\n\r\n  const handleClick = (event, id) => {\r\n    setAnchorEl(event.currentTarget);\r\n    setUserID(id);\r\n  };\r\n\r\n  const handleCloseUser = () => {\r\n    setAnchorEl(null);\r\n  };\r\n\r\n  const loadData = (id) => {\r\n    boardAPI.getByID(id).then((result) => {\r\n      let noDate = [];\r\n      let taskDone = [];\r\n      let expired = [];\r\n\r\n      result.data[0].tasks.map((res) => {\r\n        if (res.day) {\r\n          if (res.day.expired === 'done') {\r\n            taskDone.push(res);\r\n          } else if (res.day.startTime !== '' && res.day.expirationDate !== '' && res.day.expirationTime !== '') {\r\n            if (new Date().toLocaleDateString() > res.day.expirationDate) {\r\n              expired.push(res);\r\n            } else if (new Date().toLocaleDateString() === res.day.expirationDate) {\r\n              if (new Date().getHours() > res.day.expirationTime.split(':')[0]) {\r\n                expired.push(res);\r\n              } else if (new Date().getHours() === res.day.expirationTime.split(':')[0]) {\r\n                if (new Date().getMinutes() > res.day.expirationTime.split(':')[1]) {\r\n                  expired.push(res);\r\n                }\r\n              }\r\n            }\r\n          }\r\n        } else {\r\n          noDate.push(res);\r\n        }\r\n      });\r\n\r\n      date[0].task = noDate;\r\n      date[1].task = taskDone;\r\n      date[2].task = expired;\r\n\r\n      setBoard(result.data[0]);\r\n      setBgImg(result.data[0].bgImg);\r\n      setTask(result.data[0].tasks);\r\n      setBMember(result.data[0].member);\r\n    });\r\n  };\r\n\r\n  const handleFilterMemberNone = (event) => {\r\n    setCheckNone(event.target.checked);\r\n    setCheck(false);\r\n\r\n    boardAPI.getByID(boardId).then((result) => {\r\n      let arr = [];\r\n\r\n      result.data[0].tasks.map((res) => {\r\n        if (res.member.length === 0) {\r\n          arr.push(res);\r\n        }\r\n      });\r\n\r\n      if (event.target.checked === true) {\r\n        setTask(arr);\r\n      } else {\r\n        setTask(result.data[0].tasks);\r\n      }\r\n    });\r\n  };\r\n\r\n  const handleFilterMember = (event, id) => {\r\n    setUserID(id);\r\n    setCheckNone(false);\r\n    setCheck(event.target.checked);\r\n\r\n    boardAPI.getByID(boardId).then((result) => {\r\n      let arr = [];\r\n\r\n      result.data[0].tasks.map((res) => {\r\n        res.member.map((data) => {\r\n          if (data._id === id) {\r\n            arr.push(res);\r\n          }\r\n        });\r\n      });\r\n\r\n      if (event.target.checked === true) {\r\n        setTask(arr);\r\n      } else {\r\n        setTask(result.data[0].tasks);\r\n      }\r\n    });\r\n  };\r\n\r\n  const handleFilterDate = (event, id) => {\r\n    setDateID(id);\r\n    setCheckDate(event.target.checked);\r\n\r\n    boardAPI.getByID(boardId).then((result) => {\r\n      if (event.target.checked === true) {\r\n        if (id === 0) {\r\n          setTask(date[0].task);\r\n        } else if (id === 1) {\r\n          setTask(date[1].task);\r\n        } else if (id === 2) {\r\n          setTask(date[2].task);\r\n        }\r\n      } else {\r\n        setTask(result.data[0].tasks);\r\n      }\r\n    });\r\n  };\r\n\r\n  const handleEdit = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  useEffect(() => {\r\n    loadData(boardId);\r\n\r\n    socket.on('board', () => {\r\n      loadData(boardId);\r\n    });\r\n\r\n    socket.on('task', () => {\r\n      loadData(boardId);\r\n    });\r\n  }, [boardId]);\r\n\r\n  return (\r\n    <>\r\n      <Grid container justifyContent=\"space-between\" alignItems=\"center\" sx={{ mb: 2, px: 2 }}>\r\n        <Typography variant=\"h2\" sx={{ fontWeight: 500 }}>\r\n          {board.name}\r\n        </Typography>\r\n\r\n        <Grid item display=\"flex\">\r\n          <Grid sx={{ mr: 2 }}>\r\n            <FilterBtn\r\n              page=\"board\"\r\n              userId={userID}\r\n              checkMember={check}\r\n              checkNone={checkNone}\r\n              member={board.member}\r\n              handleFilterMemberNone={handleFilterMemberNone}\r\n              handleFilterMember={handleFilterMember}\r\n              checkDate={checkDate}\r\n              date={date}\r\n              dateId={dateID}\r\n              handleFilterDate={handleFilterDate}\r\n            />\r\n          </Grid>\r\n\r\n          {BMember.map((user) => (\r\n            <div key={user._id}>\r\n              <Tooltip title={user.name}>\r\n                <IconButton\r\n                  onClick={(e) => handleClick(e, user._id)}\r\n                  aria-controls={openUser ? 'account-menu' : undefined}\r\n                  aria-haspopup=\"true\"\r\n                  aria-expanded={openUser ? 'true' : undefined}\r\n                >\r\n                  <Avatar src={user.avatar.data} sx={{ width: 30, height: 30 }} />\r\n                </IconButton>\r\n              </Tooltip>\r\n\r\n              {userID === user._id && (\r\n                <Menu\r\n                  anchorEl={anchorEl}\r\n                  id=\"account-menu\"\r\n                  open={openUser}\r\n                  onClose={handleCloseUser}\r\n                  PaperProps={{\r\n                    elevation: 0,\r\n                    sx: {\r\n                      overflow: 'visible',\r\n                      filter: 'drop-shadow(0px 2px 8px rgba(0,0,0,0.32))',\r\n                      mt: 1.5,\r\n                      '& .MuiAvatar-root': {\r\n                        width: 80,\r\n                        height: 80,\r\n                        ml: -0.5,\r\n                        mr: 1,\r\n                      },\r\n                      '&:before': {\r\n                        content: '\"\"',\r\n                        display: 'block',\r\n                        position: 'absolute',\r\n                        top: 0,\r\n                        right: 14,\r\n                        width: 10,\r\n                        height: 10,\r\n                        transform: 'translateY(-50%) rotate(45deg)',\r\n                        zIndex: 0,\r\n                      },\r\n                    },\r\n                  }}\r\n                  transformOrigin={{ horizontal: 'right', vertical: 'top' }}\r\n                  anchorOrigin={{ horizontal: 'right', vertical: 'bottom' }}\r\n                >\r\n                  <Grid container justifyContent=\"center\" alignItems=\"center\" sx={{ p: 3 }}>\r\n                    <Avatar alt=\"profile user\" src={user.avatar.data} sx={{ mr: 2 }} />\r\n\r\n                    <Grid>\r\n                      <Typography variant=\"h3\">{user.name}</Typography>\r\n\r\n                      <Typography variant=\"subtitle2\">{user.email}</Typography>\r\n                    </Grid>\r\n                  </Grid>\r\n                  <Divider />\r\n\r\n                  <MenuItem onClick={() => navigate(`/u/profile/${user._id}`, { replace: true })}>View profile</MenuItem>\r\n                </Menu>\r\n              )}\r\n            </div>\r\n          ))}\r\n\r\n          <Button variant=\"contained\" sx={{ ml: 2, height: 'fit-content' }} onClick={handleEdit} startIcon={<IconPencil size={20} />}>\r\n            Edit\r\n          </Button>\r\n        </Grid>\r\n      </Grid>\r\n\r\n      <Grid\r\n        container\r\n        justifyContent=\"space-evenly\"\r\n        sx={{\r\n          py: 2,\r\n          backgroundImage: `url('${bgImg.data}')`,\r\n          backgroundSize: 'cover',\r\n          backgroundRepeat: 'no-repeat',\r\n          backgroundClip: 'border-box',\r\n        }}\r\n      >\r\n        {lists.map((value) => (\r\n          <TaskList key={value.id} list={value} item={task} bId={boardId} />\r\n        ))}\r\n      </Grid>\r\n\r\n      <BForm open={open} onClose={handleClose} formData={board} wsId={board.workSpaceID} dialogForm={1} />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Detail;\r\n"],"names":["TaskAPI","BaseAPI","constructor","super","endpoint","createNew","async","axios","method","url","this","api","data","task","getAll","updateByID","id","StyledMenu","styled","props","elevation","anchorOrigin","vertical","horizontal","transformOrigin","theme","borderRadius","marginTop","spacing","minWidth","color","palette","mode","grey","boxShadow","padding","fontSize","text","secondary","marginRight","backgroundColor","alpha","primary","main","action","selectedOpacity","page","userId","checkMember","checkNone","member","handleFilterMemberNone","handleFilterMember","checkBoard","boardId","board","handleFilterBoard","checkDate","date","dateId","handleFilterDate","anchorEl","setAnchorEl","useState","open","Boolean","undefined","variant","disableElevation","onClick","event","currentTarget","startIcon","size","MenuListProps","onClose","sx","display","flexDirection","m","component","control","checked","onChange","e","src","width","height","mr","label","map","user","_id","avatar","name","iconColor","style","UploadAPI","uploadFile","upload","getFromTask","getFromComment","token","sessionStorage","getItem","CommentAPI","headers","Authorization","comment","getByTaskID","commentAPI","userAPI","UserAPI","uploadAPI","socket","io","host","transports","withCredentials","taskId","onEdit","editMessage","fileMessage","commentId","inputWidth","inputRef","createRef","userID","inputStr","setInputStr","sender","setSender","showEmoji","setShowEmoji","file","setFile","useEffect","getByID","then","res","Grid","container","alignItems","mt","Avatar","p","position","className","placeholder","value","target","scrollHeight","ref","item","justifyContent","AnimateButton","Button","disabled","type","preventDefault","message","taskID","success","emit","catch","swal","buttons","timer","icon","post","IconButton","current","focus","multiple","hidden","base64","EndcodeFileBase64","files","top","right","previewConfig","showPreview","emojiStyle","onEmojiClick","emoji","start","substring","selectionStart","end","fileComment","setMessage","editMS","setEditMS","messageId","setMessageId","loadData","result","handleCloseEdit","on","Input","overflow","overflowY","background","createDate","Date","createdAt","toLocaleString","updateDate","updatedAt","senderID","Typography","href","cursor","textDecoration","handleEdit","handleDelete","title","dangerMode","willDelete","deleteByID","status","show","arr","push","paddingLeft","maxHeight","match","BackgroundLetterAvatar","h","w","f","ml","handleComment","boardAPI","BoardAPI","taskAPI","lists","handleClose","navigate","useNavigate","setBoard","currentBoardID","setCurrentBoardID","boardID","setBoardID","listID","setListID","Menu","PaperProps","filter","content","transform","zIndex","Box","onSubmit","replace","noValidate","DialogTitle","fontWeight","DialogContent","InputLabel","Select","fullWidth","native","my","checkValidDate","dateString","test","parts","split","day","parseInt","month","year","monthLength","expiredDate","time","setTime","startTime","setStartTime","expirationDate","setExpirationDate","expirationTime","setExpirationTime","checkStart","setCheckStart","checkExpired","setCheckExpired","handleSubmit","editTask","expired","startTimeFormat","expirationDateFormat","expirationTimeFormat","timeString","toLocaleDateString","Divider","length","returnValue","selectRange","calendarType","formatMonthYear","locale","dayjs","format","formatShortWeekday","Checkbox","OutlinedInput","formData","bId","dialogForm","formDataID","taskForm","setTaskForm","BId","setBId","Status","setStatus","editorState","setEditorState","describe","setDescribe","TMember","setTMember","BMember","setBMember","setShow","showMember","setShowMember","showAttach","setShowAttach","anchorElCalendar","setAnchorElCalendar","openCalendar","anchorElTask","setAnchorElTask","openMoveTask","check","setCheck","setExpiredDate","handleChange","EditorState","ContentState","convertFromHTML","getHours","getMinutes","Dialog","maxWidth","scroll","FormData","get","setTimeout","DialogForm","index","mb","pl","pr","AutocompleteBtn","options","Chip","Editor","toolbarStyle","border","editorStyle","paddingRight","onEditorStateChange","newState","draftToMarkdown","convertToRaw","getCurrentContent","toolbar","list","inDropdown","textAlign","link","MenuList","MenuItem","handleShowMember","handleShowAttach","openT","setOpenT","ListItemButton","onDragStart","dataTransfer","setData","dragStart","draggable","ListItemText","Card","CardContent","bgColor","onDragOver","dragOver","onDrop","getData","drop","mx","useParams","setOpen","bgImg","setBgImg","setTask","setUserID","openUser","setCheckNone","dateID","setDateID","setCheckDate","handleCloseUser","noDate","taskDone","tasks","px","FilterBtn","Tooltip","handleClick","alt","email","py","backgroundImage","backgroundSize","backgroundRepeat","backgroundClip","wsId","workSpaceID"],"sourceRoot":""}