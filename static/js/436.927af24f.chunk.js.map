{"version":3,"file":"static/js/436.927af24f.chunk.js","mappings":"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","sources":["../node_modules/@mui/material/CardMedia/cardMediaClasses.js","../node_modules/@mui/material/CardMedia/CardMedia.js","views/dashboard/BoardList.js","views/dashboard/index.js"],"sourcesContent":["import { generateUtilityClass, generateUtilityClasses } from '@mui/base';\nexport function getCardMediaUtilityClass(slot) {\n  return generateUtilityClass('MuiCardMedia', slot);\n}\nconst cardMediaClasses = generateUtilityClasses('MuiCardMedia', ['root', 'media', 'img']);\nexport default cardMediaClasses;","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"children\", \"className\", \"component\", \"image\", \"src\", \"style\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { chainPropTypes } from '@mui/utils';\nimport { unstable_composeClasses as composeClasses } from '@mui/base';\nimport useThemeProps from '../styles/useThemeProps';\nimport styled from '../styles/styled';\nimport { getCardMediaUtilityClass } from './cardMediaClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nconst useUtilityClasses = ownerState => {\n  const {\n    classes,\n    isMediaComponent,\n    isImageComponent\n  } = ownerState;\n  const slots = {\n    root: ['root', isMediaComponent && 'media', isImageComponent && 'img']\n  };\n  return composeClasses(slots, getCardMediaUtilityClass, classes);\n};\n\nconst CardMediaRoot = styled('div', {\n  name: 'MuiCardMedia',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    const {\n      isMediaComponent,\n      isImageComponent\n    } = ownerState;\n    return [styles.root, isMediaComponent && styles.media, isImageComponent && styles.img];\n  }\n})(({\n  ownerState\n}) => _extends({\n  display: 'block',\n  backgroundSize: 'cover',\n  backgroundRepeat: 'no-repeat',\n  backgroundPosition: 'center'\n}, ownerState.isMediaComponent && {\n  width: '100%'\n}, ownerState.isImageComponent && {\n  // ⚠️ object-fit is not supported by IE11.\n  objectFit: 'cover'\n}));\nconst MEDIA_COMPONENTS = ['video', 'audio', 'picture', 'iframe', 'img'];\nconst IMAGE_COMPONENTS = ['picture', 'img'];\nconst CardMedia = /*#__PURE__*/React.forwardRef(function CardMedia(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiCardMedia'\n  });\n\n  const {\n    children,\n    className,\n    component = 'div',\n    image,\n    src,\n    style\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  const isMediaComponent = MEDIA_COMPONENTS.indexOf(component) !== -1;\n  const composedStyle = !isMediaComponent && image ? _extends({\n    backgroundImage: `url(\"${image}\")`\n  }, style) : style;\n\n  const ownerState = _extends({}, props, {\n    component,\n    isMediaComponent,\n    isImageComponent: IMAGE_COMPONENTS.indexOf(component) !== -1\n  });\n\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(CardMediaRoot, _extends({\n    className: clsx(classes.root, className),\n    as: component,\n    role: !isMediaComponent && image ? 'img' : undefined,\n    ref: ref,\n    style: composedStyle,\n    ownerState: ownerState,\n    src: isMediaComponent ? image || src : undefined\n  }, other, {\n    children: children\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? CardMedia.propTypes\n/* remove-proptypes */\n= {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content of the component.\n   */\n  children: chainPropTypes(PropTypes.node, props => {\n    if (!props.children && !props.image && !props.src && !props.component) {\n      return new Error('MUI: Either `children`, `image`, `src` or `component` prop must be specified.');\n    }\n\n    return null;\n  }),\n\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n\n  /**\n   * Image to be displayed as a background image.\n   * Either `image` or `src` prop must be specified.\n   * Note that caller must specify height otherwise the image will not be visible.\n   */\n  image: PropTypes.string,\n\n  /**\n   * An alias for `image` property.\n   * Available only with media components.\n   * Media components: `video`, `audio`, `picture`, `iframe`, `img`.\n   */\n  src: PropTypes.string,\n\n  /**\n   * @ignore\n   */\n  style: PropTypes.object,\n\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport default CardMedia;","import PropTypes from 'prop-types';\r\nimport { useEffect, useState } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\n\r\n// material-ui\r\nimport { Card, CardMedia, Grid, Typography } from '@mui/material';\r\n\r\n// project import\r\nimport WorkSpaceAPI from 'services/WorkSpaceAPI';\r\nimport io from 'socket.io-client';\r\nimport { host } from 'services/baseAPI';\r\n\r\n// ==============================|| BOARD LIST ||============================== //\r\nconst workSpaceAPI = new WorkSpaceAPI();\r\nconst socket = io(host);\r\n\r\nconst BoardList = ({ id }) => {\r\n  const navigate = useNavigate();\r\n\r\n  const [board, setBoard] = useState([]);\r\n\r\n  const loadData = (id) => {\r\n    workSpaceAPI.getByID(id).then((result) => {\r\n      setBoard(result.data[0].boards);\r\n    });\r\n  };\r\n\r\n  useEffect(() => {\r\n    loadData(id);\r\n\r\n    socket.on('board', () => {\r\n      loadData(id);\r\n    });\r\n  }, [id]);\r\n\r\n  return (\r\n    <>\r\n      {board.map((value) => (\r\n        <Grid item xs={3} sm={3} md={3} key={value._id} sx={{ position: 'relative' }}>\r\n          <Card>\r\n            <CardMedia\r\n              height={130}\r\n              sx={{ cursor: 'pointer' }}\r\n              component=\"img\"\r\n              alt=\"board\"\r\n              src={value.bgImg.data}\r\n              onClick={() => navigate(`/b/${value._id}`, { replace: true })}\r\n            />\r\n          </Card>\r\n\r\n          <Typography\r\n            sx={{\r\n              position: 'absolute',\r\n              top: 40,\r\n              left: 40,\r\n              color: 'white',\r\n              overflow: 'hidden',\r\n              wordBreak: 'break-word',\r\n            }}\r\n            variant=\"h3\"\r\n          >\r\n            {value.name}\r\n          </Typography>\r\n        </Grid>\r\n      ))}\r\n    </>\r\n  );\r\n};\r\n\r\nBoardList.propTypes = {\r\n  id: PropTypes.any.isRequired,\r\n};\r\n\r\nexport default BoardList;\r\n","import { useEffect, useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\n\n// material-ui\nimport { Avatar, Typography, Stack, Grid, Button, Divider } from '@mui/material';\n\n// project imports\nimport MainCard from 'ui-component/cards/MainCard';\nimport WorkSpaceAPI from 'services/WorkSpaceAPI';\nimport BoardList from './BoardList';\nimport AnimateButton from 'ui-component/extended/AnimateButton';\nimport BackgroundLetterAvatars from 'ui-component/BackgroundLetterAvatar';\nimport WSForm from 'views/workspace/WorkSpaceForm';\nimport io from 'socket.io-client';\nimport { host } from 'services/baseAPI';\n\n// ==============================|| DEFAULT DASHBOARD ||============================== //\nconst workSpaceAPI = new WorkSpaceAPI();\nconst socket = io(host);\n\nconst Dashboard = () => {\n  const navigate = useNavigate();\n  const userId = sessionStorage.getItem('id');\n\n  const [workspace, setWorkSpace] = useState([]);\n\n  const [openWS, setOpenWS] = useState(false);\n\n  const loadData = (id) => {\n    workSpaceAPI.getAll().then((result) => {\n      const ws = [];\n\n      result.data.data.map((res) => {\n        if (res.member) {\n          res.member.map((value) => {\n            if (value._id === id) {\n              ws.push(res);\n            }\n          });\n        }\n      });\n      setWorkSpace(ws);\n    });\n  };\n\n  const handleCreateWS = () => {\n    setOpenWS(true);\n  };\n\n  const handleCloseWS = () => {\n    setOpenWS(false);\n  };\n\n  useEffect(() => {\n    loadData(userId);\n\n    socket.on('workspace', () => {\n      loadData(userId);\n    });\n  }, [userId]);\n\n  return (\n    <>\n      <Typography variant=\"h2\" sx={{ mb: 3 }}>\n        Your Work Spaces\n      </Typography>\n\n      <MainCard sx={{ height: '100%' }}>\n        {workspace.length === 0 ? (\n          <Grid container alignItems=\"center\">\n            <Typography variant=\"h4\" sx={{ mr: 1 }}>\n              You are not a member of any workspace.\n            </Typography>\n\n            <Typography\n              variant=\"subtitle1\"\n              sx={{ cursor: 'pointer', textDecoration: 'underline', '&:hover': { color: '#90CAF9' } }}\n              onClick={handleCreateWS}\n            >\n              Create a Workspace\n            </Typography>\n          </Grid>\n        ) : (\n          <Stack spacing={2}>\n            {workspace.map((value) => (\n              <div key={value._id}>\n                <Stack spacing={2} sx={{ mb: 4 }}>\n                  <Grid item display=\"flex\" justifyContent=\"space-between\" alignItems=\"center\">\n                    <Grid container alignItems=\"center\">\n                      {value.logo.data === '' ? (\n                        <BackgroundLetterAvatars name={value.name} h={50} w={50} f={30} />\n                      ) : (\n                        <Avatar src={value.logo.data} variant=\"rounded\" />\n                      )}\n\n                      <Typography variant=\"h2\" sx={{ ml: 1, fontWeight: 500 }}>\n                        {value.name}\n                      </Typography>\n                    </Grid>\n\n                    <AnimateButton>\n                      <Button\n                        disableElevation\n                        onClick={() => navigate(`/w/detail/${value._id}`, { replace: true })}\n                        variant=\"contained\"\n                        color=\"primary\"\n                      >\n                        Detail\n                      </Button>\n                    </AnimateButton>\n                  </Grid>\n\n                  <Grid container spacing={2}>\n                    <BoardList id={value._id} />\n                  </Grid>\n                </Stack>\n                <Divider />\n              </div>\n            ))}\n          </Stack>\n        )}\n      </MainCard>\n\n      <WSForm open={openWS} onClose={handleCloseWS} dialogForm={0} />\n    </>\n  );\n};\n\nexport default Dashboard;\n"],"names":["getCardMediaUtilityClass","slot","generateUtilityClass","generateUtilityClasses","_excluded","CardMediaRoot","styled","name","overridesResolver","props","styles","ownerState","isMediaComponent","isImageComponent","root","media","img","_extends","display","backgroundSize","backgroundRepeat","backgroundPosition","width","objectFit","MEDIA_COMPONENTS","IMAGE_COMPONENTS","React","inProps","ref","useThemeProps","children","className","component","image","src","style","other","_objectWithoutPropertiesLoose","indexOf","composedStyle","backgroundImage","classes","slots","composeClasses","useUtilityClasses","_jsx","clsx","as","role","undefined","workSpaceAPI","WorkSpaceAPI","socket","io","host","id","navigate","useNavigate","board","setBoard","useState","loadData","getByID","then","result","data","boards","useEffect","on","map","value","Grid","item","xs","sm","md","sx","position","Card","height","cursor","alt","bgImg","onClick","_id","replace","Typography","top","left","color","overflow","wordBreak","variant","userId","sessionStorage","getItem","workspace","setWorkSpace","openWS","setOpenWS","getAll","ws","res","member","push","mb","length","container","alignItems","mr","textDecoration","spacing","justifyContent","logo","h","w","f","ml","fontWeight","disableElevation","open","onClose","dialogForm"],"sourceRoot":""}