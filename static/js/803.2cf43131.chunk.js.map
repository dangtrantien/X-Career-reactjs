{"version":3,"file":"static/js/803.2cf43131.chunk.js","mappings":"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","sources":["services/TaskAPI.js","ui-component/MenuButton/FilterBtn.js","views/user/EditProfile.js","views/user/PersonalInfomation.js","views/user/Work.js","views/user/Profile.js"],"sourcesContent":["import axios from 'axios';\r\nimport { BaseAPI } from './baseAPI';\r\n\r\nexport default class TaskAPI extends BaseAPI {\r\n  constructor() {\r\n    super({ endpoint: 'api/tasks' });\r\n  }\r\n\r\n  createNew = async (data) => {\r\n    const res = await axios({\r\n      method: 'POST',\r\n      url: `${this.api}/${this.endpoint}/createTask`,\r\n      data: {\r\n        task: data,\r\n      },\r\n    });\r\n\r\n    return res;\r\n  };\r\n\r\n  getAll = async () => {\r\n    const res = await axios({\r\n      method: 'GET',\r\n      url: `${this.api}/${this.endpoint}/getAllTasksOfAllBoards`,\r\n      data: null,\r\n    });\r\n\r\n    return res;\r\n  };\r\n\r\n  updateByID = async (id, data) => {\r\n    const res = await axios({\r\n      method: 'PUT',\r\n      url: `${this.api}/${this.endpoint}/updateTaskByID?id=${id}`,\r\n      data: {\r\n        task: data,\r\n      },\r\n    });\r\n\r\n    return res;\r\n  };\r\n}\r\n","import PropTypes from 'prop-types';\r\nimport { useState } from 'react';\r\n\r\n// material-ui\r\nimport { styled, alpha } from '@mui/material/styles';\r\nimport { Avatar, Button, Checkbox, FormControl, FormControlLabel, FormGroup, FormLabel, Grid, Menu } from '@mui/material';\r\n\r\n// icons\r\nimport { IconFilter } from '@tabler/icons';\r\n\r\n// project imports\r\n\r\n// ==============================|| FILTER MENU ||============================== //\r\n\r\nconst StyledMenu = styled((props) => (\r\n  <Menu\r\n    elevation={0}\r\n    anchorOrigin={{\r\n      vertical: 'bottom',\r\n      horizontal: 'right',\r\n    }}\r\n    transformOrigin={{\r\n      vertical: 'top',\r\n      horizontal: 'right',\r\n    }}\r\n    {...props}\r\n  />\r\n))(({ theme }) => ({\r\n  '& .MuiPaper-root': {\r\n    borderRadius: 6,\r\n    marginTop: theme.spacing(1),\r\n    minWidth: 180,\r\n    color: theme.palette.mode === 'light' ? 'rgb(55, 65, 81)' : theme.palette.grey[300],\r\n    boxShadow:\r\n      'rgb(255, 255, 255) 0px 0px 0px 0px, rgba(0, 0, 0, 0.05) 0px 0px 0px 1px, rgba(0, 0, 0, 0.1) 0px 10px 15px -3px, rgba(0, 0, 0, 0.05) 0px 4px 6px -2px',\r\n    '& .MuiMenu-list': {\r\n      padding: '4px 0',\r\n    },\r\n    '& .MuiMenuItem-root': {\r\n      '& .MuiSvgIcon-root': {\r\n        fontSize: 18,\r\n        color: theme.palette.text.secondary,\r\n        marginRight: theme.spacing(1.5),\r\n      },\r\n      '&:active': {\r\n        backgroundColor: alpha(theme.palette.primary.main, theme.palette.action.selectedOpacity),\r\n      },\r\n    },\r\n  },\r\n}));\r\n\r\nconst FilterBtn = (props) => {\r\n  const { page, id, check, checkNone, handleFilterNone, handleFilter, member, board, date } = props;\r\n\r\n  const [anchorEl, setAnchorEl] = useState(null);\r\n  const open = Boolean(anchorEl);\r\n\r\n  const handleClick = (event) => {\r\n    setAnchorEl(event.currentTarget);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setAnchorEl(null);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Button\r\n        id=\"demo-customized-button\"\r\n        aria-controls={open ? 'demo-customized-menu' : undefined}\r\n        aria-haspopup=\"true\"\r\n        aria-expanded={open ? 'true' : undefined}\r\n        variant=\"contained\"\r\n        disableElevation\r\n        onClick={handleClick}\r\n        startIcon={<IconFilter size={20} />}\r\n      >\r\n        filter\r\n      </Button>\r\n      <StyledMenu\r\n        id=\"demo-customized-menu\"\r\n        MenuListProps={{\r\n          'aria-labelledby': 'demo-customized-button',\r\n        }}\r\n        anchorEl={anchorEl}\r\n        open={open}\r\n        onClose={handleClose}\r\n      >\r\n        {page === 'board' && (\r\n          <Grid sx={{ display: 'flex', flexDirection: 'column' }}>\r\n            <FormControl sx={{ m: '16px 16px 0 16px' }} component=\"fieldset\" variant=\"standard\">\r\n              <FormLabel component=\"legend\">Filter by member</FormLabel>\r\n\r\n              <FormGroup>\r\n                <FormControlLabel\r\n                  control={\r\n                    <>\r\n                      <Checkbox\r\n                        checked={checkNone}\r\n                        onChange={(e) => {\r\n                          handleFilterNone(e);\r\n                        }}\r\n                      />\r\n                      <Avatar src={''} sx={{ width: 20, height: 20, mr: 1 }} />\r\n                    </>\r\n                  }\r\n                  label=\"No membres\"\r\n                />\r\n                {member &&\r\n                  member.map((user) => (\r\n                    <FormControlLabel\r\n                      key={user._id}\r\n                      control={\r\n                        <>\r\n                          <Checkbox\r\n                            checked={id === user._id ? check : false}\r\n                            onChange={(e) => {\r\n                              handleFilter(e, user._id);\r\n                            }}\r\n                          />\r\n                          <Avatar src={user.avatar.data} sx={{ width: 20, height: 20, mr: 1 }} />\r\n                        </>\r\n                      }\r\n                      label={user.name}\r\n                    />\r\n                  ))}\r\n              </FormGroup>\r\n            </FormControl>\r\n\r\n            {/* <FormControl sx={{ m: 2 }} component=\"fieldset\" variant=\"standard\">\r\n              <FormLabel component=\"legend\">Filter by date</FormLabel>\r\n            </FormControl> */}\r\n          </Grid>\r\n        )}\r\n\r\n        {page === 'user' && (\r\n          <Grid sx={{ display: 'flex', flexDirection: 'column' }}>\r\n            <FormControl sx={{ m: '16px 16px 0 16px' }} component=\"fieldset\" variant=\"standard\">\r\n              <FormLabel component=\"legend\">Filter by board</FormLabel>\r\n\r\n              <FormGroup>\r\n                {board &&\r\n                  board.map((data) => (\r\n                    <FormControlLabel\r\n                      key={data._id}\r\n                      control={\r\n                        <>\r\n                          <Checkbox\r\n                            checked={id === data._id ? check : false}\r\n                            onChange={(e) => {\r\n                              handleFilter(e, data._id);\r\n                            }}\r\n                          />\r\n                        </>\r\n                      }\r\n                      label={data.name}\r\n                    />\r\n                  ))}\r\n              </FormGroup>\r\n            </FormControl>\r\n\r\n            {/* <MenuItem onClick={handleClick} disableRipple>\r\n              Filter by expiration date\r\n            </MenuItem> */}\r\n          </Grid>\r\n        )}\r\n      </StyledMenu>\r\n    </>\r\n  );\r\n};\r\n\r\nFilterBtn.propTypes = {\r\n  page: PropTypes.string,\r\n  id: PropTypes.any,\r\n  check: PropTypes.bool,\r\n  checkNone: PropTypes.bool,\r\n  handleFilterNone: PropTypes.any,\r\n  handleFilter: PropTypes.any,\r\n  member: PropTypes.array,\r\n  board: PropTypes.array,\r\n  date: PropTypes.array,\r\n};\r\n\r\nexport default FilterBtn;\r\n","import PropTypes from 'prop-types';\r\nimport { useState, useEffect } from 'react';\r\n\r\n// material-ui\r\nimport {\r\n  Box,\r\n  Button,\r\n  OutlinedInput,\r\n  Typography,\r\n  Grid,\r\n  FormControlLabel,\r\n  Radio,\r\n  RadioGroup,\r\n  Dialog,\r\n  DialogTitle,\r\n  DialogContent,\r\n} from '@mui/material';\r\n\r\n// project import\r\nimport swal from 'sweetalert';\r\nimport UserAPI from 'services/UserAPI';\r\nimport InputFileButton from 'ui-component/extended/InputFileButton';\r\nimport EndcodeFileBase64 from 'utils/endcodeFileBase64';\r\nimport AnimateButton from 'ui-component/extended/AnimateButton';\r\nimport io from 'socket.io-client';\r\nimport { host } from 'services/baseAPI';\r\n\r\n// ==============================|| EDIT USER PROFILE PAGE ||============================== //\r\nconst userAPI = new UserAPI();\r\nconst socket = io(host, {\r\n  transports: ['websocket', 'polling'],\r\n  withCredentials: true,\r\n});\r\n\r\nconst EditProfile = (props) => {\r\n  const { open, onClose, formData } = props;\r\n  const [user, setUser] = useState({});\r\n\r\n  const handleClose = () => {\r\n    onClose(!open);\r\n  };\r\n\r\n  const handleChange = (event) => {\r\n    const name = event.target.name;\r\n    const value = event.target.value;\r\n    setUser({ ...user, [name]: value });\r\n  };\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    const data = new FormData(e.currentTarget);\r\n    const editUser = {\r\n      name: data.get('name'),\r\n      email: data.get('email'),\r\n      gender: data.get('gender'),\r\n      group: data.get('group'),\r\n      position: data.get('position'),\r\n      address: data.get('address'),\r\n    };\r\n\r\n    let re =\r\n      /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\r\n\r\n    if (editUser.name === '') {\r\n      swal({\r\n        text: 'Name is required.',\r\n        buttons: false,\r\n        timer: 2000,\r\n        icon: 'warning',\r\n      });\r\n    } else if (editUser.email === '' || !re.test(editUser.email)) {\r\n      swal({\r\n        text: 'Email is required and must be a valid email.',\r\n        buttons: false,\r\n        timer: 3000,\r\n        icon: 'warning',\r\n      });\r\n    } else {\r\n      if (data.get('avatar').name !== '') {\r\n        //Convert file to base64 string\r\n        const base64 = await EndcodeFileBase64(data.get('avatar'));\r\n\r\n        //Kiểm tra có đúng là image hay không\r\n        if (base64.type.match(/[^:/]\\w+\\//)[0] === 'image/') {\r\n          editUser.avatar = base64;\r\n\r\n          userAPI\r\n            .updateByID(user._id, editUser)\r\n            .then((res) => {\r\n              if (res.data.success === true) {\r\n                socket.emit('user', res.data.data);\r\n\r\n                swal({\r\n                  text: 'Successfully updated profile.',\r\n                  buttons: false,\r\n                  timer: 3000,\r\n                  icon: 'success',\r\n                });\r\n                setTimeout(() => {\r\n                  onClose(!open);\r\n                }, 3000);\r\n              }\r\n            })\r\n            .catch(() => {\r\n              swal({\r\n                text: 'Sorry, something went wrong. Please contact to admin for support.',\r\n                buttons: false,\r\n                timer: 5000,\r\n                icon: 'error',\r\n              });\r\n            });\r\n        } else {\r\n          swal({\r\n            text: \"Wrong file's type, please choose only image.\",\r\n            buttons: false,\r\n            timer: 3000,\r\n            icon: 'warning',\r\n          });\r\n        }\r\n      } else {\r\n        userAPI\r\n          .updateByID(user._id, editUser)\r\n          .then((res) => {\r\n            if (res.data.success === true) {\r\n              socket.emit('user', res.data.data);\r\n\r\n              swal({\r\n                text: 'Successfully updated profile.',\r\n                buttons: false,\r\n                timer: 3000,\r\n                icon: 'success',\r\n              });\r\n              setTimeout(() => {\r\n                onClose(!open);\r\n              }, 3000);\r\n            }\r\n          })\r\n          .catch(() => {\r\n            swal({\r\n              text: 'Sorry, something went wrong. Please contact to admin for support.',\r\n              buttons: false,\r\n              timer: 5000,\r\n              icon: 'error',\r\n            });\r\n          });\r\n      }\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    setUser(formData);\r\n  }, [formData]);\r\n\r\n  return (\r\n    <>\r\n      <Dialog open={open} onClose={handleClose} scroll=\"body\">\r\n        <Box component=\"form\" onSubmit={handleSubmit} noValidate sx={{ mt: 1, width: 500 }}>\r\n          <DialogTitle sx={{ textAlign: 'center' }} color=\"primary\" variant=\"h2\">\r\n            Edit profile\r\n          </DialogTitle>\r\n\r\n          <DialogContent spacing={2} dividers>\r\n            <Grid container alignItems=\"center\">\r\n              <Typography sx={{ mr: 15 }} color=\"primary\" variant=\"h5\">\r\n                Avatar:\r\n              </Typography>\r\n\r\n              <InputFileButton defaultValue={user.avatar && user.avatar.data} name=\"avatar\" />\r\n            </Grid>\r\n\r\n            <Grid container justifyContent=\"space-between\" alignItems=\"center\" sx={{ height: 70 }}>\r\n              <Typography color=\"primary\" variant=\"h5\">\r\n                Display name:\r\n              </Typography>\r\n\r\n              <OutlinedInput\r\n                sx={{ width: 2 / 3 }}\r\n                id=\"name\"\r\n                type=\"text\"\r\n                value={user.name}\r\n                name=\"name\"\r\n                onChange={handleChange}\r\n                placeholder=\"Enter display name\"\r\n              />\r\n            </Grid>\r\n\r\n            <Grid container justifyContent=\"space-between\" alignItems=\"center\" sx={{ height: 70 }}>\r\n              <Typography color=\"primary\" variant=\"h5\">\r\n                Email address:\r\n              </Typography>\r\n\r\n              <OutlinedInput\r\n                sx={{ width: 2 / 3 }}\r\n                id=\"email\"\r\n                type=\"email\"\r\n                value={user.email}\r\n                name=\"email\"\r\n                onChange={handleChange}\r\n                placeholder=\"Enter email address\"\r\n              />\r\n            </Grid>\r\n\r\n            <Grid container alignItems=\"center\" sx={{ height: 70 }}>\r\n              <Typography sx={{ mr: 15 }} color=\"primary\" variant=\"h5\">\r\n                Gender:\r\n              </Typography>\r\n\r\n              <RadioGroup row name=\"gender\" value={user.gender} onChange={handleChange}>\r\n                <FormControlLabel value=\"Female\" control={<Radio />} label=\"Female\" />\r\n                <FormControlLabel value=\"Male\" control={<Radio />} label=\"Male\" />\r\n              </RadioGroup>\r\n            </Grid>\r\n\r\n            <Grid container justifyContent=\"space-between\" alignItems=\"center\" sx={{ height: 70 }}>\r\n              <Typography color=\"primary\" variant=\"h5\">\r\n                Group:\r\n              </Typography>\r\n\r\n              <OutlinedInput\r\n                sx={{ width: 2 / 3 }}\r\n                id=\"group\"\r\n                type=\"text\"\r\n                value={user.group}\r\n                name=\"group\"\r\n                onChange={handleChange}\r\n                placeholder=\"Enter group\"\r\n              />\r\n            </Grid>\r\n\r\n            <Grid container justifyContent=\"space-between\" alignItems=\"center\" sx={{ height: 70 }}>\r\n              <Typography color=\"primary\" variant=\"h5\">\r\n                Position:\r\n              </Typography>\r\n\r\n              <OutlinedInput\r\n                sx={{ width: 2 / 3 }}\r\n                id=\"position\"\r\n                type=\"text\"\r\n                value={user.position}\r\n                name=\"position\"\r\n                onChange={handleChange}\r\n                placeholder=\"Enter position\"\r\n              />\r\n            </Grid>\r\n\r\n            <Grid container justifyContent=\"space-between\" alignItems=\"center\" sx={{ height: 70 }}>\r\n              <Typography color=\"primary\" variant=\"h5\">\r\n                Address:\r\n              </Typography>\r\n\r\n              <OutlinedInput\r\n                sx={{ width: 2 / 3 }}\r\n                id=\"address\"\r\n                type=\"text\"\r\n                name=\"address\"\r\n                value={user.address}\r\n                onChange={handleChange}\r\n                placeholder=\"Enter address\"\r\n              />\r\n            </Grid>\r\n          </DialogContent>\r\n\r\n          <Grid container alignItems=\"center\" justifyContent=\"space-around\" sx={{ my: 2 }}>\r\n            <AnimateButton>\r\n              <Button disableElevation size=\"large\" onClick={handleClose} variant=\"contained\" color=\"secondary\">\r\n                Cancel\r\n              </Button>\r\n            </AnimateButton>\r\n\r\n            <AnimateButton>\r\n              <Button disableElevation size=\"large\" type=\"submit\" variant=\"contained\" color=\"primary\">\r\n                Save\r\n              </Button>\r\n            </AnimateButton>\r\n          </Grid>\r\n        </Box>\r\n      </Dialog>\r\n    </>\r\n  );\r\n};\r\n\r\nEditProfile.propTypes = {\r\n  open: PropTypes.bool.isRequired,\r\n  onClose: PropTypes.func.isRequired,\r\n  formData: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default EditProfile;\r\n","import { useEffect, useState } from 'react';\r\nimport { useParams } from 'react-router';\r\n\r\n// material-ui\r\nimport { Typography, Divider, Grid, Stack } from '@mui/material';\r\n\r\n// project import\r\nimport UserAPI from 'services/UserAPI';\r\nimport io from 'socket.io-client';\r\nimport { host } from 'services/baseAPI';\r\n\r\n// ==============================|| PERSONAL INFOMATION ||============================== //\r\nconst userAPI = new UserAPI();\r\nconst socket = io(host, {\r\n  transports: ['websocket', 'polling'],\r\n  withCredentials: true,\r\n});\r\n\r\nconst PersonalInfo = () => {\r\n  const { userId } = useParams();\r\n\r\n  const [user, setUser] = useState({});\r\n\r\n  const loadData = (id) => {\r\n    userAPI.getByID(id).then((res) => setUser(res.data[0]));\r\n  };\r\n\r\n  useEffect(() => {\r\n    loadData(userId);\r\n\r\n    socket.on('user', () => {\r\n      loadData(userId);\r\n    });\r\n  }, [userId]);\r\n\r\n  return (\r\n    <Grid sx={{ my: 5, px: 45 }}>\r\n      <Stack spacing={2} sx={{ mx: 10 }}>\r\n        <Grid container alignItems=\"center\">\r\n          <Typography sx={{ mr: 2 }} color=\"primary\" variant=\"h5\">\r\n            Display name:\r\n          </Typography>\r\n\r\n          <Typography variant=\"h5\">{user.name === undefined ? user.email : user.name}</Typography>\r\n        </Grid>\r\n        <Divider sx={{ borderBottom: '1px solid' }} />\r\n\r\n        <Grid container alignItems=\"center\">\r\n          <Typography sx={{ mr: 8 }} color=\"primary\" variant=\"h5\">\r\n            Email:\r\n          </Typography>\r\n\r\n          <Typography variant=\"h5\">{user.email}</Typography>\r\n        </Grid>\r\n        <Divider sx={{ borderBottom: '1px solid' }} />\r\n\r\n        <Grid container alignItems=\"center\">\r\n          <Typography sx={{ mr: 7 }} color=\"primary\" variant=\"h5\">\r\n            Gender:\r\n          </Typography>\r\n\r\n          <Typography variant=\"h5\">{user.gender}</Typography>\r\n        </Grid>\r\n        <Divider sx={{ borderBottom: '1px solid' }} />\r\n\r\n        <Grid container alignItems=\"center\">\r\n          <Typography sx={{ mr: 8 }} color=\"primary\" variant=\"h5\">\r\n            Group:\r\n          </Typography>\r\n\r\n          <Typography variant=\"h5\">{user.group}</Typography>\r\n        </Grid>\r\n        <Divider sx={{ borderBottom: '1px solid' }} />\r\n\r\n        <Grid container alignItems=\"center\">\r\n          <Typography sx={{ mr: 6 }} color=\"primary\" variant=\"h5\">\r\n            Position:\r\n          </Typography>\r\n\r\n          <Typography variant=\"h5\">{user.position}</Typography>\r\n        </Grid>\r\n        <Divider sx={{ borderBottom: '1px solid' }} />\r\n\r\n        <Grid container alignItems=\"center\">\r\n          <Typography sx={{ mr: 6 }} color=\"primary\" variant=\"h5\">\r\n            Address:\r\n          </Typography>\r\n\r\n          <Typography variant=\"h5\">{user.address}</Typography>\r\n        </Grid>\r\n        <Divider sx={{ borderBottom: '1px solid' }} />\r\n      </Stack>\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport default PersonalInfo;\r\n","import { useEffect, useState } from 'react';\r\nimport { useNavigate, useParams } from 'react-router';\r\n\r\n// material-ui\r\nimport { Typography, Grid, Table, TableBody, TableRow, TableCell, TableHead, Avatar, TablePagination, TableContainer } from '@mui/material';\r\n\r\n// icons\r\nimport { IconList, IconUsers } from '@tabler/icons';\r\n\r\n// project import\r\nimport WorkSpaceAPI from 'services/WorkSpaceAPI';\r\nimport BoardAPI from 'services/BoardAPI';\r\nimport TaskAPI from 'services/TaskAPI';\r\nimport BackgroundLetterAvatars from 'ui-component/BackgroundLetterAvatar';\r\nimport FilterBtn from 'ui-component/MenuButton/FilterBtn';\r\nimport io from 'socket.io-client';\r\nimport { host } from 'services/baseAPI';\r\n\r\n// ==============================|| WORK ||============================== //\r\nconst workSpaceAPI = new WorkSpaceAPI();\r\nconst boardAPI = new BoardAPI();\r\nconst taskAPI = new TaskAPI();\r\nconst socket = io(host, {\r\n  transports: ['websocket', 'polling'],\r\n  withCredentials: true,\r\n});\r\n\r\nconst lists = [\r\n  {\r\n    id: 0,\r\n    title: 'Backlog',\r\n  },\r\n  {\r\n    id: 1,\r\n    title: 'To-Do',\r\n  },\r\n  {\r\n    id: 2,\r\n    title: 'Doing',\r\n  },\r\n  {\r\n    id: 3,\r\n    title: 'Done',\r\n  },\r\n];\r\n\r\nconst Work = () => {\r\n  const { userId } = useParams();\r\n  const navigate = useNavigate();\r\n\r\n  const [workspace, setWorkSpace] = useState([]);\r\n  const [board, setBoard] = useState([]);\r\n  const [task, setTask] = useState([]);\r\n\r\n  const [wsPage, setWSPage] = useState(0);\r\n  const [wsRowsPerPage, setWSRowsPerPage] = useState(5);\r\n\r\n  const [taskPage, setTaskPage] = useState(0);\r\n  const [taskRowsPerPage, setTaskRowsPerPage] = useState(5);\r\n\r\n  const [boardID, setBoardID] = useState();\r\n  const [check, setCheck] = useState(false);\r\n\r\n  const loadData = (id) => {\r\n    workSpaceAPI.getAll().then((result) => {\r\n      let arr = [];\r\n\r\n      result.data.data.map((res) => {\r\n        res.member.map((value) => {\r\n          if (value._id === id) {\r\n            arr.push(res);\r\n          }\r\n        });\r\n      });\r\n\r\n      setWorkSpace(arr);\r\n    });\r\n\r\n    boardAPI.getAll().then((result) => {\r\n      let arr = [];\r\n\r\n      result.data.data.map((res) => {\r\n        res.member.map((value) => {\r\n          if (value._id === id) {\r\n            arr.push(res);\r\n          }\r\n        });\r\n      });\r\n\r\n      setBoard(arr);\r\n    });\r\n\r\n    taskAPI.getAll().then((result) => {\r\n      let arr = [];\r\n\r\n      result.data.data.map((res) => {\r\n        res.member.map((value) => {\r\n          if (value._id === id) {\r\n            arr.push(res);\r\n          }\r\n        });\r\n      });\r\n\r\n      setTask(arr);\r\n    });\r\n  };\r\n\r\n  const handleChangeWSPage = (event, newPage) => {\r\n    setWSPage(newPage);\r\n  };\r\n\r\n  const handleChangeWSRowsPerPage = (event) => {\r\n    setWSRowsPerPage(+event.target.value);\r\n    setWSPage(0);\r\n  };\r\n\r\n  const handleChangeTaskPage = (event, newPage) => {\r\n    setTaskPage(newPage);\r\n  };\r\n\r\n  const handleChangeTaskRowsPerPage = (event) => {\r\n    setTaskRowsPerPage(+event.target.value);\r\n    setTaskPage(0);\r\n  };\r\n\r\n  const handleFilter = (event, id) => {\r\n    setBoardID(id);\r\n    setCheck(event.target.checked);\r\n\r\n    taskAPI.getAll().then((result) => {\r\n      let arr = [];\r\n      let filter = [];\r\n\r\n      result.data.data.map((res) => {\r\n        res.member.map((value) => {\r\n          if (value._id === userId) {\r\n            arr.push(res);\r\n\r\n            if (res.boardID._id === id) {\r\n              filter.push(res);\r\n            }\r\n          }\r\n        });\r\n      });\r\n\r\n      if (event.target.checked === true) {\r\n        setTask(filter);\r\n      } else {\r\n        setTask(arr);\r\n      }\r\n    });\r\n  };\r\n\r\n  useEffect(() => {\r\n    loadData(userId);\r\n\r\n    socket.on('workspace', () => {\r\n      loadData(userId);\r\n    });\r\n\r\n    socket.on('board', () => {\r\n      loadData(userId);\r\n    });\r\n\r\n    socket.on('task', () => {\r\n      loadData(userId);\r\n    });\r\n  }, [userId]);\r\n\r\n  return (\r\n    <Grid sx={{ my: 5, px: 20 }}>\r\n      <Grid sx={{ px: 30 }}>\r\n        <Grid item display=\"flex\" alignItems=\"center\">\r\n          <IconUsers />\r\n\r\n          <Typography variant=\"h3\" sx={{ ml: 2 }}>\r\n            Workspaces\r\n          </Typography>\r\n        </Grid>\r\n        {workspace.length === 0 ? (\r\n          <Grid container justifyContent=\"center\" alignItems=\"center\" sx={{ mt: 2, height: 150, bgcolor: 'rgba(128, 128, 128, 0.1)' }}>\r\n            <Typography variant=\"h4\">Can't see any workspace. You must be added to the workspace to see them.</Typography>\r\n          </Grid>\r\n        ) : (\r\n          <>\r\n            <TableContainer\r\n              sx={{\r\n                maxHeight: 500,\r\n                overflow: 'hidden',\r\n                '&:hover': {\r\n                  overflow: 'auto',\r\n                  '&::-webkit-scrollbar': {\r\n                    width: 7,\r\n                  },\r\n                  '&::-webkit-scrollbar-track': {\r\n                    background: '#f1f1f1',\r\n                    borderRadius: 10,\r\n                  },\r\n                  '&::-webkit-scrollbar-thumb': {\r\n                    background: '#888',\r\n                    borderRadius: 10,\r\n                  },\r\n                  '&::-webkit-scrollbar-thumb:hover': {\r\n                    background: '#555',\r\n                  },\r\n                },\r\n              }}\r\n            >\r\n              <Table>\r\n                <TableBody>\r\n                  {workspace.slice(wsPage * wsRowsPerPage, wsPage * wsRowsPerPage + wsRowsPerPage).map((data) => (\r\n                    <TableRow\r\n                      key={data._id}\r\n                      hover\r\n                      onClick={() => {\r\n                        navigate(`/w/detail/${data._id}`, { replace: true });\r\n                      }}\r\n                      sx={{ cursor: 'pointer' }}\r\n                    >\r\n                      <TableCell sx={{ display: 'flex', alignItems: 'center' }}>\r\n                        {data.logo && (\r\n                          <>\r\n                            {data.logo.data === '' ? (\r\n                              <BackgroundLetterAvatars name={data.name} h={30} w={30} f={24} />\r\n                            ) : (\r\n                              <Avatar src={data.logo.data} variant=\"rounded\" sx={{ height: 30, width: 30 }} />\r\n                            )}\r\n                          </>\r\n                        )}\r\n\r\n                        <Typography variant=\"h5\" sx={{ ml: 2 }}>\r\n                          {data.name}\r\n                        </Typography>\r\n                      </TableCell>\r\n                    </TableRow>\r\n                  ))}\r\n                </TableBody>\r\n              </Table>\r\n            </TableContainer>\r\n            <TablePagination\r\n              sx={{ overflow: 'hidden' }}\r\n              rowsPerPageOptions={[5, 10, 25, 50, 100]}\r\n              component=\"div\"\r\n              count={workspace.length}\r\n              rowsPerPage={wsRowsPerPage}\r\n              page={wsPage}\r\n              onPageChange={handleChangeWSPage}\r\n              onRowsPerPageChange={handleChangeWSRowsPerPage}\r\n            />\r\n          </>\r\n        )}\r\n      </Grid>\r\n\r\n      <Grid>\r\n        <Grid container justifyContent=\"space-between\" alignItems=\"center\">\r\n          <Grid item display=\"flex\" alignItems=\"center\">\r\n            <IconList />\r\n\r\n            <Typography variant=\"h3\" sx={{ ml: 2 }}>\r\n              Work\r\n            </Typography>\r\n          </Grid>\r\n\r\n          <FilterBtn page=\"user\" id={boardID} check={check} board={board} handleFilter={handleFilter} />\r\n        </Grid>\r\n\r\n        {task.length === 0 ? (\r\n          <Grid container justifyContent=\"center\" alignItems=\"center\" sx={{ mt: 2, height: 150, bgcolor: 'rgba(128, 128, 128, 0.1)' }}>\r\n            <Typography variant=\"h3\">Can't see any task. You must be added to the task to see them.</Typography>\r\n          </Grid>\r\n        ) : (\r\n          <>\r\n            <TableContainer\r\n              sx={{\r\n                maxHeight: 500,\r\n                '&::-webkit-scrollbar': {\r\n                  width: 10,\r\n                  height: 10,\r\n                },\r\n                '&::-webkit-scrollbar-track': {\r\n                  background: '#f1f1f1',\r\n                  borderRadius: 10,\r\n                },\r\n                '&::-webkit-scrollbar-thumb': {\r\n                  background: '#888',\r\n                  borderRadius: 10,\r\n                },\r\n                '&::-webkit-scrollbar-thumb:hover': {\r\n                  background: '#555',\r\n                },\r\n              }}\r\n            >\r\n              <Table stickyHeader>\r\n                <TableHead>\r\n                  <TableRow>\r\n                    <TableCell>#</TableCell>\r\n                    <TableCell sx={{ minWidth: 300 }}>Task</TableCell>\r\n                    <TableCell sx={{ minWidth: 300 }}>Describe</TableCell>\r\n                    <TableCell sx={{ minWidth: 200 }}>Member</TableCell>\r\n                    <TableCell sx={{ minWidth: 100 }}>Status</TableCell>\r\n                    <TableCell sx={{ minWidth: 250 }}>Board</TableCell>\r\n                    <TableCell sx={{ minWidth: 250 }}>Expiration date</TableCell>\r\n                  </TableRow>\r\n                </TableHead>\r\n\r\n                <TableBody>\r\n                  {task.slice(taskPage * taskRowsPerPage, taskPage * taskRowsPerPage + taskRowsPerPage).map((data, index) => (\r\n                    <TableRow\r\n                      key={data._id}\r\n                      hover\r\n                      onClick={() => {\r\n                        navigate(`/b/${data.boardID._id}`, { replace: true });\r\n                      }}\r\n                      sx={{ cursor: 'pointer', borderTop: '2px solid', borderBottom: '2px solid' }}\r\n                    >\r\n                      <TableCell>{index + 1}</TableCell>\r\n                      <TableCell>\r\n                        <Typography variant=\"h5\">{data.task}</Typography>\r\n                      </TableCell>\r\n                      <TableCell>\r\n                        <Typography variant=\"h5\">{data.describe}</Typography>\r\n                      </TableCell>\r\n                      <TableCell>\r\n                        {data.member !== [] && (\r\n                          <div style={{ display: 'flex', flexWrap: 'wrap' }}>\r\n                            {data.member.map((user) => (\r\n                              <Avatar key={user._id} src={user.avatar.data} sx={{ width: 24, height: 24 }} />\r\n                            ))}\r\n                          </div>\r\n                        )}\r\n                      </TableCell>\r\n                      <TableCell>\r\n                        <Typography variant=\"h5\">\r\n                          {lists.map((value) => (\r\n                            <div key={value.id}>{value.id === data.status && <>{value.title}</>}</div>\r\n                          ))}\r\n                        </Typography>\r\n                      </TableCell>\r\n                      <TableCell>\r\n                        <Typography variant=\"h5\">{data.boardID.name}</Typography>\r\n                      </TableCell>\r\n                      <TableCell>\r\n                        <Typography variant=\"h5\">The task has no expiration date</Typography>\r\n                      </TableCell>\r\n                    </TableRow>\r\n                  ))}\r\n                </TableBody>\r\n              </Table>\r\n            </TableContainer>\r\n            <TablePagination\r\n              rowsPerPageOptions={[5, 10, 25, 50, 100]}\r\n              component=\"div\"\r\n              count={task.length}\r\n              rowsPerPage={taskRowsPerPage}\r\n              page={taskPage}\r\n              onPageChange={handleChangeTaskPage}\r\n              onRowsPerPageChange={handleChangeTaskRowsPerPage}\r\n            />\r\n          </>\r\n        )}\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport default Work;\r\n","import { useEffect, useState } from 'react';\r\nimport { useParams } from 'react-router';\r\n\r\n// material-ui\r\nimport { Avatar, Button, Typography, Grid, ButtonGroup } from '@mui/material';\r\n\r\n// project import\r\nimport UserAPI from 'services/UserAPI';\r\nimport EditProfile from './EditProfile';\r\nimport PersonalInfo from './PersonalInfomation';\r\nimport Work from './Work';\r\nimport io from 'socket.io-client';\r\nimport { host } from 'services/baseAPI';\r\n\r\n// ==============================|| USER PROFILE PAGE ||============================== //\r\nconst userAPI = new UserAPI();\r\nconst socket = io(host, {\r\n  transports: ['websocket', 'polling'],\r\n  withCredentials: true,\r\n});\r\n\r\nconst Profile = () => {\r\n  const { userId } = useParams();\r\n  const userID = sessionStorage.getItem('id');\r\n\r\n  const [user, setUser] = useState({});\r\n\r\n  const [show, setShow] = useState(true);\r\n  const [edit, setEdit] = useState(false);\r\n\r\n  const loadData = (id) => {\r\n    userAPI.getByID(id).then((res) => setUser(res.data[0]));\r\n\r\n    if (userId !== userID) {\r\n      setShow(false);\r\n    }\r\n  };\r\n\r\n  const handleInfo = () => {\r\n    setShow(true);\r\n  };\r\n\r\n  const handleWork = () => {\r\n    setShow(false);\r\n  };\r\n\r\n  const handleEdit = () => {\r\n    setEdit(true);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setEdit(false);\r\n  };\r\n\r\n  useEffect(() => {\r\n    loadData(userId);\r\n\r\n    socket.on('user', () => {\r\n      loadData(userId);\r\n    });\r\n  }, [userId]);\r\n\r\n  return (\r\n    <Grid>\r\n      <Grid container direction=\"column\" alignItems=\"center\" sx={{ bgcolor: 'rgba(128, 128, 128, 0.1)' }}>\r\n        <Grid container justifyContent=\"center\" alignItems=\"center\" sx={{ my: 5 }}>\r\n          <Avatar alt=\"profile user\" src={user.avatar && user.avatar.data} sx={{ height: 120, width: 120, mr: 2 }} />\r\n\r\n          <Typography variant=\"h1\">{user.name}</Typography>\r\n        </Grid>\r\n\r\n        <ButtonGroup variant=\"text\" aria-label=\"text button group\" sx={{ width: '100%', justifyContent: 'center' }}>\r\n          <Button disableElevation onClick={handleInfo}>\r\n            Personal Infomation\r\n          </Button>\r\n\r\n          <Button disableElevation onClick={handleWork}>\r\n            Work\r\n          </Button>\r\n\r\n          <Button disableElevation disabled={userId === userID ? false : true} onClick={handleEdit}>\r\n            Edit Profile\r\n          </Button>\r\n        </ButtonGroup>\r\n      </Grid>\r\n\r\n      {show === true ? <PersonalInfo /> : <Work />}\r\n\r\n      <EditProfile open={edit} onClose={handleClose} formData={user} />\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport default Profile;\r\n"],"names":["TaskAPI","BaseAPI","constructor","super","endpoint","createNew","async","axios","method","url","this","api","data","task","getAll","updateByID","id","StyledMenu","styled","props","elevation","anchorOrigin","vertical","horizontal","transformOrigin","theme","borderRadius","marginTop","spacing","minWidth","color","palette","mode","grey","boxShadow","padding","fontSize","text","secondary","marginRight","backgroundColor","alpha","primary","main","action","selectedOpacity","page","check","checkNone","handleFilterNone","handleFilter","member","board","date","anchorEl","setAnchorEl","useState","open","Boolean","undefined","variant","disableElevation","onClick","event","currentTarget","startIcon","size","MenuListProps","onClose","sx","display","flexDirection","m","component","control","checked","onChange","e","src","width","height","mr","label","map","user","_id","avatar","name","userAPI","UserAPI","socket","io","host","transports","withCredentials","formData","setUser","handleClose","handleChange","target","value","useEffect","scroll","onSubmit","preventDefault","FormData","editUser","get","email","gender","group","position","address","swal","buttons","timer","icon","test","base64","EndcodeFileBase64","type","match","then","res","success","emit","setTimeout","catch","noValidate","mt","textAlign","dividers","container","alignItems","defaultValue","justifyContent","placeholder","row","my","userId","useParams","loadData","getByID","on","Grid","px","Stack","mx","Typography","Divider","borderBottom","workSpaceAPI","WorkSpaceAPI","boardAPI","BoardAPI","taskAPI","lists","title","navigate","useNavigate","workspace","setWorkSpace","setBoard","setTask","wsPage","setWSPage","wsRowsPerPage","setWSRowsPerPage","taskPage","setTaskPage","taskRowsPerPage","setTaskRowsPerPage","boardID","setBoardID","setCheck","result","arr","push","item","ml","length","bgcolor","TableContainer","maxHeight","overflow","background","Table","TableBody","slice","TableRow","hover","replace","cursor","TableCell","logo","BackgroundLetterAvatar","h","w","f","Avatar","TablePagination","rowsPerPageOptions","count","rowsPerPage","onPageChange","newPage","onRowsPerPageChange","FilterBtn","filter","stickyHeader","TableHead","index","borderTop","describe","style","flexWrap","status","userID","sessionStorage","getItem","show","setShow","edit","setEdit","direction","alt","ButtonGroup","Button","disabled","EditProfile"],"sourceRoot":""}