{"version":3,"file":"static/js/37.800a36e8.chunk.js","mappings":"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","sources":["services/TaskAPI.js","ui-component/MenuButton/FilterBtn.js","services/UploadAPI.js","services/CommentAPI.js","views/board/task/comment/Input.js","views/board/task/comment/CommentForm.js","views/board/task/FileUpload.js","ui-component/MenuButton/MoveTaskBtn.js","views/board/task/TaskForm.js","views/board/task/Item.js","views/board/task/List.js","views/board/Detail.js"],"sourcesContent":["import axios from 'axios';\nimport { BaseAPI } from './baseAPI';\n\nexport default class TaskAPI extends BaseAPI {\n  constructor() {\n    super({ endpoint: 'api/tasks' });\n  }\n\n  createNew = async (data) => {\n    const res = await axios({\n      method: 'POST',\n      url: `${this.api}/${this.endpoint}/createTask`,\n      data: {\n        task: data,\n      },\n    });\n\n    return res;\n  };\n\n  getAll = async () => {\n    const res = await axios({\n      method: 'GET',\n      url: `${this.api}/${this.endpoint}/getAllTasksOfAllBoards`,\n      data: null,\n    });\n\n    return res;\n  };\n\n  updateByID = async (id, data) => {\n    const res = await axios({\n      method: 'PUT',\n      url: `${this.api}/${this.endpoint}/updateTaskByID?id=${id}`,\n      data: {\n        task: data,\n      },\n    });\n\n    return res;\n  };\n}\n","import PropTypes from 'prop-types';\r\nimport { useState } from 'react';\r\n\r\n// material-ui\r\nimport { styled, alpha } from '@mui/material/styles';\r\nimport { Avatar, Button, Checkbox, FormControl, FormControlLabel, FormGroup, FormLabel, Grid, Menu } from '@mui/material';\r\n\r\n// icons\r\nimport { IconFilter } from '@tabler/icons';\r\n\r\n// project imports\r\n\r\n// ==============================|| FILTER MENU ||============================== //\r\n\r\nconst StyledMenu = styled((props) => (\r\n  <Menu\r\n    elevation={0}\r\n    anchorOrigin={{\r\n      vertical: 'bottom',\r\n      horizontal: 'right',\r\n    }}\r\n    transformOrigin={{\r\n      vertical: 'top',\r\n      horizontal: 'right',\r\n    }}\r\n    {...props}\r\n  />\r\n))(({ theme }) => ({\r\n  '& .MuiPaper-root': {\r\n    borderRadius: 6,\r\n    marginTop: theme.spacing(1),\r\n    minWidth: 180,\r\n    color: theme.palette.mode === 'light' ? 'rgb(55, 65, 81)' : theme.palette.grey[300],\r\n    boxShadow:\r\n      'rgb(255, 255, 255) 0px 0px 0px 0px, rgba(0, 0, 0, 0.05) 0px 0px 0px 1px, rgba(0, 0, 0, 0.1) 0px 10px 15px -3px, rgba(0, 0, 0, 0.05) 0px 4px 6px -2px',\r\n    '& .MuiMenu-list': {\r\n      padding: '4px 0',\r\n    },\r\n    '& .MuiMenuItem-root': {\r\n      '& .MuiSvgIcon-root': {\r\n        fontSize: 18,\r\n        color: theme.palette.text.secondary,\r\n        marginRight: theme.spacing(1.5),\r\n      },\r\n      '&:active': {\r\n        backgroundColor: alpha(theme.palette.primary.main, theme.palette.action.selectedOpacity),\r\n      },\r\n    },\r\n  },\r\n}));\r\n\r\nconst FilterBtn = (props) => {\r\n  const { page, id, check, checkNone, handleFilterNone, handleFilter, member, board, date } = props;\r\n\r\n  const [anchorEl, setAnchorEl] = useState(null);\r\n  const open = Boolean(anchorEl);\r\n\r\n  const handleClick = (event) => {\r\n    setAnchorEl(event.currentTarget);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setAnchorEl(null);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Button\r\n        id=\"demo-customized-button\"\r\n        aria-controls={open ? 'demo-customized-menu' : undefined}\r\n        aria-haspopup=\"true\"\r\n        aria-expanded={open ? 'true' : undefined}\r\n        variant=\"contained\"\r\n        disableElevation\r\n        onClick={handleClick}\r\n        startIcon={<IconFilter size={20} />}\r\n      >\r\n        filter\r\n      </Button>\r\n      <StyledMenu\r\n        id=\"demo-customized-menu\"\r\n        MenuListProps={{\r\n          'aria-labelledby': 'demo-customized-button',\r\n        }}\r\n        anchorEl={anchorEl}\r\n        open={open}\r\n        onClose={handleClose}\r\n      >\r\n        {page === 'board' && (\r\n          <Grid sx={{ display: 'flex', flexDirection: 'column' }}>\r\n            <FormControl sx={{ m: '16px 16px 0 16px' }} component=\"fieldset\" variant=\"standard\">\r\n              <FormLabel component=\"legend\">Filter by member</FormLabel>\r\n\r\n              <FormGroup>\r\n                <FormControlLabel\r\n                  control={\r\n                    <>\r\n                      <Checkbox\r\n                        checked={checkNone}\r\n                        onChange={(e) => {\r\n                          handleFilterNone(e);\r\n                        }}\r\n                      />\r\n                      <Avatar src={''} sx={{ width: 20, height: 20, mr: 1 }} />\r\n                    </>\r\n                  }\r\n                  label=\"No membres\"\r\n                />\r\n                {member &&\r\n                  member.map((user) => (\r\n                    <FormControlLabel\r\n                      key={user._id}\r\n                      control={\r\n                        <>\r\n                          <Checkbox\r\n                            checked={id === user._id ? check : false}\r\n                            onChange={(e) => {\r\n                              handleFilter(e, user._id);\r\n                            }}\r\n                          />\r\n                          <Avatar src={user.avatar.data} sx={{ width: 20, height: 20, mr: 1 }} />\r\n                        </>\r\n                      }\r\n                      label={user.name}\r\n                    />\r\n                  ))}\r\n              </FormGroup>\r\n            </FormControl>\r\n\r\n            {/* <FormControl sx={{ m: 2 }} component=\"fieldset\" variant=\"standard\">\r\n              <FormLabel component=\"legend\">Filter by date</FormLabel>\r\n            </FormControl> */}\r\n          </Grid>\r\n        )}\r\n\r\n        {page === 'user' && (\r\n          <Grid sx={{ display: 'flex', flexDirection: 'column' }}>\r\n            <FormControl sx={{ m: '16px 16px 0 16px' }} component=\"fieldset\" variant=\"standard\">\r\n              <FormLabel component=\"legend\">Filter by board</FormLabel>\r\n\r\n              <FormGroup>\r\n                {board &&\r\n                  board.map((data) => (\r\n                    <FormControlLabel\r\n                      key={data._id}\r\n                      control={\r\n                        <>\r\n                          <Checkbox\r\n                            checked={id === data._id ? check : false}\r\n                            onChange={(e) => {\r\n                              handleFilter(e, data._id);\r\n                            }}\r\n                          />\r\n                        </>\r\n                      }\r\n                      label={data.name}\r\n                    />\r\n                  ))}\r\n              </FormGroup>\r\n            </FormControl>\r\n\r\n            {/* <MenuItem onClick={handleClick} disableRipple>\r\n              Filter by expiration date\r\n            </MenuItem> */}\r\n          </Grid>\r\n        )}\r\n      </StyledMenu>\r\n    </>\r\n  );\r\n};\r\n\r\nFilterBtn.propTypes = {\r\n  page: PropTypes.string,\r\n  id: PropTypes.any,\r\n  check: PropTypes.bool,\r\n  checkNone: PropTypes.bool,\r\n  handleFilterNone: PropTypes.any,\r\n  handleFilter: PropTypes.any,\r\n  member: PropTypes.array,\r\n  board: PropTypes.array,\r\n  date: PropTypes.array,\r\n};\r\n\r\nexport default FilterBtn;\r\n","import axios from 'axios';\r\nimport { BaseAPI } from './baseAPI';\r\n\r\nexport default class UploadAPI extends BaseAPI {\r\n  constructor() {\r\n    super({ endpoint: 'api/uploads' });\r\n  }\r\n\r\n  uploadFile = async (data) => {\r\n    const res = await axios({\r\n      method: 'POST',\r\n      url: `${this.api}/${this.endpoint}/uploadFile`,\r\n      data: {\r\n        upload: data,\r\n      },\r\n    });\r\n\r\n    return res;\r\n  };\r\n\r\n  getFromTask = async () => {\r\n    const res = await axios({\r\n      method: 'GET',\r\n      url: `${this.api}/${this.endpoint}/getAllFilesOfAllTasks`,\r\n      data: null,\r\n    });\r\n\r\n    return res;\r\n  };\r\n\r\n  getFromComment = async () => {\r\n    const res = await axios({\r\n      method: 'GET',\r\n      url: `${this.api}/${this.endpoint}/getAllFilesOfAllComments`,\r\n      data: null,\r\n    });\r\n\r\n    return res;\r\n  };\r\n}\r\n","import axios from 'axios';\r\nimport { BaseAPI } from './baseAPI';\r\n\r\nconst token = sessionStorage.getItem('token');\r\n\r\nexport default class CommentAPI extends BaseAPI {\r\n  constructor() {\r\n    super({ endpoint: 'api/comments' });\r\n  }\r\n\r\n  createNew = async (data) => {\r\n    const res = await axios({\r\n      headers: {\r\n        Authorization: `Bearer ${token}`,\r\n      },\r\n      method: 'POST',\r\n      url: `${this.api}/${this.endpoint}/addComment`,\r\n      data: {\r\n        comment: data,\r\n      },\r\n    });\r\n\r\n    return res;\r\n  };\r\n\r\n  getByTaskID = async (id) => {\r\n    const res = await axios({\r\n      method: 'GET',\r\n      url: `${this.api}/${this.endpoint}/getCommentByTaskID?id=${id}`,\r\n      data: null,\r\n    });\r\n\r\n    return res;\r\n  };\r\n\r\n  updateByID = async (id, data) => {\r\n    const res = await axios({\r\n      method: 'PUT',\r\n      url: `${this.api}/${this.endpoint}/updateCommentByID?id=${id}`,\r\n      data: {\r\n        comment: data,\r\n      },\r\n    });\r\n\r\n    return res;\r\n  };\r\n}\r\n","import PropTypes from 'prop-types';\r\nimport { useEffect, useState, createRef } from 'react';\r\n\r\n// material-ui\r\nimport { Button, Grid, Avatar, IconButton } from '@mui/material';\r\n\r\n// icons/img\r\nimport { IconMoodSmile, IconPaperclip, IconSend, IconX } from '@tabler/icons';\r\nimport Picker from 'emoji-picker-react';\r\n\r\n// project imports\r\nimport CommentAPI from 'services/CommentAPI';\r\nimport UserAPI from 'services/UserAPI';\r\nimport UploadAPI from 'services/UploadAPI';\r\nimport AnimateButton from 'ui-component/extended/AnimateButton';\r\nimport EndcodeFileBase64 from 'utils/endcodeFileBase64';\r\nimport io from 'socket.io-client';\r\nimport { host } from 'services/baseAPI';\r\n\r\n// ==============================|| INPUT COMMENT ||============================== //\r\nconst commentAPI = new CommentAPI();\r\nconst userAPI = new UserAPI();\r\nconst uploadAPI = new UploadAPI();\r\nconst socket = io(host, {\r\n  transports: ['websocket', 'polling'],\r\n  withCredentials: true,\r\n});\r\n\r\nconst InputComment = (props) => {\r\n  const { taskId, onEdit, onClose, editMessage, fileMessage, commentId, inputWidth } = props;\r\n\r\n  const inputRef = createRef();\r\n  const userID = sessionStorage.getItem('id');\r\n\r\n  const [inputStr, setInputStr] = useState('');\r\n  const [sender, setSender] = useState({});\r\n\r\n  const [showEmoji, setShowEmoji] = useState(false);\r\n  const [file, setFile] = useState(false);\r\n\r\n  const handleClose = () => {\r\n    onClose(!onEdit);\r\n  };\r\n\r\n  const onSelectFile = async (e) => {\r\n    const upload = {\r\n      taskID: taskId,\r\n    };\r\n    const base64 = await EndcodeFileBase64(e.target.files[0]);\r\n\r\n    upload.file = base64;\r\n\r\n    uploadAPI\r\n      .uploadFile(upload)\r\n      .then((res) => {\r\n        if (res.data.success === true) {\r\n          socket.emit('upload', res.data.data);\r\n\r\n          setFile(true);\r\n          setInputStr(res.data.data.file);\r\n        }\r\n      })\r\n      .catch(() => {\r\n        swal({\r\n          text: 'Sorry, something went wrong. Please contact to admin for support.',\r\n          buttons: false,\r\n          timer: 5000,\r\n          icon: 'error',\r\n        });\r\n      });\r\n  };\r\n\r\n  const handleShowEmoji = () => {\r\n    inputRef.current.focus();\r\n    setShowEmoji(!showEmoji);\r\n  };\r\n\r\n  const pickEmoji = ({ emoji }, e) => {\r\n    const ref = inputRef.current;\r\n    ref.focus();\r\n    const start = inputStr.substring(0, ref.selectionStart);\r\n    const end = inputStr.substring(ref.selectionStart);\r\n    const text = start + emoji + end;\r\n    setInputStr(text);\r\n    setShowEmoji(false);\r\n  };\r\n\r\n  const handleComment = async (e) => {\r\n    e.preventDefault();\r\n    const comment = {\r\n      message: inputStr,\r\n      taskID: taskId,\r\n    };\r\n\r\n    if (file === true) {\r\n      comment.message = fileMessage;\r\n    }\r\n\r\n    commentAPI\r\n      .createNew(comment)\r\n      .then((res) => {\r\n        if (res.data.success === true) {\r\n          socket.emit('comment', res.data.post);\r\n\r\n          setInputStr('');\r\n          setFile(false);\r\n        }\r\n      })\r\n      .catch(() => {\r\n        swal({\r\n          text: 'Sorry, something went wrong. Please contact to admin for support.',\r\n          buttons: false,\r\n          timer: 5000,\r\n          icon: 'error',\r\n        });\r\n      });\r\n  };\r\n\r\n  const handleEditComment = async (e) => {\r\n    e.preventDefault();\r\n    const comment = {\r\n      message: inputStr,\r\n      taskID: taskId,\r\n    };\r\n\r\n    commentAPI\r\n      .updateByID(commentId, comment)\r\n      .then((res) => {\r\n        if (res.data.success === true) {\r\n          socket.emit('comment', res.data.data);\r\n\r\n          onClose(!onEdit);\r\n        }\r\n      })\r\n      .catch(() => {\r\n        swal({\r\n          text: 'Sorry, something went wrong. Please contact to admin for support.',\r\n          buttons: false,\r\n          timer: 5000,\r\n          icon: 'error',\r\n        });\r\n      });\r\n  };\r\n\r\n  useEffect(() => {\r\n    userAPI.getByID(userID).then((res) => {\r\n      setSender(res.data[0]);\r\n    });\r\n\r\n    if (editMessage) {\r\n      setInputStr(editMessage);\r\n    }\r\n\r\n    if (fileMessage) {\r\n      setFile(true);\r\n      setInputStr(`[${fileMessage.name}]`);\r\n    }\r\n  }, [userID, editMessage, fileMessage]);\r\n\r\n  return (\r\n    <Grid container alignItems=\"flex-start\" sx={{ mt: 1 }}>\r\n      {!editMessage && <Avatar src={sender.avatar && sender.avatar.data} sx={{ width: 40, height: 40, mr: 1 }} />}\r\n\r\n      <Grid sx={{ p: 1, borderRadius: 2, boxShadow: 4, position: 'relative', width: inputWidth }}>\r\n        <textarea\r\n          className=\"comment\"\r\n          placeholder=\"Write a comment...\"\r\n          value={inputStr}\r\n          onChange={(e) => {\r\n            e.target.style.height = 'auto';\r\n            e.target.style.height = e.target.scrollHeight + 'px';\r\n\r\n            setInputStr(e.target.value);\r\n          }}\r\n          ref={inputRef}\r\n        />\r\n\r\n        <Grid item display=\"flex\" justifyContent=\"space-between\" alignItems=\"center\">\r\n          <Grid item display=\"flex\" alignItems=\"center\">\r\n            <AnimateButton>\r\n              <Button\r\n                disableElevation\r\n                disabled={inputStr === '' ? true : false}\r\n                type=\"submit\"\r\n                size=\"small\"\r\n                variant=\"contained\"\r\n                color=\"primary\"\r\n                onClick={!editMessage ? handleComment : handleEditComment}\r\n              >\r\n                {!editMessage ? <IconSend size={20} /> : 'Save'}\r\n              </Button>\r\n            </AnimateButton>\r\n\r\n            {onEdit === true ? (\r\n              <IconButton aria-label=\"image\" component=\"label\" onClick={handleClose}>\r\n                <IconX />\r\n              </IconButton>\r\n            ) : null}\r\n          </Grid>\r\n\r\n          <Grid item display=\"flex\" alignItems=\"center\">\r\n            <IconButton aria-label=\"image\" component=\"label\" onClick={handleShowEmoji}>\r\n              <IconMoodSmile />\r\n            </IconButton>\r\n\r\n            <IconButton aria-label=\"image\" component=\"label\">\r\n              <IconPaperclip />\r\n\r\n              <input type=\"file\" name=\"image\" multiple hidden onChange={onSelectFile} />\r\n            </IconButton>\r\n          </Grid>\r\n        </Grid>\r\n\r\n        {showEmoji && (\r\n          <div style={{ position: 'absolute', top: 95, right: 60 }}>\r\n            <Picker previewConfig={{ showPreview: false }} emojiStyle=\"google\" onEmojiClick={pickEmoji} />\r\n          </div>\r\n        )}\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n};\r\n\r\nInputComment.propTypes = {\r\n  taskId: PropTypes.any.isRequired,\r\n  onEdit: PropTypes.bool,\r\n  onClose: PropTypes.func,\r\n  editMessage: PropTypes.any,\r\n  fileMessage: PropTypes.any,\r\n  commentId: PropTypes.any,\r\n  inputWidth: PropTypes.any,\r\n};\r\n\r\nexport default InputComment;\r\n","import PropTypes from 'prop-types';\r\nimport { useEffect, useState } from 'react';\r\n\r\n// material-ui\r\nimport { Grid, Avatar, Typography } from '@mui/material';\r\n\r\n// icons/img\r\n\r\n// project imports\r\nimport CommentAPI from 'services/CommentAPI';\r\nimport InputComment from './Input';\r\nimport io from 'socket.io-client';\r\nimport { host } from 'services/baseAPI';\r\n\r\n// ==============================|| COMMENT FORM ||============================== //\r\nconst commentAPI = new CommentAPI();\r\nconst socket = io(host, {\r\n  transports: ['websocket', 'polling'],\r\n  withCredentials: true,\r\n});\r\n\r\nconst CForm = ({ taskID, fileComment }) => {\r\n  const userId = sessionStorage.getItem('id');\r\n\r\n  const [message, setMessage] = useState([]);\r\n\r\n  const [editMS, setEditMS] = useState(false);\r\n  const [messageId, setMessageId] = useState();\r\n\r\n  const loadData = (id) => {\r\n    commentAPI.getByTaskID(id).then((result) => {\r\n      setMessage(result.data.comment);\r\n    });\r\n  };\r\n\r\n  const handleEdit = (id) => {\r\n    setMessageId(id);\r\n    setEditMS(true);\r\n  };\r\n\r\n  const handleCloseEdit = () => {\r\n    setEditMS(false);\r\n  };\r\n\r\n  const handleDelete = (id) => {\r\n    swal({\r\n      title: 'Are you sure?',\r\n      text: 'Once deleted, you will not be able to recover.',\r\n      icon: 'warning',\r\n      buttons: [true, 'Delete'],\r\n      dangerMode: true,\r\n    }).then((willDelete) => {\r\n      if (willDelete) {\r\n        commentAPI\r\n          .deleteByID(id)\r\n          .then((res) => {\r\n            if (res.status === 200) {\r\n              socket.emit('comment', res.data);\r\n            }\r\n          })\r\n          .catch(() => {\r\n            //Thông báo lỗi\r\n            swal({\r\n              text: 'Sorry, something went wrong. Please contact to admin for support.',\r\n              buttons: false,\r\n              timer: 5000,\r\n              icon: 'error',\r\n            });\r\n          });\r\n      }\r\n    });\r\n  };\r\n\r\n  useEffect(() => {\r\n    loadData(taskID);\r\n\r\n    socket.on('comment', () => {\r\n      loadData(taskID);\r\n    });\r\n  }, [taskID]);\r\n\r\n  return (\r\n    <>\r\n      <InputComment taskId={taskID} inputWidth={435} fileMessage={fileComment} />\r\n\r\n      <Grid\r\n        height={400}\r\n        sx={{\r\n          mt: 4,\r\n          overflow: 'hidden',\r\n          '&:hover': {\r\n            overflowY: 'auto',\r\n            '&::-webkit-scrollbar': {\r\n              width: 7,\r\n            },\r\n            '&::-webkit-scrollbar-track': {\r\n              background: '#f1f1f1',\r\n              borderRadius: 10,\r\n            },\r\n            '&::-webkit-scrollbar-thumb': {\r\n              background: '#888',\r\n              borderRadius: 10,\r\n            },\r\n            '&::-webkit-scrollbar-thumb:hover': {\r\n              background: '#555',\r\n            },\r\n          },\r\n        }}\r\n      >\r\n        {message.map((data) => {\r\n          let createDate = new Date(data.createdAt).toLocaleString();\r\n          let updateDate = new Date(data.updatedAt).toLocaleString();\r\n\r\n          return (\r\n            <Grid key={data._id} item display=\"flex\" alignItems=\"flex-start\" sx={{ mt: 2 }}>\r\n              <Avatar src={data.senderID.avatar.data} sx={{ width: 40, height: 40, mr: 1 }} />\r\n\r\n              <Grid>\r\n                <Grid item display=\"flex\" alignItems=\"center\">\r\n                  <Typography variant=\"h3\" sx={{ mr: 1 }}>\r\n                    {data.senderID.name}\r\n                  </Typography>\r\n\r\n                  <Typography variant=\"subtitle1\">{createDate === updateDate ? createDate : `${updateDate} (fixed)`}</Typography>\r\n                </Grid>\r\n\r\n                {messageId === data._id && editMS === true ? (\r\n                  <InputComment\r\n                    taskId={taskID}\r\n                    onEdit={editMS}\r\n                    onClose={handleCloseEdit}\r\n                    editMessage={data.message}\r\n                    commentId={messageId}\r\n                    inputWidth={435}\r\n                  />\r\n                ) : (\r\n                  <>\r\n                    <Grid sx={{ width: 435, p: 1, borderRadius: 2, boxShadow: 4 }}>\r\n                      <Typography variant=\"h4\" sx={{ mr: 1 }}>\r\n                        {data.message.url ? (\r\n                          <a href={data.message.url} target=\"_blank\">\r\n                            {data.message.name}\r\n                          </a>\r\n                        ) : (\r\n                          <>{data.message}</>\r\n                        )}\r\n                      </Typography>\r\n                    </Grid>\r\n\r\n                    <Grid item display=\"flex\" alignItems=\"center\">\r\n                      {!data.message.url && (\r\n                        <>\r\n                          {data.senderID._id === userId ? (\r\n                            <Typography\r\n                              variant=\"subtitle1\"\r\n                              sx={{ mr: 1, cursor: 'pointer', textDecoration: 'underline', '&:hover': { color: '#90CAF9' } }}\r\n                              onClick={() => handleEdit(data._id)}\r\n                            >\r\n                              Edit\r\n                            </Typography>\r\n                          ) : (\r\n                            <Typography\r\n                              variant=\"subtitle1\"\r\n                              sx={{ mr: 1, cursor: 'pointer', textDecoration: 'underline', '&:hover': { color: '#90CAF9' } }}\r\n                            >\r\n                              Reply\r\n                            </Typography>\r\n                          )}\r\n                        </>\r\n                      )}\r\n\r\n                      <Typography\r\n                        variant=\"subtitle1\"\r\n                        sx={{ cursor: 'pointer', textDecoration: 'underline', '&:hover': { color: '#90CAF9' } }}\r\n                        onClick={() => handleDelete(data._id)}\r\n                      >\r\n                        Delete\r\n                      </Typography>\r\n                    </Grid>\r\n                  </>\r\n                )}\r\n              </Grid>\r\n            </Grid>\r\n          );\r\n        })}\r\n      </Grid>\r\n    </>\r\n  );\r\n};\r\n\r\nCForm.propTypes = {\r\n  taskID: PropTypes.any,\r\n  fileComment: PropTypes.any,\r\n};\r\n\r\nexport default CForm;\r\n","import PropTypes from 'prop-types';\r\nimport { useEffect, useState } from 'react';\r\n\r\n// material-ui\r\nimport { Button, Grid, Avatar, Typography } from '@mui/material';\r\n\r\n// icons/img\r\nimport { IconListDetails, IconPoint } from '@tabler/icons';\r\n\r\n// project imports\r\nimport UploadAPI from 'services/UploadAPI';\r\nimport AnimateButton from 'ui-component/extended/AnimateButton';\r\nimport EndcodeFileBase64 from 'utils/endcodeFileBase64';\r\nimport BackgroundLetterAvatars from 'ui-component/BackgroundLetterAvatar';\r\nimport io from 'socket.io-client';\r\nimport { host } from 'services/baseAPI';\r\nimport CForm from './comment/CommentForm';\r\n\r\n// ==============================|| FILE UPLOAD ||============================== //\r\nconst uploadAPI = new UploadAPI();\r\nconst socket = io(host, {\r\n  transports: ['websocket', 'polling'],\r\n  withCredentials: true,\r\n});\r\n\r\nconst FileUpload = ({ taskID, show }) => {\r\n  const [file, setFile] = useState([]);\r\n\r\n  const [message, setMessage] = useState();\r\n\r\n  const loadData = (id) => {\r\n    uploadAPI.getFromTask().then((result) => {\r\n      const arr = [];\r\n\r\n      result.data.data.map((res) => {\r\n        if (res.taskID._id === id) {\r\n          arr.push(res);\r\n        }\r\n      });\r\n\r\n      setFile(arr);\r\n    });\r\n  };\r\n\r\n  const onSelectFile = async (e) => {\r\n    const upload = {\r\n      taskID: taskID,\r\n    };\r\n    const base64 = await EndcodeFileBase64(e.target.files[0]);\r\n    upload.file = base64;\r\n\r\n    uploadAPI\r\n      .uploadFile(upload)\r\n      .then((res) => {\r\n        if (res.data.success === true) {\r\n          socket.emit('upload', res.data.data);\r\n        }\r\n      })\r\n      .catch(() => {\r\n        swal({\r\n          text: 'Sorry, something went wrong. Please contact to admin for support.',\r\n          buttons: false,\r\n          timer: 5000,\r\n          icon: 'error',\r\n        });\r\n      });\r\n  };\r\n\r\n  const handleComment = (id) => {\r\n    file.map((res) => {\r\n      if (res._id === id) {\r\n        setMessage(res.file);\r\n      }\r\n    });\r\n  };\r\n\r\n  const handleDelete = (id) => {\r\n    swal({\r\n      title: 'Are you sure?',\r\n      text: 'Once deleted, you will not be able to recover.',\r\n      icon: 'warning',\r\n      buttons: [true, 'Delete'],\r\n      dangerMode: true,\r\n    }).then((willDelete) => {\r\n      if (willDelete) {\r\n        uploadAPI\r\n          .deleteByID(id)\r\n          .then((res) => {\r\n            if (res.status === 200) {\r\n              socket.emit('upload', res.data);\r\n            }\r\n          })\r\n          .catch(() => {\r\n            //Thông báo lỗi\r\n            swal({\r\n              text: 'Sorry, something went wrong. Please contact to admin for support.',\r\n              buttons: false,\r\n              timer: 5000,\r\n              icon: 'error',\r\n            });\r\n          });\r\n      }\r\n    });\r\n  };\r\n\r\n  useEffect(() => {\r\n    loadData(taskID);\r\n\r\n    socket.on('upload', () => {\r\n      loadData(taskID);\r\n    });\r\n  }, [taskID]);\r\n\r\n  return (\r\n    <>\r\n      {show && (\r\n        <>\r\n          <Grid sx={{ mt: 2, paddingLeft: 4 }}>\r\n            <AnimateButton>\r\n              <Button variant=\"contained\" color=\"primary\" component=\"label\">\r\n                Choose file\r\n                <input type=\"file\" id=\"upload\" multiple hidden onChange={onSelectFile} />\r\n              </Button>\r\n            </AnimateButton>\r\n          </Grid>\r\n\r\n          <Grid\r\n            maxHeight={250}\r\n            sx={{\r\n              paddingLeft: 4,\r\n              overflowY: 'hidden',\r\n              '&:hover': {\r\n                overflowY: 'auto',\r\n                '&::-webkit-scrollbar': {\r\n                  width: 7,\r\n                },\r\n                '&::-webkit-scrollbar-track': {\r\n                  background: '#f1f1f1',\r\n                  borderRadius: 10,\r\n                },\r\n                '&::-webkit-scrollbar-thumb': {\r\n                  background: '#888',\r\n                  borderRadius: 10,\r\n                },\r\n                '&::-webkit-scrollbar-thumb:hover': {\r\n                  background: '#555',\r\n                },\r\n              },\r\n            }}\r\n          >\r\n            {file.map((item) => {\r\n              let createDate = new Date(item.createdAt).toLocaleString();\r\n\r\n              return (\r\n                <Grid\r\n                  key={item._id}\r\n                  sx={{\r\n                    mt: 2,\r\n                    p: 1,\r\n                    width: 450,\r\n                    boxShadow: 4,\r\n                    display: 'flex',\r\n                    alignItems: 'center',\r\n                  }}\r\n                >\r\n                  {item.file.type.match(/[^:/]\\w+\\//)[0] === 'image/' ? (\r\n                    <Avatar src={item.file.url} sx={{ borderRadius: 0, height: 70, width: 100 }} />\r\n                  ) : (\r\n                    <BackgroundLetterAvatars name={item.file.name} h={70} w={100} f={20} />\r\n                  )}\r\n\r\n                  <Grid sx={{ ml: 2 }}>\r\n                    <a href={item.file.url} target=\"_blank\" style={{ textDecoration: 'none' }}>\r\n                      <Typography variant=\"h3\">{item.file.name}</Typography>\r\n                    </a>\r\n\r\n                    <Grid container alignItems=\"center\">\r\n                      <Typography variant=\"subtitle1\">{createDate}</Typography>\r\n\r\n                      <Typography variant=\"subtitle2\">\r\n                        <IconPoint />\r\n                      </Typography>\r\n\r\n                      <Typography\r\n                        variant=\"subtitle1\"\r\n                        sx={{ cursor: 'pointer', textDecoration: 'underline', '&:hover': { color: '#90CAF9' } }}\r\n                        onClick={() => handleComment(item._id)}\r\n                      >\r\n                        Comment\r\n                      </Typography>\r\n\r\n                      <Typography variant=\"subtitle2\">\r\n                        <IconPoint />\r\n                      </Typography>\r\n\r\n                      <Typography\r\n                        variant=\"subtitle1\"\r\n                        sx={{ cursor: 'pointer', textDecoration: 'underline', '&:hover': { color: '#90CAF9' } }}\r\n                        onClick={() => handleDelete(item._id)}\r\n                      >\r\n                        Delete\r\n                      </Typography>\r\n                    </Grid>\r\n                  </Grid>\r\n                </Grid>\r\n              );\r\n            })}\r\n          </Grid>\r\n        </>\r\n      )}\r\n\r\n      <Grid>\r\n        <Grid container alignItems=\"center\" sx={{ mt: 4 }}>\r\n          <IconListDetails />\r\n\r\n          <Typography sx={{ ml: 1 }} color=\"primary\" variant=\"h5\">\r\n            Work:\r\n          </Typography>\r\n        </Grid>\r\n\r\n        <CForm taskID={taskID} fileComment={message} />\r\n      </Grid>\r\n    </>\r\n  );\r\n};\r\n\r\nFileUpload.propTypes = {\r\n  taskID: PropTypes.any,\r\n  show: PropTypes.bool,\r\n};\r\n\r\nexport default FileUpload;\r\n","import PropTypes from 'prop-types';\r\nimport { useEffect, useState } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\n\r\n// material-ui\r\nimport { Box, Grid, Button, Menu, DialogTitle, Select, DialogContent, InputLabel } from '@mui/material';\r\n\r\n// icons\r\n\r\n// project imports\r\nimport BoardAPI from 'services/BoardAPI';\r\nimport TaskAPI from 'services/TaskAPI';\r\nimport AnimateButton from 'ui-component/extended/AnimateButton';\r\nimport io from 'socket.io-client';\r\nimport { host } from 'services/baseAPI';\r\n\r\n// ==============================|| MOVE TASK BUTTON ||============================== //\r\nconst boardAPI = new BoardAPI();\r\nconst taskAPI = new TaskAPI();\r\nconst socket = io(host, {\r\n  transports: ['websocket', 'polling'],\r\n  withCredentials: true,\r\n});\r\n\r\nconst lists = [\r\n  {\r\n    id: 0,\r\n    title: 'Backlog',\r\n  },\r\n  {\r\n    id: 1,\r\n    title: 'To-Do',\r\n  },\r\n  {\r\n    id: 2,\r\n    title: 'Doing',\r\n  },\r\n  {\r\n    id: 3,\r\n    title: 'Done',\r\n  },\r\n];\r\n\r\nconst MoveTaskBtn = (props) => {\r\n  const { task, anchorEl, open, handleClose } = props;\r\n  const navigate = useNavigate();\r\n  const userId = sessionStorage.getItem('id');\r\n\r\n  const [board, setBoard] = useState([]);\r\n\r\n  const [currentBoardID, setCurrentBoardID] = useState();\r\n  const [boardID, setBoardID] = useState();\r\n  const [listID, setListID] = useState();\r\n\r\n  const loadData = (id) => {\r\n    boardAPI.getAll().then((result) => {\r\n      const arr = [];\r\n\r\n      result.data.data.map((res) => {\r\n        res.member.map((value) => {\r\n          if (value._id === id) {\r\n            arr.push(res);\r\n          }\r\n        });\r\n      });\r\n\r\n      setBoard(arr);\r\n    });\r\n\r\n    setCurrentBoardID(task.boardID);\r\n    setBoardID(task.boardID);\r\n    setListID(task.status);\r\n  };\r\n\r\n  const handleBoardChange = (event) => {\r\n    setBoardID(event.target.value);\r\n  };\r\n\r\n  const handleListChange = (event) => {\r\n    setListID(event.target.value);\r\n  };\r\n\r\n  const handleSubmit = () => {\r\n    taskAPI.getAll().then((result) => {\r\n      result.data.data.map((res) => {\r\n        if (res._id === task._id) {\r\n          const task = {\r\n            boardID: boardID,\r\n            status: listID,\r\n          };\r\n\r\n          taskAPI\r\n            .updateByID(res._id, task)\r\n            .then((res) => {\r\n              if (res.data.success === true) {\r\n                socket.emit('task', res.data.data);\r\n\r\n                if (res.data.data.boardID !== currentBoardID) {\r\n                  navigate(`/b/${res.data.data.boardID}`, { replace: true });\r\n                }\r\n              }\r\n            })\r\n            .catch(() => {\r\n              swal({\r\n                text: 'Sorry, something went wrong. Please contact to admin for support.',\r\n                buttons: false,\r\n                timer: 5000,\r\n                icon: 'error',\r\n              });\r\n            });\r\n        }\r\n      });\r\n    });\r\n  };\r\n\r\n  useEffect(() => {\r\n    loadData(userId);\r\n  }, [userId]);\r\n\r\n  return (\r\n    <Menu\r\n      anchorEl={anchorEl}\r\n      id=\"account-menu\"\r\n      open={open}\r\n      onClose={handleClose}\r\n      PaperProps={{\r\n        elevation: 0,\r\n        sx: {\r\n          overflow: 'visible',\r\n          filter: 'drop-shadow(0px 2px 8px rgba(0,0,0,0.32))',\r\n          mt: 1.5,\r\n          '& .MuiAvatar-root': {\r\n            width: 80,\r\n            height: 80,\r\n            ml: -0.5,\r\n            mr: 1,\r\n          },\r\n          '&:before': {\r\n            content: '\"\"',\r\n            display: 'block',\r\n            position: 'absolute',\r\n            top: 0,\r\n            right: 14,\r\n            width: 10,\r\n            height: 10,\r\n            transform: 'translateY(-50%) rotate(45deg)',\r\n            zIndex: 0,\r\n          },\r\n        },\r\n      }}\r\n      transformOrigin={{ horizontal: 'right', vertical: 'top' }}\r\n      anchorOrigin={{ horizontal: 'right', vertical: 'bottom' }}\r\n    >\r\n      <Box component=\"form\" onSubmit={handleSubmit} noValidate sx={{ width: 250 }}>\r\n        <DialogTitle display=\"flex\" justifyContent=\"center\" sx={{ fontSize: 16, fontWeight: 500 }}>\r\n          Move Task\r\n        </DialogTitle>\r\n\r\n        <DialogContent spacing={2}>\r\n          <InputLabel>Board</InputLabel>\r\n          <Select fullWidth native id=\"board\" value={boardID} onChange={handleBoardChange}>\r\n            {board.map((data) => (\r\n              <option key={data._id} value={data._id}>\r\n                {data._id === task.boardID ? `${data.name} (currently)` : data.name}\r\n              </option>\r\n            ))}\r\n          </Select>\r\n\r\n          <Grid sx={{ my: 2 }}>\r\n            <InputLabel>List</InputLabel>\r\n            <Select fullWidth native id=\"list\" value={listID} onChange={handleListChange}>\r\n              {lists.map((data) => (\r\n                <option key={data.id} value={data.id}>\r\n                  {data.id === task.status ? `${data.title} (currently)` : data.title}\r\n                </option>\r\n              ))}\r\n            </Select>\r\n          </Grid>\r\n\r\n          <AnimateButton>\r\n            <Button disableElevation size=\"small\" type=\"submit\" variant=\"contained\" color=\"primary\">\r\n              Move\r\n            </Button>\r\n          </AnimateButton>\r\n        </DialogContent>\r\n      </Box>\r\n    </Menu>\r\n  );\r\n};\r\n\r\nMoveTaskBtn.propTypes = {\r\n  task: PropTypes.any,\r\n  anchorEl: PropTypes.any,\r\n  open: PropTypes.any,\r\n  handleClose: PropTypes.any,\r\n};\r\n\r\nexport default MoveTaskBtn;\r\n","import PropTypes from 'prop-types';\r\nimport { useEffect, useState } from 'react';\r\nimport { Editor } from 'react-draft-wysiwyg';\r\nimport { convertToRaw } from 'draft-js';\r\nimport draftToMarkdown from 'draftjs-to-markdown';\r\nimport '../../../../node_modules/react-draft-wysiwyg/dist/react-draft-wysiwyg.css';\r\n\r\n// material-ui\r\nimport { Button, OutlinedInput, Typography, Grid, Dialog, Box, DialogContent, MenuList, MenuItem } from '@mui/material';\r\n\r\n// icons/img\r\nimport {\r\n  IconAlignJustified,\r\n  IconCreditCard,\r\n  IconPaperclip,\r\n  IconUser,\r\n  IconUsers,\r\n  IconClock,\r\n  IconArrowBigRightLines,\r\n  IconArchive,\r\n} from '@tabler/icons';\r\n\r\n// project imports\r\nimport swal from 'sweetalert';\r\nimport TaskAPI from 'services/TaskAPI';\r\nimport BoardAPI from 'services/BoardAPI';\r\nimport UploadAPI from 'services/UploadAPI';\r\nimport AnimateButton from 'ui-component/extended/AnimateButton';\r\nimport DialogForm from 'ui-component/extended/DialogForm';\r\nimport AutocompleteBtn from 'ui-component/extended/AutocompleteBtn';\r\nimport io from 'socket.io-client';\r\nimport { host } from 'services/baseAPI';\r\nimport FileUpload from './FileUpload';\r\nimport MoveTaskBtn from 'ui-component/MenuButton/MoveTaskBtn';\r\n\r\n// ==============================|| BOARD FORM ||============================== //\r\nconst taskAPI = new TaskAPI();\r\nconst boardAPI = new BoardAPI();\r\nconst uploadAPI = new UploadAPI();\r\nconst socket = io(host, {\r\n  transports: ['websocket', 'polling'],\r\n  withCredentials: true,\r\n});\r\n\r\nconst TForm = (props) => {\r\n  const { open, onClose, formData, bId, status, dialogForm } = props;\r\n\r\n  const [task, setTask] = useState({});\r\n  const [BId, setBId] = useState();\r\n  const [Status, setStatus] = useState();\r\n\r\n  const [editorState, setEditorState] = useState();\r\n  const [describe, setDescribe] = useState();\r\n\r\n  const [TMember, setTMember] = useState([]);\r\n  const [BMember, setBMember] = useState([]);\r\n\r\n  const [show, setShow] = useState();\r\n  const [showMember, setShowMember] = useState(false);\r\n  const [showAttach, setShowAttach] = useState(false);\r\n\r\n  const [anchorEl, setAnchorEl] = useState(null);\r\n  const openMoveTask = Boolean(anchorEl);\r\n\r\n  const handleClose = () => {\r\n    onClose(!open);\r\n  };\r\n\r\n  const handleShowMember = (id) => {\r\n    setShow(id);\r\n    setShowMember(!showMember);\r\n  };\r\n\r\n  const handleShowAttach = (id) => {\r\n    setShow(id);\r\n    setShowAttach(!showAttach);\r\n  };\r\n\r\n  const handleMoveTask = (event) => {\r\n    setAnchorEl(event.currentTarget);\r\n  };\r\n\r\n  const handleCloseMoveTask = () => {\r\n    setAnchorEl(null);\r\n  };\r\n\r\n  const handleChange = (event) => {\r\n    const name = event.target.name;\r\n    const value = event.target.value;\r\n    setTask({ ...task, [name]: value });\r\n  };\r\n\r\n  const handleMemberChange = (event, value) => {\r\n    setTMember(value);\r\n  };\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    const data = new FormData(e.currentTarget);\r\n    const task = {\r\n      task: data.get('task'),\r\n      describe: describe,\r\n      member: TMember,\r\n    };\r\n\r\n    if (task.task === '') {\r\n      swal({\r\n        text: 'Please enter a title for the task.',\r\n        buttons: false,\r\n        timer: 3000,\r\n        icon: 'info',\r\n      });\r\n    } else {\r\n      if (data.get('_id') === '') {\r\n        task.status = Status;\r\n        task.boardID = BId;\r\n\r\n        taskAPI\r\n          .createNew(task)\r\n          .then((res) => {\r\n            if (res.data.success === true) {\r\n              socket.emit('task', res.data.data);\r\n\r\n              onClose(!open);\r\n            }\r\n          })\r\n          .catch(() => {\r\n            swal({\r\n              text: 'Sorry, something went wrong. Please contact to admin for support.',\r\n              buttons: false,\r\n              timer: 5000,\r\n              icon: 'error',\r\n            });\r\n          });\r\n      } else {\r\n        taskAPI\r\n          .updateByID(data.get('_id'), task)\r\n          .then((res) => {\r\n            if (res.data.success === true) {\r\n              socket.emit('task', res.data.data);\r\n\r\n              //Thông báo thành công\r\n              swal({\r\n                text: 'Successfully update task.',\r\n                buttons: false,\r\n                timer: 2000,\r\n                icon: 'success',\r\n              });\r\n\r\n              setTimeout(() => {\r\n                onClose(!open);\r\n              }, 2000);\r\n            }\r\n          })\r\n          .catch(() => {\r\n            swal({\r\n              text: 'Sorry, something went wrong. Please contact to admin for support.',\r\n              buttons: false,\r\n              timer: 5000,\r\n              icon: 'error',\r\n            });\r\n          });\r\n      }\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (dialogForm === 0) {\r\n      setTask({\r\n        _id: '',\r\n        task: '',\r\n      });\r\n      setBId(bId);\r\n      setStatus(status);\r\n      setDescribe('');\r\n      setTMember([]);\r\n    } else if (dialogForm === 1) {\r\n      setTask(formData);\r\n      setStatus(formData.status);\r\n      setDescribe(formData.describe);\r\n\r\n      if (bId !== undefined) {\r\n        boardAPI.getByID(bId).then((result) => {\r\n          setBMember(result.data[0].member);\r\n        });\r\n      }\r\n\r\n      if (formData.member.length !== 0) {\r\n        setTMember(formData.member);\r\n        setShow(formData._id);\r\n        setShowMember(true);\r\n      }\r\n\r\n      uploadAPI.getFromTask().then((result) => {\r\n        const arr = [];\r\n\r\n        result.data.data.map((res) => {\r\n          if (res.taskID._id === formData._id) {\r\n            arr.push(res);\r\n          }\r\n        });\r\n\r\n        if (arr.length !== 0) {\r\n          setShow(formData._id);\r\n          setShowAttach(true);\r\n        }\r\n      });\r\n    }\r\n  }, [dialogForm, formData, bId, status]);\r\n\r\n  return (\r\n    <Dialog open={open} onClose={handleClose} maxWidth=\"lg\" scroll=\"body\">\r\n      <Box component=\"form\" onSubmit={handleSubmit} noValidate sx={{ mt: 1 }}>\r\n        <DialogContent>\r\n          <DialogForm value={dialogForm} index={0}>\r\n            <Grid sx={{ display: 'none' }}>\r\n              <Typography variant=\"h4\">Id:</Typography>\r\n\r\n              <OutlinedInput id=\"_id\" name=\"_id\" value={task._id} onChange={handleChange} variant=\"standard\" />\r\n            </Grid>\r\n\r\n            <Grid container alignItems=\"center\" sx={{ height: 70 }}>\r\n              <Typography sx={{ mr: 6 }} color=\"primary\" variant=\"h5\">\r\n                Task title:\r\n              </Typography>\r\n\r\n              <OutlinedInput id=\"task\" type=\"text\" value={task.task} name=\"task\" onChange={handleChange} placeholder=\"Enter task title\" />\r\n            </Grid>\r\n\r\n            <Grid container alignItems=\"center\" justifyContent=\"space-evenly\" sx={{ mt: 4 }}>\r\n              <AnimateButton>\r\n                <Button disableElevation size=\"large\" onClick={handleClose} variant=\"contained\" color=\"secondary\">\r\n                  Cancel\r\n                </Button>\r\n              </AnimateButton>\r\n\r\n              <AnimateButton>\r\n                <Button disableElevation size=\"large\" type=\"submit\" variant=\"contained\" color=\"primary\">\r\n                  Save\r\n                </Button>\r\n              </AnimateButton>\r\n            </Grid>\r\n          </DialogForm>\r\n\r\n          <DialogForm value={dialogForm} index={1}>\r\n            <Grid item display=\"flex\">\r\n              <Grid sx={{ width: 500, mr: 1 }}>\r\n                <Grid sx={{ display: 'none' }}>\r\n                  <Typography variant=\"h4\">Id:</Typography>\r\n\r\n                  <OutlinedInput id=\"_id\" name=\"_id\" value={task._id} onChange={handleChange} variant=\"standard\" />\r\n                </Grid>\r\n\r\n                <Grid item display=\"flex\" alignItems=\"center\">\r\n                  <IconCreditCard />\r\n\r\n                  <textarea id=\"task\" className=\"task-title\" value={task.task} name=\"task\" onChange={handleChange} />\r\n                </Grid>\r\n\r\n                {show === task._id && showMember && (\r\n                  <Grid>\r\n                    <Grid container alignItems=\"center\" sx={{ mt: 2, mb: 1 }}>\r\n                      <IconUsers />\r\n\r\n                      <Typography sx={{ ml: 1 }} color=\"primary\" variant=\"h5\">\r\n                        Member:\r\n                      </Typography>\r\n                    </Grid>\r\n\r\n                    <Grid sx={{ pl: 4, pr: 2 }}>\r\n                      <AutocompleteBtn options={BMember} member={TMember} handleChange={handleMemberChange} />\r\n                    </Grid>\r\n                  </Grid>\r\n                )}\r\n\r\n                <Grid>\r\n                  <Grid container alignItems=\"center\" sx={{ mt: 4 }}>\r\n                    <IconAlignJustified />\r\n\r\n                    <Typography sx={{ ml: 1 }} color=\"primary\" variant=\"h5\">\r\n                      Describe:\r\n                    </Typography>\r\n                  </Grid>\r\n\r\n                  <Grid sx={{ paddingLeft: 4 }}>\r\n                    <Editor\r\n                      editorState={editorState}\r\n                      toolbarStyle={{ width: 439, border: '1px solid' }}\r\n                      editorStyle={{\r\n                        color: 'black',\r\n                        border: '1px solid',\r\n                        width: 450,\r\n                        paddingRight: 10,\r\n                        paddingLeft: 10,\r\n                      }}\r\n                      onEditorStateChange={(newState) => {\r\n                        setEditorState(newState);\r\n                        setDescribe(editorState && draftToMarkdown(convertToRaw(editorState.getCurrentContent())));\r\n                      }}\r\n                      toolbar={{\r\n                        options: ['inline', 'fontSize', 'fontFamily', 'list', 'textAlign', 'embedded', 'emoji', 'image', 'history'],\r\n                        list: { inDropdown: true },\r\n                        textAlign: { inDropdown: true },\r\n                        link: { inDropdown: true },\r\n                      }}\r\n                      placeholder=\"Add more detailed description...\"\r\n                    />\r\n                  </Grid>\r\n                </Grid>\r\n\r\n                <Grid>\r\n                  {show === task._id && showAttach && (\r\n                    <Grid container alignItems=\"center\" sx={{ mt: 4 }}>\r\n                      <IconPaperclip />\r\n\r\n                      <Typography sx={{ ml: 1 }} color=\"primary\" variant=\"h5\">\r\n                        Attachments:\r\n                      </Typography>\r\n                    </Grid>\r\n                  )}\r\n\r\n                  <FileUpload taskID={task._id} show={showAttach} />\r\n                </Grid>\r\n              </Grid>\r\n\r\n              <MenuList>\r\n                <Typography variant=\"subtitle1\" sx={{ mt: 4 }}>\r\n                  Add to card\r\n                </Typography>\r\n\r\n                <MenuItem sx={{ mb: 2, boxShadow: 2 }} onClick={() => handleShowMember(task._id)}>\r\n                  <Grid sx={{ mr: 1 }}>\r\n                    <IconUser size={16} />\r\n                  </Grid>\r\n                  Member\r\n                </MenuItem>\r\n\r\n                <MenuItem sx={{ mb: 2, boxShadow: 2 }}>\r\n                  <Grid sx={{ mr: 1 }}>\r\n                    <IconClock size={16} />\r\n                  </Grid>\r\n                  Day\r\n                </MenuItem>\r\n\r\n                <MenuItem sx={{ mb: 2, boxShadow: 2 }} onClick={() => handleShowAttach(task._id)}>\r\n                  <Grid sx={{ mr: 1 }}>\r\n                    <IconPaperclip size={16} />\r\n                  </Grid>\r\n                  Attach\r\n                </MenuItem>\r\n\r\n                <Typography variant=\"subtitle1\" sx={{ mt: 4 }}>\r\n                  Manipulation\r\n                </Typography>\r\n\r\n                <MenuItem sx={{ mb: 2, boxShadow: 2 }} onClick={handleMoveTask}>\r\n                  <Grid sx={{ mr: 1 }}>\r\n                    <IconArrowBigRightLines size={16} />\r\n                  </Grid>\r\n                  Move\r\n                </MenuItem>\r\n                <MoveTaskBtn task={task} anchorEl={anchorEl} open={openMoveTask} handleClose={handleCloseMoveTask} />\r\n\r\n                <MenuItem sx={{ mb: 2, boxShadow: 2 }}>\r\n                  <Grid sx={{ mr: 1 }}>\r\n                    <IconArchive size={16} />\r\n                  </Grid>\r\n                  Storage\r\n                </MenuItem>\r\n\r\n                <AnimateButton>\r\n                  <Button sx={{ mt: 4, ml: 3 }} disableElevation size=\"small\" type=\"submit\" variant=\"contained\" color=\"primary\">\r\n                    Save\r\n                  </Button>\r\n                </AnimateButton>\r\n              </MenuList>\r\n            </Grid>\r\n          </DialogForm>\r\n        </DialogContent>\r\n      </Box>\r\n    </Dialog>\r\n  );\r\n};\r\n\r\nTForm.propTypes = {\r\n  open: PropTypes.bool.isRequired,\r\n  onClose: PropTypes.func.isRequired,\r\n  formData: PropTypes.object,\r\n  bId: PropTypes.any,\r\n  status: PropTypes.number,\r\n  dialogForm: PropTypes.number.isRequired,\r\n};\r\n\r\nexport default TForm;\r\n","import PropTypes from 'prop-types';\r\nimport { useState } from 'react';\r\n\r\n// material-ui\r\nimport { Avatar, ListItemButton, ListItemText, Grid } from '@mui/material';\r\n\r\n// icons\r\nimport { IconTrash } from '@tabler/icons';\r\n\r\n// project imports\r\nimport TForm from './TaskForm';\r\nimport TaskAPI from 'services/TaskAPI';\r\nimport io from 'socket.io-client';\r\nimport { host } from 'services/baseAPI';\r\n\r\n// ==============================|| TASK ITEM ||============================== //\r\nconst taskAPI = new TaskAPI();\r\nconst socket = io(host, {\r\n  transports: ['websocket', 'polling'],\r\n  withCredentials: true,\r\n});\r\n\r\nconst TaskItem = ({ item, bId }) => {\r\n  const [openT, setOpenT] = useState(false);\r\n\r\n  const dragStart = (e, id) => {\r\n    e.dataTransfer.setData('id', id);\r\n  };\r\n\r\n  const handleEditT = () => {\r\n    setOpenT(true);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setOpenT(false);\r\n  };\r\n\r\n  const handleDelete = (id) => {\r\n    swal({\r\n      title: 'Are you sure?',\r\n      text: 'Once deleted, you will not be able to recover.',\r\n      icon: 'warning',\r\n      buttons: [true, 'Delete'],\r\n      dangerMode: true,\r\n    }).then((willDelete) => {\r\n      if (willDelete) {\r\n        taskAPI\r\n          .deleteByID(id)\r\n          .then((res) => {\r\n            if (res.status === 200) {\r\n              socket.emit('task', res.data);\r\n            }\r\n          })\r\n          .catch(() => {\r\n            //Thông báo lỗi\r\n            swal({\r\n              text: 'Sorry, something went wrong. Please contact to admin for support.',\r\n              buttons: false,\r\n              timer: 5000,\r\n              icon: 'error',\r\n            });\r\n          });\r\n      }\r\n    });\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Grid container sx={{ position: 'relative', p: 1 }}>\r\n        <ListItemButton\r\n          sx={{\r\n            borderRadius: 2,\r\n            width: 215,\r\n            backgroundColor: 'white',\r\n            display: 'flex',\r\n            flexDirection: 'column',\r\n            alignItems: 'flex-start',\r\n            '&:hover': { backgroundColor: 'rgb(250, 250, 250)' },\r\n            '&:hover + .hide': {\r\n              display: 'block',\r\n            },\r\n          }}\r\n          onClick={handleEditT}\r\n          onDragStart={(e) => dragStart(e, item._id)}\r\n          draggable\r\n        >\r\n          <ListItemText primary={item.task} />\r\n\r\n          {item.member !== [] && (\r\n            <div style={{ marginTop: 10, display: 'flex' }}>\r\n              {item.member.map((user) => (\r\n                <Avatar key={user._id} src={user.avatar.data} sx={{ width: 24, height: 24 }} />\r\n              ))}\r\n            </div>\r\n          )}\r\n        </ListItemButton>\r\n\r\n        <Grid\r\n          className=\"hide\"\r\n          sx={{\r\n            display: 'none',\r\n            cursor: 'pointer',\r\n            position: 'absolute',\r\n            top: 18,\r\n            right: 4,\r\n            minWidth: 30,\r\n            p: '0 0 0 0',\r\n            '&:hover': { display: 'block', color: '#90CAF9' },\r\n          }}\r\n          onClick={() => {\r\n            handleDelete(item._id);\r\n          }}\r\n        >\r\n          <IconTrash />\r\n        </Grid>\r\n      </Grid>\r\n      <TForm open={openT} onClose={handleClose} formData={item} bId={bId} dialogForm={1} />\r\n    </>\r\n  );\r\n};\r\n\r\nTaskItem.propTypes = {\r\n  item: PropTypes.object,\r\n  bId: PropTypes.any,\r\n};\r\n\r\nexport default TaskItem;\r\n","import PropTypes from 'prop-types';\r\nimport { useState } from 'react';\r\n\r\n// material-ui\r\nimport { Typography, Grid, Card, Button, CardContent } from '@mui/material';\r\n\r\n// icons\r\nimport { IconPlus } from '@tabler/icons';\r\n\r\n// project imports\r\nimport TForm from './TaskForm';\r\nimport TaskItem from './Item';\r\nimport TaskAPI from 'services/TaskAPI';\r\nimport io from 'socket.io-client';\r\nimport { host } from 'services/baseAPI';\r\n\r\n// ==============================|| TASK LIST ||============================== //\r\nconst taskAPI = new TaskAPI();\r\nconst socket = io(host, {\r\n  transports: ['websocket', 'polling'],\r\n  withCredentials: true,\r\n});\r\n\r\nconst TaskList = ({ list, item, bId }) => {\r\n  const [openT, setOpenT] = useState(false);\r\n\r\n  const dragOver = (e) => {\r\n    e.preventDefault();\r\n  };\r\n\r\n  const drop = (e, index) => {\r\n    let id = e.dataTransfer.getData('id');\r\n\r\n    taskAPI.getAll().then((result) => {\r\n      result.data.data.map((res) => {\r\n        if (res._id === id) {\r\n          const task = {\r\n            status: index,\r\n          };\r\n\r\n          taskAPI\r\n            .updateByID(res._id, task)\r\n            .then((res) => {\r\n              if (res.data.success === true) {\r\n                socket.emit('task', res.data.data);\r\n              }\r\n            })\r\n            .catch(() => {\r\n              swal({\r\n                text: 'Sorry, something went wrong. Please contact to admin for support.',\r\n                buttons: false,\r\n                timer: 5000,\r\n                icon: 'error',\r\n              });\r\n            });\r\n        }\r\n      });\r\n    });\r\n  };\r\n\r\n  const handleCreateT = () => {\r\n    setOpenT(true);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setOpenT(false);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Card\r\n        sx={{\r\n          width: 240,\r\n          height: 'fit-content',\r\n          borderRadius: 2,\r\n          backgroundColor: 'rgba(255, 255, 255, 0.5)',\r\n        }}\r\n        variant=\"outlined\"\r\n      >\r\n        <CardContent\r\n          sx={{ backgroundColor: `${list.bgColor}`, height: 100, display: 'flex', justifyContent: 'center', alignItems: 'center' }}\r\n        >\r\n          <Typography variant=\"h3\" sx={{ color: 'white' }}>\r\n            {list.title}\r\n          </Typography>\r\n        </CardContent>\r\n\r\n        <Grid\r\n          sx={{\r\n            height: 285,\r\n            overflowY: 'hidden',\r\n            '&:hover': {\r\n              overflowY: 'auto',\r\n              '&::-webkit-scrollbar': {\r\n                width: 7,\r\n              },\r\n              '&::-webkit-scrollbar-track': {\r\n                background: '#f1f1f1',\r\n                borderRadius: 10,\r\n              },\r\n              '&::-webkit-scrollbar-thumb': {\r\n                background: '#888',\r\n                borderRadius: 10,\r\n              },\r\n              '&::-webkit-scrollbar-thumb:hover': {\r\n                background: '#555',\r\n              },\r\n            },\r\n          }}\r\n          onDragOver={(e) => dragOver(e)}\r\n          onDrop={(e) => drop(e, list.id)}\r\n        >\r\n          {item.map((data) => (\r\n            <div key={data._id}>{data.status === list.id && <TaskItem item={data} bId={bId} />}</div>\r\n          ))}\r\n        </Grid>\r\n\r\n        <Button\r\n          variant=\"contained\"\r\n          sx={{ mx: 1, my: 2, borderRadius: 2, height: 40, width: 212 }}\r\n          onClick={handleCreateT}\r\n          startIcon={<IconPlus size={20} />}\r\n        >\r\n          Add task\r\n        </Button>\r\n      </Card>\r\n\r\n      <TForm open={openT} onClose={handleClose} bId={bId} status={list.id} dialogForm={0} />\r\n    </>\r\n  );\r\n};\r\n\r\nTaskList.propTypes = {\r\n  list: PropTypes.object,\r\n  item: PropTypes.array,\r\n  bId: PropTypes.any,\r\n};\r\n\r\nexport default TaskList;\r\n","import { useEffect, useState } from 'react';\r\nimport { useNavigate, useParams } from 'react-router';\r\n\r\n// material-ui\r\nimport { Avatar, Typography, Grid, Button, Tooltip, IconButton, Menu, MenuItem, Divider } from '@mui/material';\r\n\r\n// icons\r\nimport { IconPencil } from '@tabler/icons';\r\n\r\n// project imports\r\nimport BoardAPI from 'services/BoardAPI';\r\nimport BForm from 'views/board/BoardForm';\r\nimport TaskList from './task/List';\r\nimport io from 'socket.io-client';\r\nimport { host } from 'services/baseAPI';\r\nimport FilterBtn from 'ui-component/MenuButton/FilterBtn';\r\n\r\n// ==============================|| BOARD DETAIL ||============================== //\r\nconst boardAPI = new BoardAPI();\r\nconst socket = io(host, {\r\n  transports: ['websocket', 'polling'],\r\n  withCredentials: true,\r\n});\r\n\r\nconst lists = [\r\n  {\r\n    id: 0,\r\n    title: 'Backlog',\r\n    bgColor: 'rgb(4, 124, 188)',\r\n  },\r\n  {\r\n    id: 1,\r\n    title: 'To-Do',\r\n    bgColor: 'rgb(236, 92, 68)',\r\n  },\r\n  {\r\n    id: 2,\r\n    title: 'Doing',\r\n    bgColor: 'rgb(236, 92, 68)',\r\n  },\r\n  {\r\n    id: 3,\r\n    title: 'Done',\r\n    bgColor: 'rgb(100, 188, 76)',\r\n  },\r\n];\r\n\r\nconst Detail = () => {\r\n  const { boardId } = useParams();\r\n  const navigate = useNavigate();\r\n\r\n  const [open, setOpen] = useState(false);\r\n\r\n  const [board, setBoard] = useState({});\r\n  const [bgImg, setBgImg] = useState({});\r\n  const [task, setTask] = useState([]);\r\n\r\n  const [BMember, setBMember] = useState([]);\r\n\r\n  const [anchorEl, setAnchorEl] = useState(null);\r\n  const [userID, setUserID] = useState();\r\n  const openUser = Boolean(anchorEl);\r\n\r\n  const [checkNone, setCheckNone] = useState(false);\r\n  const [check, setCheck] = useState(false);\r\n\r\n  const handleClick = (event, id) => {\r\n    setAnchorEl(event.currentTarget);\r\n    setUserID(id);\r\n  };\r\n\r\n  const handleCloseUser = () => {\r\n    setAnchorEl(null);\r\n  };\r\n\r\n  const loadData = (id) => {\r\n    boardAPI.getByID(id).then((result) => {\r\n      setBoard(result.data[0]);\r\n      setBgImg(result.data[0].bgImg);\r\n      setTask(result.data[0].tasks);\r\n      setBMember(result.data[0].member);\r\n    });\r\n  };\r\n\r\n  const handleFilterNone = (event) => {\r\n    setCheckNone(event.target.checked);\r\n    setCheck(false);\r\n\r\n    boardAPI.getByID(boardId).then((result) => {\r\n      let arr = [];\r\n\r\n      result.data[0].tasks.map((res) => {\r\n        if (res.member.length === 0) {\r\n          arr.push(res);\r\n        }\r\n      });\r\n\r\n      if (event.target.checked === true) {\r\n        setTask(arr);\r\n      } else {\r\n        setTask(result.data[0].tasks);\r\n      }\r\n    });\r\n  };\r\n\r\n  const handleFilter = (event, id) => {\r\n    setUserID(id);\r\n    setCheckNone(false);\r\n    setCheck(event.target.checked);\r\n\r\n    boardAPI.getByID(boardId).then((result) => {\r\n      let arr = [];\r\n\r\n      result.data[0].tasks.map((res) => {\r\n        res.member.map((data) => {\r\n          if (data._id === id) {\r\n            arr.push(res);\r\n          }\r\n        });\r\n      });\r\n\r\n      if (event.target.checked === true) {\r\n        setTask(arr);\r\n      } else {\r\n        setTask(result.data[0].tasks);\r\n      }\r\n    });\r\n  };\r\n\r\n  const handleEdit = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  useEffect(() => {\r\n    loadData(boardId);\r\n\r\n    socket.on('board', () => {\r\n      loadData(boardId);\r\n    });\r\n\r\n    socket.on('task', () => {\r\n      loadData(boardId);\r\n    });\r\n  }, [boardId]);\r\n\r\n  return (\r\n    <>\r\n      <Grid container justifyContent=\"space-between\" alignItems=\"center\" sx={{ mb: 2, px: 2 }}>\r\n        <Typography variant=\"h2\" sx={{ fontWeight: 500 }}>\r\n          {board.name}\r\n        </Typography>\r\n\r\n        <Grid item display=\"flex\">\r\n          <Grid sx={{ mr: 2 }}>\r\n            <FilterBtn\r\n              page=\"board\"\r\n              id={userID}\r\n              check={check}\r\n              checkNone={checkNone}\r\n              member={board.member}\r\n              handleFilterNone={handleFilterNone}\r\n              handleFilter={handleFilter}\r\n            />\r\n          </Grid>\r\n\r\n          {BMember.map((user) => (\r\n            <div key={user._id}>\r\n              <Tooltip title={user.name}>\r\n                <IconButton\r\n                  onClick={(e) => handleClick(e, user._id)}\r\n                  aria-controls={openUser ? 'account-menu' : undefined}\r\n                  aria-haspopup=\"true\"\r\n                  aria-expanded={openUser ? 'true' : undefined}\r\n                >\r\n                  <Avatar src={user.avatar.data} sx={{ width: 30, height: 30 }} />\r\n                </IconButton>\r\n              </Tooltip>\r\n\r\n              {userID === user._id && (\r\n                <Menu\r\n                  anchorEl={anchorEl}\r\n                  id=\"account-menu\"\r\n                  open={openUser}\r\n                  onClose={handleCloseUser}\r\n                  PaperProps={{\r\n                    elevation: 0,\r\n                    sx: {\r\n                      overflow: 'visible',\r\n                      filter: 'drop-shadow(0px 2px 8px rgba(0,0,0,0.32))',\r\n                      mt: 1.5,\r\n                      '& .MuiAvatar-root': {\r\n                        width: 80,\r\n                        height: 80,\r\n                        ml: -0.5,\r\n                        mr: 1,\r\n                      },\r\n                      '&:before': {\r\n                        content: '\"\"',\r\n                        display: 'block',\r\n                        position: 'absolute',\r\n                        top: 0,\r\n                        right: 14,\r\n                        width: 10,\r\n                        height: 10,\r\n                        transform: 'translateY(-50%) rotate(45deg)',\r\n                        zIndex: 0,\r\n                      },\r\n                    },\r\n                  }}\r\n                  transformOrigin={{ horizontal: 'right', vertical: 'top' }}\r\n                  anchorOrigin={{ horizontal: 'right', vertical: 'bottom' }}\r\n                >\r\n                  <Grid container justifyContent=\"center\" alignItems=\"center\" sx={{ p: 3 }}>\r\n                    <Avatar alt=\"profile user\" src={user.avatar.data} sx={{ mr: 2 }} />\r\n\r\n                    <Grid>\r\n                      <Typography variant=\"h3\">{user.name}</Typography>\r\n\r\n                      <Typography variant=\"subtitle2\">{user.email}</Typography>\r\n                    </Grid>\r\n                  </Grid>\r\n                  <Divider />\r\n\r\n                  <MenuItem onClick={() => navigate(`/u/profile/${user._id}`, { replace: true })}>View profile</MenuItem>\r\n                </Menu>\r\n              )}\r\n            </div>\r\n          ))}\r\n\r\n          <Button variant=\"contained\" sx={{ ml: 2, height: 'fit-content' }} onClick={handleEdit} startIcon={<IconPencil size={20} />}>\r\n            Edit\r\n          </Button>\r\n        </Grid>\r\n      </Grid>\r\n\r\n      <Grid\r\n        container\r\n        justifyContent=\"space-evenly\"\r\n        sx={{\r\n          py: 2,\r\n          backgroundImage: `url('${bgImg.data}')`,\r\n          backgroundSize: 'cover',\r\n          backgroundRepeat: 'no-repeat',\r\n          backgroundClip: 'border-box',\r\n        }}\r\n      >\r\n        {lists.map((value) => (\r\n          <TaskList key={value.id} list={value} item={task} bId={boardId} />\r\n        ))}\r\n      </Grid>\r\n\r\n      <BForm open={open} onClose={handleClose} formData={board} wsId={board.workSpaceID} dialogForm={1} />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Detail;\r\n"],"names":["TaskAPI","BaseAPI","constructor","super","endpoint","createNew","async","axios","method","url","this","api","data","task","getAll","updateByID","id","StyledMenu","styled","props","elevation","anchorOrigin","vertical","horizontal","transformOrigin","theme","borderRadius","marginTop","spacing","minWidth","color","palette","mode","grey","boxShadow","padding","fontSize","text","secondary","marginRight","backgroundColor","alpha","primary","main","action","selectedOpacity","page","check","checkNone","handleFilterNone","handleFilter","member","board","date","anchorEl","setAnchorEl","useState","open","Boolean","undefined","variant","disableElevation","onClick","event","currentTarget","startIcon","size","MenuListProps","onClose","sx","display","flexDirection","m","component","control","checked","onChange","e","src","width","height","mr","label","map","user","_id","avatar","name","UploadAPI","uploadFile","upload","getFromTask","getFromComment","token","sessionStorage","getItem","CommentAPI","headers","Authorization","comment","getByTaskID","commentAPI","userAPI","UserAPI","uploadAPI","socket","io","host","transports","withCredentials","taskId","onEdit","editMessage","fileMessage","commentId","inputWidth","inputRef","createRef","userID","inputStr","setInputStr","sender","setSender","showEmoji","setShowEmoji","file","setFile","useEffect","getByID","then","res","Grid","container","alignItems","mt","Avatar","p","position","className","placeholder","value","target","style","scrollHeight","ref","item","justifyContent","AnimateButton","Button","disabled","type","preventDefault","message","taskID","success","emit","catch","swal","buttons","timer","icon","post","IconButton","current","focus","multiple","hidden","base64","EndcodeFileBase64","files","top","right","previewConfig","showPreview","emojiStyle","onEmojiClick","emoji","start","substring","selectionStart","end","fileComment","userId","setMessage","editMS","setEditMS","messageId","setMessageId","loadData","result","handleCloseEdit","on","Input","overflow","overflowY","background","createDate","Date","createdAt","toLocaleString","updateDate","updatedAt","senderID","Typography","href","cursor","textDecoration","handleEdit","handleDelete","title","dangerMode","willDelete","deleteByID","status","show","arr","push","paddingLeft","maxHeight","match","BackgroundLetterAvatar","h","w","f","ml","handleComment","boardAPI","BoardAPI","taskAPI","lists","handleClose","navigate","useNavigate","setBoard","currentBoardID","setCurrentBoardID","boardID","setBoardID","listID","setListID","Menu","PaperProps","filter","content","transform","zIndex","Box","onSubmit","replace","noValidate","DialogTitle","fontWeight","DialogContent","InputLabel","Select","fullWidth","native","my","formData","bId","dialogForm","setTask","BId","setBId","Status","setStatus","editorState","setEditorState","describe","setDescribe","TMember","setTMember","BMember","setBMember","setShow","showMember","setShowMember","showAttach","setShowAttach","openMoveTask","handleChange","length","Dialog","maxWidth","scroll","FormData","get","setTimeout","DialogForm","index","OutlinedInput","mb","pl","pr","AutocompleteBtn","options","Editor","toolbarStyle","border","editorStyle","paddingRight","onEditorStateChange","newState","draftToMarkdown","convertToRaw","getCurrentContent","toolbar","list","inDropdown","textAlign","link","MenuList","MenuItem","handleShowMember","handleShowAttach","openT","setOpenT","ListItemButton","onDragStart","dataTransfer","setData","dragStart","draggable","ListItemText","Card","CardContent","bgColor","onDragOver","dragOver","onDrop","getData","drop","mx","boardId","useParams","setOpen","bgImg","setBgImg","setUserID","openUser","setCheckNone","setCheck","handleCloseUser","tasks","px","FilterBtn","Tooltip","handleClick","alt","email","Divider","py","backgroundImage","backgroundSize","backgroundRepeat","backgroundClip","wsId","workSpaceID"],"sourceRoot":""}