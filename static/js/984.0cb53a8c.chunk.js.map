{"version":3,"file":"static/js/984.0cb53a8c.chunk.js","mappings":"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","sources":["services/TaskAPI.js","services/CommentAPI.js","services/UploadAPI.js","views/board/task/comment/Input.js","views/board/task/comment/CommentForm.js","views/board/task/FileUpload.js","views/board/task/TaskForm.js","views/board/task/Item.js","views/board/task/List.js","views/board/Detail.js"],"sourcesContent":["import axios from 'axios';\nimport { BaseAPI } from './baseAPI';\n\nexport default class TaskAPI extends BaseAPI {\n  constructor() {\n    super({ endpoint: 'api/tasks' });\n  }\n\n  createNew = async (data) => {\n    const res = await axios({\n      method: 'POST',\n      url: `${this.api}/${this.endpoint}/createTask`,\n      data: {\n        task: data,\n      },\n    });\n\n    return res;\n  };\n\n  getAll = async () => {\n    const res = await axios({\n      method: 'GET',\n      url: `${this.api}/${this.endpoint}/getAllTasksOfAllBoards`,\n      data: null,\n    });\n\n    return res;\n  };\n\n  updateByID = async (id, data) => {\n    const res = await axios({\n      method: 'PUT',\n      url: `${this.api}/${this.endpoint}/updateTaskByID?id=${id}`,\n      data: {\n        task: data,\n      },\n    });\n\n    return res;\n  };\n}\n","import axios from 'axios';\r\nimport { BaseAPI } from './baseAPI';\r\n\r\nconst token = sessionStorage.getItem('token');\r\n\r\nexport default class CommentAPI extends BaseAPI {\r\n  constructor() {\r\n    super({ endpoint: 'api/comments' });\r\n  }\r\n\r\n  createNew = async (data) => {\r\n    const res = await axios({\r\n      headers: {\r\n        Authorization: `Bearer ${token}`,\r\n      },\r\n      method: 'POST',\r\n      url: `${this.api}/${this.endpoint}/addComment`,\r\n      data: {\r\n        comment: data,\r\n      },\r\n    });\r\n\r\n    return res;\r\n  };\r\n\r\n  getByTaskID = async (id) => {\r\n    const res = await axios({\r\n      method: 'GET',\r\n      url: `${this.api}/${this.endpoint}/getCommentByTaskID?id=${id}`,\r\n      data: null,\r\n    });\r\n\r\n    return res;\r\n  };\r\n\r\n  updateByID = async (id, data) => {\r\n    const res = await axios({\r\n      method: 'PUT',\r\n      url: `${this.api}/${this.endpoint}/updateCommentByID?id=${id}`,\r\n      data: {\r\n        comment: data,\r\n      },\r\n    });\r\n\r\n    return res;\r\n  };\r\n}\r\n","import axios from 'axios';\r\nimport { BaseAPI } from './baseAPI';\r\n\r\nexport default class UploadAPI extends BaseAPI {\r\n  constructor() {\r\n    super({ endpoint: 'api/uploads' });\r\n  }\r\n\r\n  uploadFile = async (data) => {\r\n    const res = await axios({\r\n      method: 'POST',\r\n      url: `${this.api}/${this.endpoint}/uploadFile`,\r\n      data: {\r\n        upload: data,\r\n      },\r\n    });\r\n\r\n    return res;\r\n  };\r\n\r\n  getFromTask = async () => {\r\n    const res = await axios({\r\n      method: 'GET',\r\n      url: `${this.api}/${this.endpoint}/getAllFilesOfAllTasks`,\r\n      data: null,\r\n    });\r\n\r\n    return res;\r\n  };\r\n\r\n  getFromComment = async () => {\r\n    const res = await axios({\r\n      method: 'GET',\r\n      url: `${this.api}/${this.endpoint}/getAllFilesOfAllComments`,\r\n      data: null,\r\n    });\r\n\r\n    return res;\r\n  };\r\n}\r\n","import PropTypes from 'prop-types';\r\nimport { useEffect, useState, createRef } from 'react';\r\n\r\n// material-ui\r\nimport { Button, Grid, Avatar, IconButton } from '@mui/material';\r\n\r\n// icons/img\r\nimport { IconMoodSmile, IconPaperclip, IconSend, IconX } from '@tabler/icons';\r\nimport Picker from 'emoji-picker-react';\r\n\r\n// project imports\r\nimport CommentAPI from 'services/CommentAPI';\r\nimport UserAPI from 'services/UserAPI';\r\nimport UploadAPI from 'services/UploadAPI';\r\nimport AnimateButton from 'ui-component/extended/AnimateButton';\r\nimport EndcodeFileBase64 from 'utils/endcodeFileBase64';\r\nimport io from 'socket.io-client';\r\nimport { host } from 'services/baseAPI';\r\n\r\n// ==============================|| INPUT COMMENT ||============================== //\r\nconst commentAPI = new CommentAPI();\r\nconst userAPI = new UserAPI();\r\nconst uploadAPI = new UploadAPI();\r\nconst socket = io(host);\r\n\r\nconst InputComment = (props) => {\r\n  const { taskId, onEdit, onClose, message, commentId } = props;\r\n\r\n  const inputRef = createRef();\r\n  const userID = sessionStorage.getItem('id');\r\n\r\n  const [inputStr, setInputStr] = useState('');\r\n  const [sender, setSender] = useState({});\r\n\r\n  const [showEmoji, setShowEmoji] = useState(false);\r\n\r\n  const handleClose = () => {\r\n    onClose(!onEdit);\r\n  };\r\n\r\n  const onSelectFile = async (e) => {\r\n    const upload = {\r\n      taskID: taskId,\r\n    };\r\n    const base64 = await EndcodeFileBase64(e.target.files[0]);\r\n\r\n    upload.file = base64;\r\n\r\n    uploadAPI\r\n      .uploadFile(upload)\r\n      .then((res) => {\r\n        if (res.data.success === true) {\r\n          socket.emit('upload', res.data.data);\r\n\r\n          setInputStr(res.data.data.file.url);\r\n        }\r\n      })\r\n      .catch(() => {\r\n        swal({\r\n          text: 'Sorry, something went wrong. Please contact to admin for support.',\r\n          buttons: false,\r\n          timer: 5000,\r\n          icon: 'error',\r\n        });\r\n      });\r\n  };\r\n\r\n  const handleShowEmoji = () => {\r\n    inputRef.current.focus();\r\n    setShowEmoji(!showEmoji);\r\n  };\r\n\r\n  const pickEmoji = ({ emoji }, e) => {\r\n    const ref = inputRef.current;\r\n    ref.focus();\r\n    const start = inputStr.substring(0, ref.selectionStart);\r\n    const end = inputStr.substring(ref.selectionStart);\r\n    const text = start + emoji + end;\r\n    setInputStr(text);\r\n    setShowEmoji(false);\r\n  };\r\n\r\n  const handleComment = async (e) => {\r\n    e.preventDefault();\r\n    const comment = {\r\n      message: inputStr,\r\n      taskID: taskId,\r\n    };\r\n\r\n    commentAPI\r\n      .createNew(comment)\r\n      .then((res) => {\r\n        if (res.data.success === true) {\r\n          socket.emit('comment', res.data.post);\r\n\r\n          setInputStr('');\r\n        }\r\n      })\r\n      .catch(() => {\r\n        swal({\r\n          text: 'Sorry, something went wrong. Please contact to admin for support.',\r\n          buttons: false,\r\n          timer: 5000,\r\n          icon: 'error',\r\n        });\r\n      });\r\n  };\r\n\r\n  const handleEditComment = async (e) => {\r\n    e.preventDefault();\r\n    const comment = {\r\n      message: inputStr,\r\n      taskID: taskId,\r\n    };\r\n\r\n    commentAPI\r\n      .updateByID(commentId, comment)\r\n      .then((res) => {\r\n        if (res.data.success === true) {\r\n          socket.emit('comment', res.data.data);\r\n\r\n          onClose(!onEdit);\r\n        }\r\n      })\r\n      .catch(() => {\r\n        swal({\r\n          text: 'Sorry, something went wrong. Please contact to admin for support.',\r\n          buttons: false,\r\n          timer: 5000,\r\n          icon: 'error',\r\n        });\r\n      });\r\n  };\r\n\r\n  useEffect(() => {\r\n    userAPI.getByID(userID).then((res) => {\r\n      setSender(res.data[0]);\r\n    });\r\n\r\n    if (message) {\r\n      setInputStr(message);\r\n    }\r\n  }, [userID, message]);\r\n  return (\r\n    <Grid container alignItems=\"flex-start\" sx={{ mt: 1 }}>\r\n      {!message && sender.avatar && <Avatar src={sender.avatar.data} sx={{ width: 40, height: 40, mr: 1 }} />}\r\n\r\n      <Grid sx={{ p: 1, borderRadius: 2, boxShadow: 4, position: 'relative' }}>\r\n        <textarea\r\n          className=\"comment\"\r\n          placeholder=\"Write a comment...\"\r\n          value={inputStr}\r\n          onChange={(e) => {\r\n            e.target.style.height = 'auto';\r\n            e.target.style.height = e.target.scrollHeight + 'px';\r\n\r\n            setInputStr(e.target.value);\r\n          }}\r\n          ref={inputRef}\r\n        />\r\n\r\n        <Grid item display=\"flex\" justifyContent=\"space-between\" alignItems=\"center\">\r\n          <Grid item display=\"flex\" alignItems=\"center\">\r\n            <AnimateButton>\r\n              <Button\r\n                disableElevation\r\n                disabled={inputStr === '' ? true : false}\r\n                type=\"submit\"\r\n                size=\"small\"\r\n                variant=\"contained\"\r\n                color=\"primary\"\r\n                onClick={!message ? handleComment : handleEditComment}\r\n              >\r\n                {!message ? <IconSend size={20} /> : 'Save'}\r\n              </Button>\r\n            </AnimateButton>\r\n\r\n            {onEdit === true ? (\r\n              <IconButton aria-label=\"image\" component=\"label\" onClick={handleClose}>\r\n                <IconX />\r\n              </IconButton>\r\n            ) : null}\r\n          </Grid>\r\n\r\n          <Grid item display=\"flex\" alignItems=\"center\">\r\n            <IconButton aria-label=\"image\" component=\"label\" onClick={handleShowEmoji}>\r\n              <IconMoodSmile />\r\n            </IconButton>\r\n\r\n            <IconButton aria-label=\"image\" component=\"label\">\r\n              <IconPaperclip />\r\n\r\n              <input type=\"file\" name=\"image\" multiple hidden onChange={onSelectFile} />\r\n            </IconButton>\r\n          </Grid>\r\n        </Grid>\r\n\r\n        {showEmoji && (\r\n          <div style={{ position: 'absolute', top: 95, right: 60 }}>\r\n            <Picker previewConfig={{ showPreview: false }} emojiStyle=\"google\" onEmojiClick={pickEmoji} />\r\n          </div>\r\n        )}\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n};\r\n\r\nInputComment.propTypes = {\r\n  taskId: PropTypes.any.isRequired,\r\n  onEdit: PropTypes.bool,\r\n  onClose: PropTypes.func,\r\n  message: PropTypes.any,\r\n  commentId: PropTypes.any,\r\n};\r\n\r\nexport default InputComment;\r\n","import PropTypes from 'prop-types';\r\nimport { useEffect, useState, createRef } from 'react';\r\n\r\n// material-ui\r\nimport { Button, Grid, Box, Avatar, GlobalStyles, IconButton, Typography, ButtonGroup } from '@mui/material';\r\n\r\n// icons/img\r\nimport { IconMoodSmile, IconPaperclip } from '@tabler/icons';\r\n\r\n// project imports\r\nimport CommentAPI from 'services/CommentAPI';\r\nimport AnimateButton from 'ui-component/extended/AnimateButton';\r\nimport EndcodeFileBase64 from 'utils/endcodeFileBase64';\r\nimport InputComment from './Input';\r\nimport io from 'socket.io-client';\r\nimport { host } from 'services/baseAPI';\r\n\r\n// ==============================|| COMMENT FORM ||============================== //\r\nconst commentAPI = new CommentAPI();\r\nconst socket = io(host);\r\n\r\nconst CForm = ({ taskID }) => {\r\n  const userId = sessionStorage.getItem('id');\r\n\r\n  const [message, setMessage] = useState([]);\r\n\r\n  const [editMS, setEditMS] = useState(false);\r\n  const [messageId, setMessageId] = useState();\r\n\r\n  const loadData = (id) => {\r\n    commentAPI.getByTaskID(id).then((result) => {\r\n      setMessage(result.data.comment);\r\n    });\r\n  };\r\n\r\n  const handleEdit = (id) => {\r\n    setMessageId(id);\r\n    setEditMS(true);\r\n  };\r\n\r\n  const handleCloseEdit = () => {\r\n    setEditMS(false);\r\n  };\r\n\r\n  const handleReply = () => {};\r\n\r\n  const handleDelete = (id) => {\r\n    swal({\r\n      title: 'Are you sure?',\r\n      text: 'Once deleted, you will not be able to recover.',\r\n      icon: 'warning',\r\n      buttons: [true, 'Delete'],\r\n      dangerMode: true,\r\n    }).then((willDelete) => {\r\n      if (willDelete) {\r\n        commentAPI\r\n          .deleteByID(id)\r\n          .then((res) => {\r\n            if (res.status === 200) {\r\n              socket.emit('comment', res.data);\r\n            }\r\n          })\r\n          .catch(() => {\r\n            //Thông báo lỗi\r\n            swal({\r\n              text: 'Sorry, something went wrong. Please contact to admin for support.',\r\n              buttons: false,\r\n              timer: 5000,\r\n              icon: 'error',\r\n            });\r\n          });\r\n      }\r\n    });\r\n  };\r\n\r\n  useEffect(() => {\r\n    loadData(taskID);\r\n\r\n    socket.on('comment', () => {\r\n      loadData(taskID);\r\n    });\r\n  }, [taskID]);\r\n\r\n  return (\r\n    <>\r\n      <InputComment taskId={taskID} />\r\n\r\n      <Grid\r\n        height={400}\r\n        sx={{\r\n          mt: 4,\r\n          overflow: 'hidden',\r\n          '&:hover': {\r\n            overflowY: 'auto',\r\n            '&::-webkit-scrollbar': {\r\n              width: 7,\r\n            },\r\n            '&::-webkit-scrollbar-track': {\r\n              background: '#f1f1f1',\r\n              borderRadius: 10,\r\n            },\r\n            '&::-webkit-scrollbar-thumb': {\r\n              background: '#888',\r\n              borderRadius: 10,\r\n            },\r\n            '&::-webkit-scrollbar-thumb:hover': {\r\n              background: '#555',\r\n            },\r\n          },\r\n        }}\r\n      >\r\n        {message.map((data) => {\r\n          let createDate = new Date(data.createdAt).toLocaleString();\r\n          let updateDate = new Date(data.updatedAt).toLocaleString();\r\n\r\n          return (\r\n            <Grid key={data._id} item display=\"flex\" alignItems=\"flex-start\" sx={{ mt: 2 }}>\r\n              <Avatar src={data.senderID.avatar.data} sx={{ width: 40, height: 40, mr: 1 }} />\r\n\r\n              <Grid>\r\n                <Grid item display=\"flex\" alignItems=\"center\">\r\n                  <Typography variant=\"h3\" sx={{ mr: 1 }}>\r\n                    {data.senderID.name}\r\n                  </Typography>\r\n\r\n                  <Typography variant=\"subtitle1\">{createDate === updateDate ? createDate : `${updateDate} (fixed)`}</Typography>\r\n                </Grid>\r\n\r\n                {editMS === false ? (\r\n                  <>\r\n                    <Grid sx={{ width: 435, p: 1, borderRadius: 2, boxShadow: 4 }}>\r\n                      <Typography variant=\"h4\" sx={{ mr: 1 }}>\r\n                        {data.message}\r\n                      </Typography>\r\n                    </Grid>\r\n\r\n                    <Grid item display=\"flex\" alignItems=\"center\" sx={{ position: 'relative' }}>\r\n                      {data.senderID._id === userId ? (\r\n                        <Typography\r\n                          variant=\"subtitle1\"\r\n                          sx={{ mr: 1, cursor: 'pointer', textDecoration: 'underline', '&:hover': { color: '#90CAF9' } }}\r\n                          onClick={() => handleEdit(data._id)}\r\n                        >\r\n                          Edit\r\n                        </Typography>\r\n                      ) : (\r\n                        <Typography\r\n                          variant=\"subtitle1\"\r\n                          sx={{ mr: 1, cursor: 'pointer', textDecoration: 'underline', '&:hover': { color: '#90CAF9' } }}\r\n                          onClick={handleReply}\r\n                        >\r\n                          Reply\r\n                        </Typography>\r\n                      )}\r\n\r\n                      <Typography\r\n                        variant=\"subtitle1\"\r\n                        sx={{ cursor: 'pointer', textDecoration: 'underline', '&:hover': { color: '#90CAF9' } }}\r\n                        onClick={() => handleDelete(data._id)}\r\n                      >\r\n                        Delete\r\n                      </Typography>\r\n                    </Grid>\r\n                  </>\r\n                ) : (\r\n                  <>\r\n                    {messageId === data._id ? (\r\n                      <InputComment\r\n                        taskId={taskID}\r\n                        onEdit={editMS}\r\n                        onClose={handleCloseEdit}\r\n                        message={data.message}\r\n                        commentId={messageId}\r\n                      />\r\n                    ) : (\r\n                      <>\r\n                        <Grid sx={{ width: 450, p: 1, borderRadius: 2, boxShadow: 4 }}>\r\n                          <Typography variant=\"h4\" sx={{ mr: 1 }}>\r\n                            {data.message}\r\n                          </Typography>\r\n                        </Grid>\r\n\r\n                        <Grid item display=\"flex\" alignItems=\"center\">\r\n                          {data.senderID._id === userId ? (\r\n                            <Typography\r\n                              variant=\"subtitle1\"\r\n                              sx={{ mr: 1, cursor: 'pointer', textDecoration: 'underline', '&:hover': { color: '#90CAF9' } }}\r\n                              onClick={() => handleEdit(data._id)}\r\n                            >\r\n                              Edit\r\n                            </Typography>\r\n                          ) : (\r\n                            <Typography\r\n                              variant=\"subtitle1\"\r\n                              sx={{ mr: 1, cursor: 'pointer', textDecoration: 'underline', '&:hover': { color: '#90CAF9' } }}\r\n                              onClick={handleReply}\r\n                            >\r\n                              Reply\r\n                            </Typography>\r\n                          )}\r\n\r\n                          <Typography\r\n                            variant=\"subtitle1\"\r\n                            sx={{ cursor: 'pointer', textDecoration: 'underline', '&:hover': { color: '#90CAF9' } }}\r\n                            onClick={() => handleDelete(data._id)}\r\n                          >\r\n                            Delete\r\n                          </Typography>\r\n                        </Grid>\r\n                      </>\r\n                    )}\r\n                  </>\r\n                )}\r\n              </Grid>\r\n            </Grid>\r\n          );\r\n        })}\r\n      </Grid>\r\n    </>\r\n  );\r\n};\r\n\r\nCForm.propTypes = {\r\n  taskID: PropTypes.any,\r\n};\r\n\r\nexport default CForm;\r\n","import PropTypes from 'prop-types';\r\nimport { useEffect, useState } from 'react';\r\nimport { useNavigate } from 'react-router';\r\n\r\n// material-ui\r\nimport { Button, Grid, Avatar, Typography, ListItemButton } from '@mui/material';\r\n\r\n// icons/img\r\nimport { IconPoint } from '@tabler/icons';\r\n\r\n// project imports\r\nimport UploadAPI from 'services/UploadAPI';\r\nimport AnimateButton from 'ui-component/extended/AnimateButton';\r\nimport EndcodeFileBase64 from 'utils/endcodeFileBase64';\r\nimport BackgroundLetterAvatars from 'ui-component/BackgroundLetterAvatar';\r\nimport io from 'socket.io-client';\r\nimport { host } from 'services/baseAPI';\r\n\r\n// ==============================|| FILE UPLOAD ||============================== //\r\nconst uploadAPI = new UploadAPI();\r\nconst socket = io(host);\r\n\r\nconst FileUpload = ({ taskID }) => {\r\n  const navigate = useNavigate();\r\n\r\n  const [file, setFile] = useState([]);\r\n\r\n  const loadData = (id) => {\r\n    uploadAPI.getFromTask().then((result) => {\r\n      const arr = [];\r\n\r\n      result.data.data.map((res) => {\r\n        if (res.taskID._id === id) {\r\n          arr.push(res);\r\n        }\r\n      });\r\n\r\n      setFile(arr);\r\n    });\r\n  };\r\n\r\n  const onSelectFile = async (e) => {\r\n    const upload = {\r\n      taskID: taskID,\r\n    };\r\n    const base64 = await EndcodeFileBase64(e.target.files[0]);\r\n\r\n    upload.file = base64;\r\n\r\n    uploadAPI\r\n      .uploadFile(upload)\r\n      .then((res) => {\r\n        if (res.data.success === true) {\r\n          socket.emit('upload', res.data.data);\r\n        }\r\n      })\r\n      .catch(() => {\r\n        swal({\r\n          text: 'Sorry, something went wrong. Please contact to admin for support.',\r\n          buttons: false,\r\n          timer: 5000,\r\n          icon: 'error',\r\n        });\r\n      });\r\n  };\r\n\r\n  const handleDelete = (id) => {\r\n    swal({\r\n      title: 'Are you sure?',\r\n      text: 'Once deleted, you will not be able to recover.',\r\n      icon: 'warning',\r\n      buttons: [true, 'Delete'],\r\n      dangerMode: true,\r\n    }).then((willDelete) => {\r\n      if (willDelete) {\r\n        uploadAPI\r\n          .deleteByID(id)\r\n          .then((res) => {\r\n            if (res.status === 200) {\r\n              socket.emit('upload', res.data);\r\n            }\r\n          })\r\n          .catch(() => {\r\n            //Thông báo lỗi\r\n            swal({\r\n              text: 'Sorry, something went wrong. Please contact to admin for support.',\r\n              buttons: false,\r\n              timer: 5000,\r\n              icon: 'error',\r\n            });\r\n          });\r\n      }\r\n    });\r\n  };\r\n\r\n  useEffect(() => {\r\n    loadData(taskID);\r\n\r\n    socket.on('upload', () => {\r\n      loadData(taskID);\r\n    });\r\n  }, [taskID]);\r\n\r\n  return (\r\n    <>\r\n      <Grid sx={{ mt: 2, paddingLeft: 4 }}>\r\n        <AnimateButton>\r\n          <Button variant=\"contained\" color=\"primary\" component=\"label\">\r\n            Choose file\r\n            <input type=\"file\" name=\"file\" multiple hidden onChange={onSelectFile} />\r\n          </Button>\r\n        </AnimateButton>\r\n      </Grid>\r\n\r\n      <Grid\r\n        maxHeight={250}\r\n        sx={{\r\n          paddingLeft: 4,\r\n          overflowY: 'hidden',\r\n          '&:hover': {\r\n            overflowY: 'auto',\r\n            '&::-webkit-scrollbar': {\r\n              width: 7,\r\n            },\r\n            '&::-webkit-scrollbar-track': {\r\n              background: '#f1f1f1',\r\n              borderRadius: 10,\r\n            },\r\n            '&::-webkit-scrollbar-thumb': {\r\n              background: '#888',\r\n              borderRadius: 10,\r\n            },\r\n            '&::-webkit-scrollbar-thumb:hover': {\r\n              background: '#555',\r\n            },\r\n          },\r\n        }}\r\n      >\r\n        {file.map((item) => {\r\n          let createDate = new Date(item.createdAt).toLocaleString();\r\n\r\n          return (\r\n            <a key={item._id} href={item.file.url} target=\"_blank\" style={{ textDecoration: 'none' }}>\r\n              <ListItemButton\r\n                sx={{\r\n                  mt: 2,\r\n                  p: 1,\r\n                  width: 450,\r\n                  boxShadow: 4,\r\n                  display: 'flex',\r\n                  alignItems: 'center',\r\n                }}\r\n              >\r\n                {item.file.type.match(/[^:/]\\w+\\//)[0] === 'image/' ? (\r\n                  <Avatar src={item.file.url} sx={{ borderRadius: 0, height: 70, width: 110 }} />\r\n                ) : (\r\n                  <BackgroundLetterAvatars name={item.file.name} h={70} w={110} f={32} />\r\n                )}\r\n\r\n                <Grid sx={{ ml: 2 }}>\r\n                  <Typography variant=\"h3\">{item.file.name}</Typography>\r\n\r\n                  <Grid container alignItems=\"center\">\r\n                    <Typography variant=\"subtitle1\">Added</Typography>\r\n\r\n                    <Typography variant=\"subtitle2\">\r\n                      <IconPoint />\r\n                    </Typography>\r\n\r\n                    <Typography variant=\"subtitle1\">{createDate}</Typography>\r\n\r\n                    <Typography variant=\"subtitle2\">\r\n                      <IconPoint />\r\n                    </Typography>\r\n\r\n                    <Typography\r\n                      variant=\"subtitle1\"\r\n                      sx={{ cursor: 'pointer', textDecoration: 'underline', '&:hover': { color: '#90CAF9' } }}\r\n                      onClick={() => handleDelete(item._id)}\r\n                    >\r\n                      Delete\r\n                    </Typography>\r\n                  </Grid>\r\n                </Grid>\r\n              </ListItemButton>\r\n            </a>\r\n          );\r\n        })}\r\n      </Grid>\r\n    </>\r\n  );\r\n};\r\n\r\nFileUpload.propTypes = {\r\n  taskID: PropTypes.any,\r\n};\r\n\r\nexport default FileUpload;\r\n","import PropTypes from 'prop-types';\r\nimport { useEffect, useState } from 'react';\r\nimport { Editor } from 'react-draft-wysiwyg';\r\nimport { convertToRaw } from 'draft-js';\r\nimport draftToMarkdown from 'draftjs-to-markdown';\r\nimport '../../../../node_modules/react-draft-wysiwyg/dist/react-draft-wysiwyg.css';\r\n\r\n// material-ui\r\nimport { Button, OutlinedInput, Typography, Grid, Dialog, Box, DialogContent, MenuList, MenuItem } from '@mui/material';\r\n\r\n// icons/img\r\nimport {\r\n  IconAlignJustified,\r\n  IconCreditCard,\r\n  IconListDetails,\r\n  IconPaperclip,\r\n  IconUser,\r\n  IconUsers,\r\n  IconClock,\r\n  IconArrowBigRightLines,\r\n  IconArchive,\r\n} from '@tabler/icons';\r\n\r\n// project imports\r\nimport swal from 'sweetalert';\r\nimport TaskAPI from 'services/TaskAPI';\r\nimport BoardAPI from 'services/BoardAPI';\r\nimport AnimateButton from 'ui-component/extended/AnimateButton';\r\nimport DialogForm from 'ui-component/extended/DialogForm';\r\nimport AutocompleteBtn from 'ui-component/extended/AutocompleteBtn';\r\nimport CForm from './comment/CommentForm';\r\nimport io from 'socket.io-client';\r\nimport { host } from 'services/baseAPI';\r\nimport FileUpload from './FileUpload';\r\n\r\n// ==============================|| BOARD FORM ||============================== //\r\nconst taskAPI = new TaskAPI();\r\nconst boardAPI = new BoardAPI();\r\nconst socket = io(host);\r\n\r\nconst TForm = (props) => {\r\n  const { open, onClose, formData, bId, status, dialogForm } = props;\r\n\r\n  const [task, setTask] = useState({});\r\n  const [BId, setBId] = useState();\r\n  const [Status, setStatus] = useState();\r\n\r\n  const [editorState, setEditorState] = useState();\r\n  const [describe, setDescribe] = useState();\r\n\r\n  const [TMember, setTMember] = useState([]);\r\n  const [BMember, setBMember] = useState([]);\r\n\r\n  const [show, setShow] = useState();\r\n  const [showMember, setShowMember] = useState(false);\r\n  const [showAttach, setShowAttach] = useState(false);\r\n\r\n  const handleClose = () => {\r\n    onClose(!open);\r\n  };\r\n\r\n  const handleShowMember = (id) => {\r\n    setShow(id);\r\n    setShowMember(!showMember);\r\n  };\r\n\r\n  const handleShowAttach = (id) => {\r\n    setShow(id);\r\n    setShowAttach(!showAttach);\r\n  };\r\n\r\n  const handleChange = (event) => {\r\n    const name = event.target.name;\r\n    const value = event.target.value;\r\n    setTask({ ...task, [name]: value });\r\n  };\r\n\r\n  const handleMemberChange = (event, value) => {\r\n    setTMember(value);\r\n  };\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    const data = new FormData(e.currentTarget);\r\n    const task = {\r\n      task: data.get('task'),\r\n      describe: describe,\r\n      member: TMember,\r\n    };\r\n\r\n    if (task.task === '') {\r\n      swal({\r\n        text: 'Please enter a title for the task.',\r\n        buttons: false,\r\n        timer: 3000,\r\n        icon: 'info',\r\n      });\r\n    } else {\r\n      if (data.get('_id') === '') {\r\n        task.status = Status;\r\n        task.boardID = BId;\r\n\r\n        taskAPI\r\n          .createNew(task)\r\n          .then((res) => {\r\n            if (res.data.success === true) {\r\n              socket.emit('task', res.data.data);\r\n\r\n              onClose(!open);\r\n            }\r\n          })\r\n          .catch(() => {\r\n            swal({\r\n              text: 'Sorry, something went wrong. Please contact to admin for support.',\r\n              buttons: false,\r\n              timer: 5000,\r\n              icon: 'error',\r\n            });\r\n          });\r\n      } else {\r\n        taskAPI\r\n          .updateByID(data.get('_id'), task)\r\n          .then((res) => {\r\n            if (res.data.success === true) {\r\n              socket.emit('task', res.data.data);\r\n\r\n              //Thông báo thành công\r\n              swal({\r\n                text: 'Successfully update task.',\r\n                buttons: false,\r\n                timer: 2000,\r\n                icon: 'success',\r\n              });\r\n\r\n              setTimeout(() => {\r\n                onClose(!open);\r\n              }, 2000);\r\n            }\r\n          })\r\n          .catch(() => {\r\n            swal({\r\n              text: 'Sorry, something went wrong. Please contact to admin for support.',\r\n              buttons: false,\r\n              timer: 5000,\r\n              icon: 'error',\r\n            });\r\n          });\r\n      }\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (dialogForm === 0) {\r\n      setTask({\r\n        _id: '',\r\n        task: '',\r\n      });\r\n      setBId(bId);\r\n      setStatus(status);\r\n      setDescribe('');\r\n      setTMember([]);\r\n    } else if (dialogForm === 1) {\r\n      setTask(formData);\r\n      setStatus(formData.status);\r\n      setDescribe(formData.describe);\r\n      setTMember(formData.member);\r\n\r\n      if (bId !== undefined) {\r\n        boardAPI.getByID(bId).then((result) => {\r\n          setBMember(result.data[0].member);\r\n        });\r\n      }\r\n\r\n      socket.on('upload', () => {\r\n        setShowAttach(true);\r\n      });\r\n    }\r\n  }, [dialogForm, formData, bId, status]);\r\n\r\n  return (\r\n    <Dialog open={open} onClose={handleClose} maxWidth=\"lg\" scroll=\"body\">\r\n      <Box component=\"form\" onSubmit={handleSubmit} noValidate sx={{ mt: 1 }}>\r\n        <DialogContent>\r\n          <DialogForm value={dialogForm} index={0}>\r\n            <Grid sx={{ display: 'none' }}>\r\n              <Typography variant=\"h4\">Id:</Typography>\r\n\r\n              <OutlinedInput id=\"_id\" name=\"_id\" value={task._id} onChange={handleChange} variant=\"standard\" />\r\n            </Grid>\r\n\r\n            <Grid container alignItems=\"center\" sx={{ height: 70 }}>\r\n              <Typography sx={{ mr: 6 }} color=\"primary\" variant=\"h5\">\r\n                Task title:\r\n              </Typography>\r\n\r\n              <OutlinedInput id=\"task\" type=\"text\" value={task.task} name=\"task\" onChange={handleChange} placeholder=\"Enter task title\" />\r\n            </Grid>\r\n\r\n            <Grid container alignItems=\"center\" justifyContent=\"space-evenly\" sx={{ mt: 4 }}>\r\n              <AnimateButton>\r\n                <Button disableElevation size=\"large\" onClick={handleClose} variant=\"contained\" color=\"secondary\">\r\n                  Cancel\r\n                </Button>\r\n              </AnimateButton>\r\n\r\n              <AnimateButton>\r\n                <Button disableElevation size=\"large\" type=\"submit\" variant=\"contained\" color=\"primary\">\r\n                  Save\r\n                </Button>\r\n              </AnimateButton>\r\n            </Grid>\r\n          </DialogForm>\r\n\r\n          <DialogForm value={dialogForm} index={1}>\r\n            <Grid item display=\"flex\">\r\n              <Grid sx={{ width: 500, mr: 1 }}>\r\n                <Grid sx={{ display: 'none' }}>\r\n                  <Typography variant=\"h4\">Id:</Typography>\r\n\r\n                  <OutlinedInput id=\"_id\" name=\"_id\" value={task._id} onChange={handleChange} variant=\"standard\" />\r\n                </Grid>\r\n\r\n                <Grid item display=\"flex\" alignItems=\"center\">\r\n                  <IconCreditCard />\r\n\r\n                  <textarea id=\"task\" className=\"task-title\" value={task.task} name=\"task\" onChange={handleChange} />\r\n                </Grid>\r\n\r\n                {showMember && show === task._id && (\r\n                  <Grid>\r\n                    <Grid container alignItems=\"center\" sx={{ mt: 2, mb: 1 }}>\r\n                      <IconUsers />\r\n\r\n                      <Typography sx={{ ml: 1 }} color=\"primary\" variant=\"h5\">\r\n                        Member:\r\n                      </Typography>\r\n                    </Grid>\r\n\r\n                    <Grid sx={{ paddingLeft: 4 }}>\r\n                      <AutocompleteBtn options={BMember} member={TMember} handleChange={handleMemberChange} />\r\n                    </Grid>\r\n                  </Grid>\r\n                )}\r\n\r\n                <Grid>\r\n                  <Grid container alignItems=\"center\" sx={{ mt: 4 }}>\r\n                    <IconAlignJustified />\r\n\r\n                    <Typography sx={{ ml: 1 }} color=\"primary\" variant=\"h5\">\r\n                      Describe:\r\n                    </Typography>\r\n                  </Grid>\r\n\r\n                  <Grid sx={{ paddingLeft: 4 }}>\r\n                    <Editor\r\n                      editorState={editorState}\r\n                      toolbarStyle={{ width: 439, border: '1px solid' }}\r\n                      editorStyle={{\r\n                        color: 'black',\r\n                        border: '1px solid',\r\n                        width: 450,\r\n                        paddingRight: 10,\r\n                        paddingLeft: 10,\r\n                      }}\r\n                      onEditorStateChange={(newState) => {\r\n                        setEditorState(newState);\r\n                        setDescribe(editorState && draftToMarkdown(convertToRaw(editorState.getCurrentContent())));\r\n                      }}\r\n                      toolbar={{\r\n                        options: ['inline', 'fontSize', 'fontFamily', 'list', 'textAlign', 'embedded', 'emoji', 'image', 'history'],\r\n                        list: { inDropdown: true },\r\n                        textAlign: { inDropdown: true },\r\n                        link: { inDropdown: true },\r\n                      }}\r\n                      placeholder=\"Add more detailed description...\"\r\n                    />\r\n                  </Grid>\r\n                </Grid>\r\n\r\n                {showAttach && show === task._id && (\r\n                  <Grid>\r\n                    <Grid container alignItems=\"center\" sx={{ mt: 4 }}>\r\n                      <IconPaperclip />\r\n\r\n                      <Typography sx={{ ml: 1 }} color=\"primary\" variant=\"h5\">\r\n                        Attachments:\r\n                      </Typography>\r\n                    </Grid>\r\n\r\n                    <FileUpload taskID={task._id} />\r\n                  </Grid>\r\n                )}\r\n\r\n                <Grid>\r\n                  <Grid container alignItems=\"center\" sx={{ mt: 4 }}>\r\n                    <IconListDetails />\r\n\r\n                    <Typography sx={{ ml: 1 }} color=\"primary\" variant=\"h5\">\r\n                      Work:\r\n                    </Typography>\r\n                  </Grid>\r\n\r\n                  <CForm taskID={task._id} />\r\n                </Grid>\r\n              </Grid>\r\n\r\n              <MenuList>\r\n                <Typography variant=\"subtitle1\" sx={{ mt: 4 }}>\r\n                  Add to card\r\n                </Typography>\r\n\r\n                <MenuItem sx={{ mb: 2, boxShadow: 2 }} onClick={() => handleShowMember(task._id)}>\r\n                  <Grid sx={{ mr: 1 }}>\r\n                    <IconUser size={16} />\r\n                  </Grid>\r\n                  Member\r\n                </MenuItem>\r\n\r\n                <MenuItem sx={{ mb: 2, boxShadow: 2 }}>\r\n                  <Grid sx={{ mr: 1 }}>\r\n                    <IconClock size={16} />\r\n                  </Grid>\r\n                  Day\r\n                </MenuItem>\r\n\r\n                <MenuItem sx={{ mb: 2, boxShadow: 2 }} onClick={() => handleShowAttach(task._id)}>\r\n                  <Grid sx={{ mr: 1 }}>\r\n                    <IconPaperclip size={16} />\r\n                  </Grid>\r\n                  Attach\r\n                </MenuItem>\r\n\r\n                <Typography variant=\"subtitle1\" sx={{ mt: 4 }}>\r\n                  Manipulation\r\n                </Typography>\r\n\r\n                <MenuItem sx={{ mb: 2, boxShadow: 2 }}>\r\n                  <Grid sx={{ mr: 1 }}>\r\n                    <IconArrowBigRightLines size={16} />\r\n                  </Grid>\r\n                  Move\r\n                </MenuItem>\r\n\r\n                <MenuItem sx={{ mb: 2, boxShadow: 2 }}>\r\n                  <Grid sx={{ mr: 1 }}>\r\n                    <IconArchive size={16} />\r\n                  </Grid>\r\n                  Storage\r\n                </MenuItem>\r\n\r\n                <AnimateButton>\r\n                  <Button sx={{ mt: 4, ml: 3 }} disableElevation size=\"small\" type=\"submit\" variant=\"contained\" color=\"primary\">\r\n                    Save\r\n                  </Button>\r\n                </AnimateButton>\r\n              </MenuList>\r\n            </Grid>\r\n          </DialogForm>\r\n        </DialogContent>\r\n      </Box>\r\n    </Dialog>\r\n  );\r\n};\r\n\r\nTForm.propTypes = {\r\n  open: PropTypes.bool.isRequired,\r\n  onClose: PropTypes.func.isRequired,\r\n  formData: PropTypes.object,\r\n  bId: PropTypes.any,\r\n  status: PropTypes.number,\r\n  dialogForm: PropTypes.number.isRequired,\r\n};\r\n\r\nexport default TForm;\r\n","import PropTypes from 'prop-types';\r\nimport { useState } from 'react';\r\n\r\n// material-ui\r\nimport { Avatar, ListItemButton, ListItemText, Grid } from '@mui/material';\r\n\r\n// icons\r\nimport { IconTrash } from '@tabler/icons';\r\n\r\n// project imports\r\nimport TForm from './TaskForm';\r\nimport TaskAPI from 'services/TaskAPI';\r\nimport io from 'socket.io-client';\r\nimport { host } from 'services/baseAPI';\r\n\r\n// ==============================|| TASK ITEM ||============================== //\r\nconst taskAPI = new TaskAPI();\r\nconst socket = io(host);\r\n\r\nconst TaskItem = ({ item, bId }) => {\r\n  const [openT, setOpenT] = useState(false);\r\n\r\n  const dragStart = (e, id) => {\r\n    e.dataTransfer.setData('id', id);\r\n  };\r\n\r\n  const handleEditT = () => {\r\n    setOpenT(true);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setOpenT(false);\r\n  };\r\n\r\n  const handleDelete = (id) => {\r\n    swal({\r\n      title: 'Are you sure?',\r\n      text: 'Once deleted, you will not be able to recover.',\r\n      icon: 'warning',\r\n      buttons: [true, 'Delete'],\r\n      dangerMode: true,\r\n    }).then((willDelete) => {\r\n      if (willDelete) {\r\n        taskAPI\r\n          .deleteByID(id)\r\n          .then((res) => {\r\n            if (res.status === 200) {\r\n              socket.emit('task', res.data);\r\n            }\r\n          })\r\n          .catch(() => {\r\n            //Thông báo lỗi\r\n            swal({\r\n              text: 'Sorry, something went wrong. Please contact to admin for support.',\r\n              buttons: false,\r\n              timer: 5000,\r\n              icon: 'error',\r\n            });\r\n          });\r\n      }\r\n    });\r\n  };\r\n  return (\r\n    <>\r\n      <Grid container sx={{ position: 'relative', p: 1 }}>\r\n        <ListItemButton\r\n          sx={{\r\n            borderRadius: 2,\r\n            width: 215,\r\n            backgroundColor: 'white',\r\n            '&:hover': { backgroundColor: 'rgb(250, 250, 250)' },\r\n            '&:hover + .hide': {\r\n              display: 'block',\r\n            },\r\n          }}\r\n          onClick={handleEditT}\r\n          onDragStart={(e) => dragStart(e, item._id)}\r\n          draggable\r\n        >\r\n          <ListItemText primary={item.task} />\r\n\r\n          {item.member !== [] ? (\r\n            <div style={{ marginRight: 10, display: 'flex' }}>\r\n              {item.member.map((user) => (\r\n                <Avatar key={user._id} src={user.avatar.data} sx={{ width: 24, height: 24 }} />\r\n              ))}\r\n            </div>\r\n          ) : (\r\n            <></>\r\n          )}\r\n        </ListItemButton>\r\n\r\n        <Grid\r\n          className=\"hide\"\r\n          sx={{\r\n            display: 'none',\r\n            cursor: 'pointer',\r\n            position: 'absolute',\r\n            top: 18,\r\n            right: 4,\r\n            minWidth: 30,\r\n            p: '0 0 0 0',\r\n            '&:hover': { display: 'block', color: '#90CAF9' },\r\n          }}\r\n          onClick={() => {\r\n            handleDelete(item._id);\r\n          }}\r\n        >\r\n          <IconTrash />\r\n        </Grid>\r\n      </Grid>\r\n      <TForm open={openT} onClose={handleClose} formData={item} bId={bId} dialogForm={1} />\r\n    </>\r\n  );\r\n};\r\n\r\nTaskItem.propTypes = {\r\n  item: PropTypes.object,\r\n  bId: PropTypes.any,\r\n};\r\n\r\nexport default TaskItem;\r\n","import PropTypes from 'prop-types';\r\nimport { useState } from 'react';\r\n\r\n// material-ui\r\nimport { Typography, Grid, Card, Button, CardContent } from '@mui/material';\r\n\r\n// icons\r\nimport { IconPlus } from '@tabler/icons';\r\n\r\n// project imports\r\nimport TForm from './TaskForm';\r\nimport TaskItem from './Item';\r\nimport TaskAPI from 'services/TaskAPI';\r\nimport io from 'socket.io-client';\r\nimport { host } from 'services/baseAPI';\r\n\r\n// ==============================|| TASK LIST ||============================== //\r\nconst taskAPI = new TaskAPI();\r\nconst socket = io(host);\r\n\r\nconst TaskList = ({ list, item, bId }) => {\r\n  const [openT, setOpenT] = useState(false);\r\n\r\n  const dragOver = (e) => {\r\n    e.preventDefault();\r\n  };\r\n\r\n  const drop = (e, index) => {\r\n    let id = e.dataTransfer.getData('id');\r\n\r\n    taskAPI.getAll().then((result) => {\r\n      result.data.data.map((res) => {\r\n        if (res.boardID._id === bId) {\r\n          if (res._id === id) {\r\n            const task = {\r\n              status: index,\r\n            };\r\n\r\n            taskAPI\r\n              .updateByID(res._id, task)\r\n              .then((res) => {\r\n                if (res.data.success === true) {\r\n                  socket.emit('task', res.data.data);\r\n                }\r\n              })\r\n              .catch(() => {\r\n                swal({\r\n                  text: 'Sorry, something went wrong. Please contact to admin for support.',\r\n                  buttons: false,\r\n                  timer: 5000,\r\n                  icon: 'error',\r\n                });\r\n              });\r\n          }\r\n        }\r\n      });\r\n    });\r\n  };\r\n\r\n  const handleCreateT = () => {\r\n    setOpenT(true);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setOpenT(false);\r\n  };\r\n  return (\r\n    <>\r\n      <Card\r\n        sx={{\r\n          width: 240,\r\n          height: 'fit-content',\r\n          borderRadius: 2,\r\n          backgroundColor: 'rgba(255, 255, 255, 0.5)',\r\n        }}\r\n        variant=\"outlined\"\r\n      >\r\n        <CardContent\r\n          sx={{ backgroundColor: `${list.bgColor}`, height: 100, display: 'flex', justifyContent: 'center', alignItems: 'center' }}\r\n        >\r\n          <Typography variant=\"h3\" sx={{ color: 'white' }}>\r\n            {list.title}\r\n          </Typography>\r\n        </CardContent>\r\n\r\n        <Grid\r\n          sx={{\r\n            height: 285,\r\n            overflowY: 'hidden',\r\n            '&:hover': {\r\n              overflowY: 'auto',\r\n              '&::-webkit-scrollbar': {\r\n                width: 7,\r\n              },\r\n              '&::-webkit-scrollbar-track': {\r\n                background: '#f1f1f1',\r\n                borderRadius: 10,\r\n              },\r\n              '&::-webkit-scrollbar-thumb': {\r\n                background: '#888',\r\n                borderRadius: 10,\r\n              },\r\n              '&::-webkit-scrollbar-thumb:hover': {\r\n                background: '#555',\r\n              },\r\n            },\r\n          }}\r\n          onDragOver={(e) => dragOver(e)}\r\n          onDrop={(e) => drop(e, list.id)}\r\n        >\r\n          {item.map((data) => (\r\n            <div key={data._id}>{data.status === list.id && <TaskItem item={data} bId={bId} />}</div>\r\n          ))}\r\n        </Grid>\r\n\r\n        <Button variant=\"contained\" sx={{ mx: 1, my: 2, borderRadius: 2, height: 40, width: 212 }} onClick={handleCreateT}>\r\n          <IconPlus />\r\n          Add task\r\n        </Button>\r\n      </Card>\r\n\r\n      <TForm open={openT} onClose={handleClose} bId={bId} status={list.id} dialogForm={0} />\r\n    </>\r\n  );\r\n};\r\n\r\nTaskList.propTypes = {\r\n  list: PropTypes.object,\r\n  item: PropTypes.array,\r\n  bId: PropTypes.any,\r\n};\r\n\r\nexport default TaskList;\r\n","import { useEffect, useState } from 'react';\r\nimport { useParams } from 'react-router';\r\n\r\n// material-ui\r\nimport { Avatar, Typography, Grid, Button } from '@mui/material';\r\n\r\n// icons\r\nimport { IconPencil } from '@tabler/icons';\r\n\r\n// project imports\r\nimport BoardAPI from 'services/BoardAPI';\r\nimport BForm from 'views/board/BoardForm';\r\nimport TaskList from './task/List';\r\nimport io from 'socket.io-client';\r\nimport { host } from 'services/baseAPI';\r\n\r\n// ==============================|| BOARD DETAIL ||============================== //\r\nconst boardAPI = new BoardAPI();\r\nconst socket = io(host);\r\n\r\nconst lists = [\r\n  {\r\n    id: 0,\r\n    title: 'Backlog',\r\n    bgColor: 'rgb(4, 124, 188)',\r\n  },\r\n  {\r\n    id: 1,\r\n    title: 'To-Do',\r\n    bgColor: 'rgb(236, 92, 68)',\r\n  },\r\n  {\r\n    id: 2,\r\n    title: 'Doing',\r\n    bgColor: 'rgb(236, 92, 68)',\r\n  },\r\n  {\r\n    id: 3,\r\n    title: 'Done',\r\n    bgColor: 'rgb(100, 188, 76)',\r\n  },\r\n];\r\n\r\nconst Detail = () => {\r\n  const { boardId } = useParams();\r\n\r\n  const [board, setBoard] = useState({});\r\n  const [bgImg, setBgImg] = useState({});\r\n  const [task, setTask] = useState([]);\r\n\r\n  const [BMember, setBMember] = useState([]);\r\n\r\n  const [openB, setOpenB] = useState(false);\r\n\r\n  const loadData = (id) => {\r\n    boardAPI.getByID(id).then((result) => {\r\n      setBoard(result.data[0]);\r\n      setBgImg(result.data[0].bgImg);\r\n      setTask(result.data[0].tasks);\r\n      setBMember(result.data[0].member);\r\n    });\r\n  };\r\n\r\n  const handleEditB = () => {\r\n    setOpenB(true);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setOpenB(false);\r\n  };\r\n\r\n  useEffect(() => {\r\n    loadData(boardId);\r\n\r\n    socket.on('board', () => {\r\n      loadData(boardId);\r\n    });\r\n\r\n    socket.on('task', () => {\r\n      loadData(boardId);\r\n    });\r\n  }, [boardId]);\r\n  return (\r\n    <>\r\n      <Grid container justifyContent=\"space-between\" alignItems=\"center\" sx={{ mb: 2, px: 2 }}>\r\n        <Typography variant=\"h2\" sx={{ fontWeight: 500 }}>\r\n          {board.name}\r\n        </Typography>\r\n\r\n        <Grid item display=\"flex\">\r\n          {BMember.map((user) => (\r\n            <Avatar key={user._id} src={user.avatar.data} sx={{ width: 30, height: 30 }} />\r\n          ))}\r\n\r\n          <Button variant=\"contained\" size=\"small\" sx={{ ml: 2 }} onClick={handleEditB}>\r\n            <IconPencil />\r\n            Edit\r\n          </Button>\r\n        </Grid>\r\n      </Grid>\r\n\r\n      <Grid\r\n        container\r\n        justifyContent=\"space-evenly\"\r\n        sx={{\r\n          py: 2,\r\n          backgroundImage: `url('${bgImg.data}')`,\r\n          backgroundSize: 'cover',\r\n          backgroundRepeat: 'no-repeat',\r\n          backgroundClip: 'border-box',\r\n        }}\r\n      >\r\n        {lists.map((value) => (\r\n          <TaskList key={value.id} list={value} item={task} bId={boardId} />\r\n        ))}\r\n      </Grid>\r\n\r\n      <BForm open={openB} onClose={handleClose} formData={board} wsId={board.workSpaceID} dialogForm={1} />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Detail;\r\n"],"names":["TaskAPI","BaseAPI","constructor","super","endpoint","createNew","async","axios","method","url","this","api","data","task","getAll","updateByID","id","token","sessionStorage","getItem","CommentAPI","headers","Authorization","comment","getByTaskID","UploadAPI","uploadFile","upload","getFromTask","getFromComment","commentAPI","userAPI","UserAPI","uploadAPI","socket","io","host","props","taskId","onEdit","onClose","message","commentId","inputRef","createRef","userID","inputStr","setInputStr","useState","sender","setSender","showEmoji","setShowEmoji","useEffect","getByID","then","res","Grid","container","alignItems","sx","mt","avatar","Avatar","src","width","height","mr","p","borderRadius","boxShadow","position","className","placeholder","value","onChange","e","target","style","scrollHeight","ref","item","display","justifyContent","AnimateButton","Button","disableElevation","disabled","type","size","variant","color","onClick","preventDefault","taskID","success","emit","catch","swal","text","buttons","timer","icon","post","IconButton","component","current","focus","name","multiple","hidden","base64","EndcodeFileBase64","files","file","top","right","previewConfig","showPreview","emojiStyle","onEmojiClick","emoji","start","substring","selectionStart","end","userId","setMessage","editMS","setEditMS","messageId","setMessageId","loadData","result","handleEdit","handleCloseEdit","handleReply","handleDelete","title","dangerMode","willDelete","deleteByID","status","on","Input","overflow","overflowY","background","map","createDate","Date","createdAt","toLocaleString","updateDate","updatedAt","senderID","Typography","_id","cursor","textDecoration","useNavigate","setFile","arr","push","paddingLeft","maxHeight","href","ListItemButton","match","BackgroundLetterAvatar","h","w","f","ml","taskAPI","boardAPI","BoardAPI","open","formData","bId","dialogForm","setTask","BId","setBId","Status","setStatus","editorState","setEditorState","describe","setDescribe","TMember","setTMember","BMember","setBMember","show","setShow","showMember","setShowMember","showAttach","setShowAttach","handleClose","handleChange","event","member","undefined","Dialog","maxWidth","scroll","Box","onSubmit","FormData","currentTarget","get","boardID","setTimeout","noValidate","DialogContent","DialogForm","index","OutlinedInput","mb","AutocompleteBtn","options","Editor","toolbarStyle","border","editorStyle","paddingRight","onEditorStateChange","newState","draftToMarkdown","convertToRaw","getCurrentContent","toolbar","list","inDropdown","textAlign","link","MenuList","MenuItem","handleShowMember","handleShowAttach","openT","setOpenT","backgroundColor","onDragStart","dataTransfer","setData","dragStart","draggable","ListItemText","primary","marginRight","user","minWidth","Card","CardContent","bgColor","onDragOver","dragOver","onDrop","getData","drop","mx","my","lists","boardId","useParams","board","setBoard","bgImg","setBgImg","openB","setOpenB","tasks","px","fontWeight","py","backgroundImage","backgroundSize","backgroundRepeat","backgroundClip","wsId","workSpaceID"],"sourceRoot":""}