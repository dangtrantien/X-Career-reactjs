{"version":3,"file":"static/js/436.c5b1f680.chunk.js","mappings":"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","sources":["../node_modules/@mui/material/CardMedia/cardMediaClasses.js","../node_modules/@mui/material/CardMedia/CardMedia.js","views/dashboard/BoardList.js","views/dashboard/index.js"],"sourcesContent":["import { generateUtilityClass, generateUtilityClasses } from '@mui/base';\nexport function getCardMediaUtilityClass(slot) {\n  return generateUtilityClass('MuiCardMedia', slot);\n}\nconst cardMediaClasses = generateUtilityClasses('MuiCardMedia', ['root', 'media', 'img']);\nexport default cardMediaClasses;","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"children\", \"className\", \"component\", \"image\", \"src\", \"style\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { chainPropTypes } from '@mui/utils';\nimport { unstable_composeClasses as composeClasses } from '@mui/base';\nimport useThemeProps from '../styles/useThemeProps';\nimport styled from '../styles/styled';\nimport { getCardMediaUtilityClass } from './cardMediaClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nconst useUtilityClasses = ownerState => {\n  const {\n    classes,\n    isMediaComponent,\n    isImageComponent\n  } = ownerState;\n  const slots = {\n    root: ['root', isMediaComponent && 'media', isImageComponent && 'img']\n  };\n  return composeClasses(slots, getCardMediaUtilityClass, classes);\n};\n\nconst CardMediaRoot = styled('div', {\n  name: 'MuiCardMedia',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    const {\n      isMediaComponent,\n      isImageComponent\n    } = ownerState;\n    return [styles.root, isMediaComponent && styles.media, isImageComponent && styles.img];\n  }\n})(({\n  ownerState\n}) => _extends({\n  display: 'block',\n  backgroundSize: 'cover',\n  backgroundRepeat: 'no-repeat',\n  backgroundPosition: 'center'\n}, ownerState.isMediaComponent && {\n  width: '100%'\n}, ownerState.isImageComponent && {\n  // ⚠️ object-fit is not supported by IE11.\n  objectFit: 'cover'\n}));\nconst MEDIA_COMPONENTS = ['video', 'audio', 'picture', 'iframe', 'img'];\nconst IMAGE_COMPONENTS = ['picture', 'img'];\nconst CardMedia = /*#__PURE__*/React.forwardRef(function CardMedia(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiCardMedia'\n  });\n\n  const {\n    children,\n    className,\n    component = 'div',\n    image,\n    src,\n    style\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  const isMediaComponent = MEDIA_COMPONENTS.indexOf(component) !== -1;\n  const composedStyle = !isMediaComponent && image ? _extends({\n    backgroundImage: `url(\"${image}\")`\n  }, style) : style;\n\n  const ownerState = _extends({}, props, {\n    component,\n    isMediaComponent,\n    isImageComponent: IMAGE_COMPONENTS.indexOf(component) !== -1\n  });\n\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(CardMediaRoot, _extends({\n    className: clsx(classes.root, className),\n    as: component,\n    role: !isMediaComponent && image ? 'img' : undefined,\n    ref: ref,\n    style: composedStyle,\n    ownerState: ownerState,\n    src: isMediaComponent ? image || src : undefined\n  }, other, {\n    children: children\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? CardMedia.propTypes\n/* remove-proptypes */\n= {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content of the component.\n   */\n  children: chainPropTypes(PropTypes.node, props => {\n    if (!props.children && !props.image && !props.src && !props.component) {\n      return new Error('MUI: Either `children`, `image`, `src` or `component` prop must be specified.');\n    }\n\n    return null;\n  }),\n\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n\n  /**\n   * Image to be displayed as a background image.\n   * Either `image` or `src` prop must be specified.\n   * Note that caller must specify height otherwise the image will not be visible.\n   */\n  image: PropTypes.string,\n\n  /**\n   * An alias for `image` property.\n   * Available only with media components.\n   * Media components: `video`, `audio`, `picture`, `iframe`, `img`.\n   */\n  src: PropTypes.string,\n\n  /**\n   * @ignore\n   */\n  style: PropTypes.object,\n\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport default CardMedia;","import PropTypes from 'prop-types';\r\nimport { useEffect, useState } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\n\r\n// material-ui\r\nimport { Card, CardMedia, Grid, Typography } from '@mui/material';\r\n\r\n// project import\r\nimport WorkSpaceAPI from 'services/WorkSpaceAPI';\r\nimport BForm from 'views/board/BoardForm';\r\nimport io from 'socket.io-client';\r\nimport { host } from 'services/baseAPI';\r\n\r\n// ==============================|| BOARD LIST ||============================== //\r\nconst workSpaceAPI = new WorkSpaceAPI();\r\nconst socket = io(host, {\r\n  withCredentials: true,\r\n});\r\n\r\nconst BoardList = ({ id, page }) => {\r\n  const navigate = useNavigate();\r\n  const userId = sessionStorage.getItem('id');\r\n\r\n  const [board, setBoard] = useState([]);\r\n\r\n  const [open, setOpen] = useState(false);\r\n  const [count, setCount] = useState();\r\n\r\n  const loadData = (id) => {\r\n    workSpaceAPI.getByID(id).then((result) => {\r\n      let arr = [];\r\n      let count = 0;\r\n\r\n      result.data[0].boards.map((res) => {\r\n        res.member.map((data) => {\r\n          if (data._id === userId) {\r\n            arr.push(res);\r\n            count++;\r\n          }\r\n        });\r\n      });\r\n\r\n      setBoard(arr);\r\n      setCount(count);\r\n    });\r\n  };\r\n\r\n  const handleCreate = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  useEffect(() => {\r\n    loadData(id);\r\n\r\n    socket.on('board', () => {\r\n      loadData(id);\r\n    });\r\n  }, [id]);\r\n\r\n  return (\r\n    <>\r\n      {count === 0 && page === 'dashboard' ? (\r\n        <Grid container alignItems=\"center\">\r\n          <Typography variant=\"h4\" fontWeight={300} sx={{ my: 2, mr: 1 }}>\r\n            You don't have any panels in this Workspace yet. The boards you create or join will show up here.\r\n          </Typography>\r\n\r\n          <Typography\r\n            variant=\"subtitle1\"\r\n            sx={{ cursor: 'pointer', textDecoration: 'underline', '&:hover': { color: '#90CAF9' } }}\r\n            onClick={handleCreate}\r\n          >\r\n            Create Table\r\n          </Typography>\r\n        </Grid>\r\n      ) : (\r\n        <>\r\n          {board.map((value) => (\r\n            <Grid item xs={3} sm={3} md={3} key={value._id} sx={{ position: 'relative' }}>\r\n              <Card>\r\n                <CardMedia\r\n                  height={130}\r\n                  sx={{ cursor: 'pointer' }}\r\n                  component=\"img\"\r\n                  alt=\"board\"\r\n                  src={value.bgImg.data}\r\n                  onClick={() => navigate(`/b/${value._id}`, { replace: true })}\r\n                />\r\n              </Card>\r\n\r\n              <Typography\r\n                sx={{\r\n                  position: 'absolute',\r\n                  top: 40,\r\n                  left: 40,\r\n                  color: 'white',\r\n                }}\r\n                variant=\"h3\"\r\n              >\r\n                {value.name}\r\n              </Typography>\r\n            </Grid>\r\n          ))}\r\n        </>\r\n      )}\r\n\r\n      <BForm open={open} onClose={handleClose} wsId={id} dialogForm={0} />\r\n    </>\r\n  );\r\n};\r\n\r\nBoardList.propTypes = {\r\n  id: PropTypes.any.isRequired,\r\n  page: PropTypes.any,\r\n};\r\n\r\nexport default BoardList;\r\n","import PropTypes from 'prop-types';\nimport { useEffect, useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\n\n// material-ui\nimport { Avatar, Typography, Stack, Grid, Button, Divider } from '@mui/material';\n\n// project imports\nimport MainCard from 'ui-component/cards/MainCard';\nimport WorkSpaceAPI from 'services/WorkSpaceAPI';\nimport BoardList from './BoardList';\nimport AnimateButton from 'ui-component/extended/AnimateButton';\nimport BackgroundLetterAvatars from 'ui-component/BackgroundLetterAvatar';\nimport WSForm from 'views/workspace/WorkSpaceForm';\nimport io from 'socket.io-client';\nimport { host } from 'services/baseAPI';\n\n// ==============================|| DEFAULT DASHBOARD ||============================== //\nconst workSpaceAPI = new WorkSpaceAPI();\nconst socket = io(host, {\n  withCredentials: true,\n});\n\nconst Dashboard = ({ page }) => {\n  const navigate = useNavigate();\n  const userId = sessionStorage.getItem('id');\n\n  const [workspace, setWorkSpace] = useState([]);\n\n  const [openWS, setOpenWS] = useState(false);\n\n  const loadData = (id) => {\n    workSpaceAPI.getAll().then((result) => {\n      let arr = [];\n\n      result.data.data.map((res) => {\n        res.member.map((value) => {\n          if (value._id === id) {\n            arr.push(res);\n          }\n        });\n      });\n\n      setWorkSpace(arr);\n    });\n  };\n\n  const handleCreateWS = () => {\n    setOpenWS(true);\n  };\n\n  const handleCloseWS = () => {\n    setOpenWS(false);\n  };\n\n  useEffect(() => {\n    loadData(userId);\n\n    socket.on('workspace', () => {\n      loadData(userId);\n    });\n  }, [userId]);\n\n  return (\n    <>\n      <Typography variant=\"h2\" sx={{ mb: 3 }}>\n        Your Work Spaces\n      </Typography>\n\n      <MainCard sx={{ height: '100%' }}>\n        {workspace.length === 0 ? (\n          <Grid container alignItems=\"center\">\n            <Typography variant=\"h4\" sx={{ mr: 1 }}>\n              You are not a member of any workspace.\n            </Typography>\n\n            <Typography\n              variant=\"subtitle1\"\n              sx={{ cursor: 'pointer', textDecoration: 'underline', '&:hover': { color: '#90CAF9' } }}\n              onClick={handleCreateWS}\n            >\n              Create a Workspace\n            </Typography>\n          </Grid>\n        ) : (\n          <Stack spacing={2}>\n            {workspace.map((value) => (\n              <div key={value._id}>\n                <Stack spacing={2} sx={{ mb: 4 }}>\n                  <Grid item display=\"flex\" justifyContent=\"space-between\" alignItems=\"center\">\n                    <Grid container alignItems=\"center\">\n                      {value.logo.data === '' ? (\n                        <BackgroundLetterAvatars name={value.name} h={50} w={50} f={30} />\n                      ) : (\n                        <Avatar src={value.logo.data} variant=\"rounded\" />\n                      )}\n\n                      <Typography variant=\"h2\" sx={{ ml: 1, fontWeight: 500 }}>\n                        {value.name}\n                      </Typography>\n                    </Grid>\n\n                    <AnimateButton>\n                      <Button\n                        disableElevation\n                        sx={{ width: 100 }}\n                        onClick={() => navigate(`/w/detail/${value._id}`, { replace: true })}\n                        variant=\"contained\"\n                        color=\"primary\"\n                      >\n                        Detail\n                      </Button>\n                    </AnimateButton>\n                  </Grid>\n\n                  <Grid container spacing={2}>\n                    <BoardList id={value._id} page={page} />\n                  </Grid>\n                </Stack>\n                <Divider />\n              </div>\n            ))}\n          </Stack>\n        )}\n      </MainCard>\n\n      <WSForm open={openWS} onClose={handleCloseWS} dialogForm={0} />\n    </>\n  );\n};\n\nDashboard.propTypes = {\n  page: PropTypes.any,\n};\n\nexport default Dashboard;\n"],"names":["getCardMediaUtilityClass","slot","generateUtilityClass","generateUtilityClasses","_excluded","CardMediaRoot","styled","name","overridesResolver","props","styles","ownerState","isMediaComponent","isImageComponent","root","media","img","_extends","display","backgroundSize","backgroundRepeat","backgroundPosition","width","objectFit","MEDIA_COMPONENTS","IMAGE_COMPONENTS","React","inProps","ref","useThemeProps","children","className","component","image","src","style","other","_objectWithoutPropertiesLoose","indexOf","composedStyle","backgroundImage","classes","slots","composeClasses","useUtilityClasses","_jsx","clsx","as","role","undefined","workSpaceAPI","WorkSpaceAPI","socket","io","host","withCredentials","id","page","navigate","useNavigate","userId","sessionStorage","getItem","board","setBoard","useState","open","setOpen","count","setCount","loadData","getByID","then","result","arr","data","boards","map","res","member","_id","push","useEffect","on","Grid","container","alignItems","Typography","variant","fontWeight","sx","my","mr","cursor","textDecoration","color","onClick","value","item","xs","sm","md","position","Card","height","alt","bgImg","replace","top","left","onClose","wsId","dialogForm","workspace","setWorkSpace","openWS","setOpenWS","getAll","mb","length","spacing","justifyContent","logo","h","w","f","ml","disableElevation"],"sourceRoot":""}