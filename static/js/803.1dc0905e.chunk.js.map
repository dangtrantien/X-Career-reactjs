{"version":3,"file":"static/js/803.1dc0905e.chunk.js","mappings":"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","sources":["services/TaskAPI.js","ui-component/MenuButton/FilterBtn.js","views/user/EditProfile.js","views/user/PersonalInfomation.js","views/user/Work.js","views/user/Profile.js"],"sourcesContent":["import axios from 'axios';\r\nimport { BaseAPI } from './baseAPI';\r\n\r\nexport default class TaskAPI extends BaseAPI {\r\n  constructor() {\r\n    super({ endpoint: 'api/tasks' });\r\n  }\r\n\r\n  createNew = async (data) => {\r\n    const res = await axios({\r\n      method: 'POST',\r\n      url: `${this.api}/${this.endpoint}/createTask`,\r\n      data: {\r\n        task: data,\r\n      },\r\n    });\r\n\r\n    return res;\r\n  };\r\n\r\n  getAll = async () => {\r\n    const res = await axios({\r\n      method: 'GET',\r\n      url: `${this.api}/${this.endpoint}/getAllTasksOfAllBoards`,\r\n      data: null,\r\n    });\r\n\r\n    return res;\r\n  };\r\n\r\n  updateByID = async (id, data) => {\r\n    const res = await axios({\r\n      method: 'PUT',\r\n      url: `${this.api}/${this.endpoint}/updateTaskByID?id=${id}`,\r\n      data: {\r\n        task: data,\r\n      },\r\n    });\r\n\r\n    return res;\r\n  };\r\n}\r\n","import PropTypes from 'prop-types';\r\nimport { useState } from 'react';\r\n\r\n// material-ui\r\nimport { styled, alpha } from '@mui/material/styles';\r\nimport { Avatar, Button, Checkbox, FormControl, FormControlLabel, FormGroup, FormLabel, Grid, Menu } from '@mui/material';\r\n\r\n// icons\r\nimport { IconClock, IconFilter } from '@tabler/icons';\r\n\r\n// project imports\r\n\r\n// ==============================|| FILTER BUTTON ||============================== //\r\n\r\nconst StyledMenu = styled((props) => (\r\n  <Menu\r\n    elevation={0}\r\n    anchorOrigin={{\r\n      vertical: 'bottom',\r\n      horizontal: 'right',\r\n    }}\r\n    transformOrigin={{\r\n      vertical: 'top',\r\n      horizontal: 'right',\r\n    }}\r\n    {...props}\r\n  />\r\n))(({ theme }) => ({\r\n  '& .MuiPaper-root': {\r\n    borderRadius: 6,\r\n    marginTop: theme.spacing(1),\r\n    minWidth: 180,\r\n    color: theme.palette.mode === 'light' ? 'rgb(55, 65, 81)' : theme.palette.grey[300],\r\n    boxShadow:\r\n      'rgb(255, 255, 255) 0px 0px 0px 0px, rgba(0, 0, 0, 0.05) 0px 0px 0px 1px, rgba(0, 0, 0, 0.1) 0px 10px 15px -3px, rgba(0, 0, 0, 0.05) 0px 4px 6px -2px',\r\n    '& .MuiMenu-list': {\r\n      padding: '4px 0',\r\n    },\r\n    '& .MuiMenuItem-root': {\r\n      '& .MuiSvgIcon-root': {\r\n        fontSize: 18,\r\n        color: theme.palette.text.secondary,\r\n        marginRight: theme.spacing(1.5),\r\n      },\r\n      '&:active': {\r\n        backgroundColor: alpha(theme.palette.primary.main, theme.palette.action.selectedOpacity),\r\n      },\r\n    },\r\n  },\r\n}));\r\n\r\nconst FilterBtn = (props) => {\r\n  const {\r\n    page,\r\n    userId,\r\n    checkMember,\r\n    checkNone,\r\n    member,\r\n    handleFilterMemberNone,\r\n    handleFilterMember,\r\n    checkBoard,\r\n    boardId,\r\n    board,\r\n    handleFilterBoard,\r\n    checkDate,\r\n    date,\r\n    dateId,\r\n    handleFilterDate,\r\n  } = props;\r\n\r\n  const [anchorEl, setAnchorEl] = useState(null);\r\n  const open = Boolean(anchorEl);\r\n\r\n  const handleClick = (event) => {\r\n    setAnchorEl(event.currentTarget);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setAnchorEl(null);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Button\r\n        id=\"demo-customized-button\"\r\n        aria-controls={open ? 'demo-customized-menu' : undefined}\r\n        aria-haspopup=\"true\"\r\n        aria-expanded={open ? 'true' : undefined}\r\n        variant=\"contained\"\r\n        disableElevation\r\n        onClick={handleClick}\r\n        startIcon={<IconFilter size={20} />}\r\n      >\r\n        filter\r\n      </Button>\r\n      <StyledMenu\r\n        id=\"demo-customized-menu\"\r\n        MenuListProps={{\r\n          'aria-labelledby': 'demo-customized-button',\r\n        }}\r\n        anchorEl={anchorEl}\r\n        open={open}\r\n        onClose={handleClose}\r\n      >\r\n        {page === 'board' && (\r\n          <Grid sx={{ display: 'flex', flexDirection: 'column' }}>\r\n            <FormControl sx={{ m: '16px 16px 0 16px' }} component=\"fieldset\" variant=\"standard\">\r\n              <FormLabel component=\"legend\">Filter by member</FormLabel>\r\n\r\n              <FormGroup>\r\n                <FormControlLabel\r\n                  control={\r\n                    <>\r\n                      <Checkbox\r\n                        checked={checkNone}\r\n                        onChange={(e) => {\r\n                          handleFilterMemberNone(e);\r\n                        }}\r\n                      />\r\n                      <Avatar src={''} sx={{ width: 20, height: 20, mr: 1 }} />\r\n                    </>\r\n                  }\r\n                  label=\"No membres\"\r\n                />\r\n                {member &&\r\n                  member.map((user) => (\r\n                    <FormControlLabel\r\n                      key={user._id}\r\n                      control={\r\n                        <>\r\n                          <Checkbox\r\n                            checked={userId === user._id ? checkMember : false}\r\n                            onChange={(e) => {\r\n                              handleFilterMember(e, user._id);\r\n                            }}\r\n                          />\r\n                          <Avatar src={user.avatar.data} sx={{ width: 20, height: 20, mr: 1 }} />\r\n                        </>\r\n                      }\r\n                      label={user.name}\r\n                    />\r\n                  ))}\r\n              </FormGroup>\r\n            </FormControl>\r\n\r\n            <FormControl sx={{ m: 2 }} component=\"fieldset\" variant=\"standard\">\r\n              <FormLabel component=\"legend\">Filter by date</FormLabel>\r\n\r\n              <FormGroup>\r\n                {date &&\r\n                  date.map((data) => (\r\n                    <FormControlLabel\r\n                      key={data.id}\r\n                      control={\r\n                        <>\r\n                          <Checkbox\r\n                            checked={dateId === data.id ? checkDate : false}\r\n                            onChange={(e) => {\r\n                              handleFilterDate(e, data.id);\r\n                            }}\r\n                          />\r\n                          <IconClock size={20} color={data.iconColor} style={{ marginRight: '10px' }} />\r\n                        </>\r\n                      }\r\n                      label={data.label}\r\n                    />\r\n                  ))}\r\n              </FormGroup>\r\n            </FormControl>\r\n          </Grid>\r\n        )}\r\n\r\n        {page === 'user' && (\r\n          <Grid sx={{ display: 'flex', flexDirection: 'column' }}>\r\n            <FormControl sx={{ m: '16px 16px 0 16px' }} component=\"fieldset\" variant=\"standard\">\r\n              <FormLabel component=\"legend\">Filter by board</FormLabel>\r\n\r\n              <FormGroup>\r\n                {board &&\r\n                  board.map((data) => (\r\n                    <FormControlLabel\r\n                      key={data._id}\r\n                      control={\r\n                        <>\r\n                          <Checkbox\r\n                            checked={boardId === data._id ? checkBoard : false}\r\n                            onChange={(e) => {\r\n                              handleFilterBoard(e, data._id);\r\n                            }}\r\n                          />\r\n                        </>\r\n                      }\r\n                      label={data.name}\r\n                    />\r\n                  ))}\r\n              </FormGroup>\r\n            </FormControl>\r\n\r\n            <FormControl sx={{ m: 2 }} component=\"fieldset\" variant=\"standard\">\r\n              <FormLabel component=\"legend\">Filter by date</FormLabel>\r\n\r\n              <FormGroup>\r\n                {date &&\r\n                  date.map((data) => (\r\n                    <FormControlLabel\r\n                      key={data.id}\r\n                      control={\r\n                        <>\r\n                          <Checkbox\r\n                            checked={dateId === data.id ? checkDate : false}\r\n                            onChange={(e) => {\r\n                              handleFilterDate(e, data.id);\r\n                            }}\r\n                          />\r\n                          <IconClock size={20} color={data.iconColor} style={{ marginRight: '10px' }} />\r\n                        </>\r\n                      }\r\n                      label={data.label}\r\n                    />\r\n                  ))}\r\n              </FormGroup>\r\n            </FormControl>\r\n          </Grid>\r\n        )}\r\n      </StyledMenu>\r\n    </>\r\n  );\r\n};\r\n\r\nFilterBtn.propTypes = {\r\n  page: PropTypes.string,\r\n  userId: PropTypes.any,\r\n  checkMember: PropTypes.bool,\r\n  checkNone: PropTypes.bool,\r\n  member: PropTypes.array,\r\n  handleFilterMemberNone: PropTypes.any,\r\n  handleFilterMember: PropTypes.any,\r\n  boardId: PropTypes.any,\r\n  checkBoard: PropTypes.bool,\r\n  board: PropTypes.array,\r\n  handleFilterBoard: PropTypes.any,\r\n  checkDate: PropTypes.bool,\r\n  date: PropTypes.array,\r\n  dateId: PropTypes.any,\r\n  handleFilterDate: PropTypes.any,\r\n};\r\n\r\nexport default FilterBtn;\r\n","import PropTypes from 'prop-types';\r\nimport { useState, useEffect } from 'react';\r\n\r\n// material-ui\r\nimport {\r\n  Box,\r\n  Button,\r\n  OutlinedInput,\r\n  Typography,\r\n  Grid,\r\n  FormControlLabel,\r\n  Radio,\r\n  RadioGroup,\r\n  Dialog,\r\n  DialogTitle,\r\n  DialogContent,\r\n} from '@mui/material';\r\n\r\n// project import\r\nimport swal from 'sweetalert';\r\nimport UserAPI from 'services/UserAPI';\r\nimport InputFileButton from 'ui-component/extended/InputFileButton';\r\nimport EndcodeFileBase64 from 'utils/endcodeFileBase64';\r\nimport AnimateButton from 'ui-component/extended/AnimateButton';\r\nimport io from 'socket.io-client';\r\nimport { host } from 'services/baseAPI';\r\n\r\n// ==============================|| EDIT USER PROFILE PAGE ||============================== //\r\nconst userAPI = new UserAPI();\r\nconst socket = io(host, {\r\n  transports: ['websocket'],\r\n  withCredentials: true,\r\n});\r\n\r\nconst EditProfile = (props) => {\r\n  const { open, onClose, formData } = props;\r\n  const [user, setUser] = useState({});\r\n\r\n  const handleClose = () => {\r\n    onClose(!open);\r\n  };\r\n\r\n  const handleChange = (event) => {\r\n    const name = event.target.name;\r\n    const value = event.target.value;\r\n    setUser({ ...user, [name]: value });\r\n  };\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    const data = new FormData(e.currentTarget);\r\n    const editUser = {\r\n      name: data.get('name'),\r\n      email: data.get('email'),\r\n      gender: data.get('gender'),\r\n      group: data.get('group'),\r\n      position: data.get('position'),\r\n      address: data.get('address'),\r\n    };\r\n\r\n    let re =\r\n      /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\r\n\r\n    if (editUser.name === '') {\r\n      swal({\r\n        text: 'Name is required.',\r\n        buttons: false,\r\n        timer: 2000,\r\n        icon: 'warning',\r\n      });\r\n    } else if (editUser.email === '' || !re.test(editUser.email)) {\r\n      swal({\r\n        text: 'Email is required and must be a valid email.',\r\n        buttons: false,\r\n        timer: 3000,\r\n        icon: 'warning',\r\n      });\r\n    } else {\r\n      if (data.get('avatar').name !== '') {\r\n        //Convert file to base64 string\r\n        const base64 = await EndcodeFileBase64(data.get('avatar'));\r\n\r\n        //Kiểm tra có đúng là image hay không\r\n        if (base64.type.match(/[^:/]\\w+\\//)[0] === 'image/') {\r\n          editUser.avatar = base64;\r\n\r\n          userAPI\r\n            .updateByID(user._id, editUser)\r\n            .then((res) => {\r\n              if (res.data.success === true) {\r\n                socket.emit('user', res.data.data);\r\n\r\n                swal({\r\n                  text: 'Successfully updated profile.',\r\n                  buttons: false,\r\n                  timer: 3000,\r\n                  icon: 'success',\r\n                });\r\n                setTimeout(() => {\r\n                  onClose(!open);\r\n                }, 3000);\r\n              }\r\n            })\r\n            .catch(() => {\r\n              swal({\r\n                text: 'Sorry, something went wrong. Please contact to admin for support.',\r\n                buttons: false,\r\n                timer: 5000,\r\n                icon: 'error',\r\n              });\r\n            });\r\n        } else {\r\n          swal({\r\n            text: \"Wrong file's type, please choose only image.\",\r\n            buttons: false,\r\n            timer: 3000,\r\n            icon: 'warning',\r\n          });\r\n        }\r\n      } else {\r\n        userAPI\r\n          .updateByID(user._id, editUser)\r\n          .then((res) => {\r\n            if (res.data.success === true) {\r\n              socket.emit('user', res.data.data);\r\n\r\n              swal({\r\n                text: 'Successfully updated profile.',\r\n                buttons: false,\r\n                timer: 3000,\r\n                icon: 'success',\r\n              });\r\n              setTimeout(() => {\r\n                onClose(!open);\r\n              }, 3000);\r\n            }\r\n          })\r\n          .catch(() => {\r\n            swal({\r\n              text: 'Sorry, something went wrong. Please contact to admin for support.',\r\n              buttons: false,\r\n              timer: 5000,\r\n              icon: 'error',\r\n            });\r\n          });\r\n      }\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    setUser(formData);\r\n  }, [formData]);\r\n\r\n  return (\r\n    <>\r\n      <Dialog open={open} onClose={handleClose} scroll=\"body\">\r\n        <Box component=\"form\" onSubmit={handleSubmit} noValidate sx={{ mt: 1, width: 500 }}>\r\n          <DialogTitle sx={{ textAlign: 'center' }} color=\"primary\" variant=\"h2\">\r\n            Edit profile\r\n          </DialogTitle>\r\n\r\n          <DialogContent spacing={2} dividers>\r\n            <Grid container alignItems=\"center\">\r\n              <Typography sx={{ mr: 15 }} color=\"primary\" variant=\"h5\">\r\n                Avatar:\r\n              </Typography>\r\n\r\n              <InputFileButton defaultValue={user.avatar && user.avatar.data} name=\"avatar\" />\r\n            </Grid>\r\n\r\n            <Grid container justifyContent=\"space-between\" alignItems=\"center\" sx={{ height: 70 }}>\r\n              <Typography color=\"primary\" variant=\"h5\">\r\n                Display name:\r\n              </Typography>\r\n\r\n              <OutlinedInput\r\n                sx={{ width: 2 / 3 }}\r\n                id=\"name\"\r\n                type=\"text\"\r\n                value={user.name}\r\n                name=\"name\"\r\n                onChange={handleChange}\r\n                placeholder=\"Enter display name\"\r\n              />\r\n            </Grid>\r\n\r\n            <Grid container justifyContent=\"space-between\" alignItems=\"center\" sx={{ height: 70 }}>\r\n              <Typography color=\"primary\" variant=\"h5\">\r\n                Email address:\r\n              </Typography>\r\n\r\n              <OutlinedInput\r\n                sx={{ width: 2 / 3 }}\r\n                id=\"email\"\r\n                type=\"email\"\r\n                value={user.email}\r\n                name=\"email\"\r\n                onChange={handleChange}\r\n                placeholder=\"Enter email address\"\r\n              />\r\n            </Grid>\r\n\r\n            <Grid container alignItems=\"center\" sx={{ height: 70 }}>\r\n              <Typography sx={{ mr: 15 }} color=\"primary\" variant=\"h5\">\r\n                Gender:\r\n              </Typography>\r\n\r\n              <RadioGroup row name=\"gender\" value={user.gender} onChange={handleChange}>\r\n                <FormControlLabel value=\"Female\" control={<Radio />} label=\"Female\" />\r\n                <FormControlLabel value=\"Male\" control={<Radio />} label=\"Male\" />\r\n              </RadioGroup>\r\n            </Grid>\r\n\r\n            <Grid container justifyContent=\"space-between\" alignItems=\"center\" sx={{ height: 70 }}>\r\n              <Typography color=\"primary\" variant=\"h5\">\r\n                Group:\r\n              </Typography>\r\n\r\n              <OutlinedInput\r\n                sx={{ width: 2 / 3 }}\r\n                id=\"group\"\r\n                type=\"text\"\r\n                value={user.group}\r\n                name=\"group\"\r\n                onChange={handleChange}\r\n                placeholder=\"Enter group\"\r\n              />\r\n            </Grid>\r\n\r\n            <Grid container justifyContent=\"space-between\" alignItems=\"center\" sx={{ height: 70 }}>\r\n              <Typography color=\"primary\" variant=\"h5\">\r\n                Position:\r\n              </Typography>\r\n\r\n              <OutlinedInput\r\n                sx={{ width: 2 / 3 }}\r\n                id=\"position\"\r\n                type=\"text\"\r\n                value={user.position}\r\n                name=\"position\"\r\n                onChange={handleChange}\r\n                placeholder=\"Enter position\"\r\n              />\r\n            </Grid>\r\n\r\n            <Grid container justifyContent=\"space-between\" alignItems=\"center\" sx={{ height: 70 }}>\r\n              <Typography color=\"primary\" variant=\"h5\">\r\n                Address:\r\n              </Typography>\r\n\r\n              <OutlinedInput\r\n                sx={{ width: 2 / 3 }}\r\n                id=\"address\"\r\n                type=\"text\"\r\n                name=\"address\"\r\n                value={user.address}\r\n                onChange={handleChange}\r\n                placeholder=\"Enter address\"\r\n              />\r\n            </Grid>\r\n          </DialogContent>\r\n\r\n          <Grid container alignItems=\"center\" justifyContent=\"space-around\" sx={{ my: 2 }}>\r\n            <AnimateButton>\r\n              <Button disableElevation size=\"large\" onClick={handleClose} variant=\"contained\" color=\"secondary\">\r\n                Cancel\r\n              </Button>\r\n            </AnimateButton>\r\n\r\n            <AnimateButton>\r\n              <Button disableElevation size=\"large\" type=\"submit\" variant=\"contained\" color=\"primary\">\r\n                Save\r\n              </Button>\r\n            </AnimateButton>\r\n          </Grid>\r\n        </Box>\r\n      </Dialog>\r\n    </>\r\n  );\r\n};\r\n\r\nEditProfile.propTypes = {\r\n  open: PropTypes.bool.isRequired,\r\n  onClose: PropTypes.func.isRequired,\r\n  formData: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default EditProfile;\r\n","import { useEffect, useState } from 'react';\r\nimport { useParams } from 'react-router';\r\n\r\n// material-ui\r\nimport { Typography, Divider, Grid, Stack } from '@mui/material';\r\n\r\n// project import\r\nimport UserAPI from 'services/UserAPI';\r\nimport io from 'socket.io-client';\r\nimport { host } from 'services/baseAPI';\r\n\r\n// ==============================|| PERSONAL INFOMATION ||============================== //\r\nconst userAPI = new UserAPI();\r\nconst socket = io(host, {\r\n  transports: ['websocket'],\r\n  withCredentials: true,\r\n});\r\n\r\nconst PersonalInfo = () => {\r\n  const { userId } = useParams();\r\n\r\n  const [user, setUser] = useState({});\r\n\r\n  const loadData = (id) => {\r\n    userAPI.getByID(id).then((res) => setUser(res.data[0]));\r\n  };\r\n\r\n  useEffect(() => {\r\n    loadData(userId);\r\n\r\n    socket.on('user', () => {\r\n      loadData(userId);\r\n    });\r\n  }, [userId]);\r\n\r\n  return (\r\n    <Grid sx={{ my: 5, px: 45 }}>\r\n      <Stack spacing={2} sx={{ mx: 10 }}>\r\n        <Grid container alignItems=\"center\">\r\n          <Typography sx={{ mr: 2 }} color=\"primary\" variant=\"h5\">\r\n            Display name:\r\n          </Typography>\r\n\r\n          <Typography variant=\"h5\">{user.name === undefined ? user.email : user.name}</Typography>\r\n        </Grid>\r\n        <Divider sx={{ borderBottom: '1px solid' }} />\r\n\r\n        <Grid container alignItems=\"center\">\r\n          <Typography sx={{ mr: 8 }} color=\"primary\" variant=\"h5\">\r\n            Email:\r\n          </Typography>\r\n\r\n          <Typography variant=\"h5\">{user.email}</Typography>\r\n        </Grid>\r\n        <Divider sx={{ borderBottom: '1px solid' }} />\r\n\r\n        <Grid container alignItems=\"center\">\r\n          <Typography sx={{ mr: 7 }} color=\"primary\" variant=\"h5\">\r\n            Gender:\r\n          </Typography>\r\n\r\n          <Typography variant=\"h5\">{user.gender}</Typography>\r\n        </Grid>\r\n        <Divider sx={{ borderBottom: '1px solid' }} />\r\n\r\n        <Grid container alignItems=\"center\">\r\n          <Typography sx={{ mr: 8 }} color=\"primary\" variant=\"h5\">\r\n            Group:\r\n          </Typography>\r\n\r\n          <Typography variant=\"h5\">{user.group}</Typography>\r\n        </Grid>\r\n        <Divider sx={{ borderBottom: '1px solid' }} />\r\n\r\n        <Grid container alignItems=\"center\">\r\n          <Typography sx={{ mr: 6 }} color=\"primary\" variant=\"h5\">\r\n            Position:\r\n          </Typography>\r\n\r\n          <Typography variant=\"h5\">{user.position}</Typography>\r\n        </Grid>\r\n        <Divider sx={{ borderBottom: '1px solid' }} />\r\n\r\n        <Grid container alignItems=\"center\">\r\n          <Typography sx={{ mr: 6 }} color=\"primary\" variant=\"h5\">\r\n            Address:\r\n          </Typography>\r\n\r\n          <Typography variant=\"h5\">{user.address}</Typography>\r\n        </Grid>\r\n        <Divider sx={{ borderBottom: '1px solid' }} />\r\n      </Stack>\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport default PersonalInfo;\r\n","import { useEffect, useState } from 'react';\r\nimport { useNavigate, useParams } from 'react-router';\r\n\r\n// material-ui\r\nimport { Typography, Grid, Table, TableBody, TableRow, TableCell, TableHead, Avatar, TablePagination, TableContainer } from '@mui/material';\r\n\r\n// icons\r\nimport { IconList, IconUsers } from '@tabler/icons';\r\n\r\n// project import\r\nimport WorkSpaceAPI from 'services/WorkSpaceAPI';\r\nimport BoardAPI from 'services/BoardAPI';\r\nimport TaskAPI from 'services/TaskAPI';\r\nimport BackgroundLetterAvatars from 'ui-component/BackgroundLetterAvatar';\r\nimport FilterBtn from 'ui-component/MenuButton/FilterBtn';\r\nimport io from 'socket.io-client';\r\nimport { host } from 'services/baseAPI';\r\n\r\n// ==============================|| WORK ||============================== //\r\nconst workSpaceAPI = new WorkSpaceAPI();\r\nconst boardAPI = new BoardAPI();\r\nconst taskAPI = new TaskAPI();\r\nconst socket = io(host, {\r\n  transports: ['websocket'],\r\n  withCredentials: true,\r\n});\r\n\r\nconst lists = [\r\n  {\r\n    id: 0,\r\n    title: 'Backlog',\r\n  },\r\n  {\r\n    id: 1,\r\n    title: 'To-Do',\r\n  },\r\n  {\r\n    id: 2,\r\n    title: 'Doing',\r\n  },\r\n  {\r\n    id: 3,\r\n    title: 'Done',\r\n  },\r\n];\r\n\r\nconst date = [\r\n  {\r\n    id: 0,\r\n    label: 'No expiration date',\r\n    iconColor: 'grey',\r\n    task: [],\r\n  },\r\n  {\r\n    id: 1,\r\n    label: 'Task done',\r\n    iconColor: 'green',\r\n    task: [],\r\n  },\r\n  {\r\n    id: 2,\r\n    label: 'Out of date',\r\n    iconColor: 'red',\r\n    task: [],\r\n  },\r\n];\r\n\r\nconst Work = () => {\r\n  const { userId } = useParams();\r\n  const navigate = useNavigate();\r\n\r\n  const [workspace, setWorkSpace] = useState([]);\r\n  const [board, setBoard] = useState([]);\r\n  const [task, setTask] = useState([]);\r\n\r\n  const [wsPage, setWSPage] = useState(0);\r\n  const [wsRowsPerPage, setWSRowsPerPage] = useState(5);\r\n\r\n  const [taskPage, setTaskPage] = useState(0);\r\n  const [taskRowsPerPage, setTaskRowsPerPage] = useState(5);\r\n\r\n  const [boardID, setBoardID] = useState();\r\n  const [check, setCheck] = useState(false);\r\n\r\n  const [dateID, setDateID] = useState();\r\n  const [checkDate, setCheckDate] = useState(false);\r\n\r\n  const loadData = (id) => {\r\n    workSpaceAPI.getAll().then((result) => {\r\n      let arr = [];\r\n\r\n      result.data.data.map((res) => {\r\n        res.member.map((value) => {\r\n          if (value._id === id) {\r\n            arr.push(res);\r\n          }\r\n        });\r\n      });\r\n\r\n      setWorkSpace(arr);\r\n    });\r\n\r\n    boardAPI.getAll().then((result) => {\r\n      let arr = [];\r\n\r\n      result.data.data.map((res) => {\r\n        res.member.map((value) => {\r\n          if (value._id === id) {\r\n            arr.push(res);\r\n          }\r\n        });\r\n      });\r\n\r\n      setBoard(arr);\r\n    });\r\n\r\n    taskAPI.getAll().then((result) => {\r\n      let arr = [];\r\n      let noDate = [];\r\n      let taskDone = [];\r\n      let expired = [];\r\n\r\n      result.data.data.map((res) => {\r\n        res.member.map((value) => {\r\n          if (value._id === id) {\r\n            arr.push(res);\r\n\r\n            if (res.day) {\r\n              if (res.day.expired === 'done') {\r\n                taskDone.push(res);\r\n              } else if (res.day.startTime !== '' && res.day.expirationDate !== '' && res.day.expirationTime !== '') {\r\n                if (new Date().toLocaleDateString() > res.day.expirationDate) {\r\n                  expired.push(res);\r\n                } else if (new Date().toLocaleDateString() === res.day.expirationDate) {\r\n                  if (new Date().getHours() > res.day.expirationTime.split(':')[0]) {\r\n                    expired.push(res);\r\n                  } else if (new Date().getHours() === res.day.expirationTime.split(':')[0]) {\r\n                    if (new Date().getMinutes() > res.day.expirationTime.split(':')[1]) {\r\n                      expired.push(res);\r\n                    }\r\n                  }\r\n                }\r\n              }\r\n            } else {\r\n              noDate.push(res);\r\n            }\r\n          }\r\n        });\r\n      });\r\n\r\n      date[0].task = noDate;\r\n      date[1].task = taskDone;\r\n      date[2].task = expired;\r\n\r\n      setTask(arr);\r\n    });\r\n  };\r\n\r\n  const handleChangeWSPage = (event, newPage) => {\r\n    setWSPage(newPage);\r\n  };\r\n\r\n  const handleChangeWSRowsPerPage = (event) => {\r\n    setWSRowsPerPage(+event.target.value);\r\n    setWSPage(0);\r\n  };\r\n\r\n  const handleChangeTaskPage = (event, newPage) => {\r\n    setTaskPage(newPage);\r\n  };\r\n\r\n  const handleChangeTaskRowsPerPage = (event) => {\r\n    setTaskRowsPerPage(+event.target.value);\r\n    setTaskPage(0);\r\n  };\r\n\r\n  const handleFilterBoard = (event, id) => {\r\n    setBoardID(id);\r\n    setCheck(event.target.checked);\r\n\r\n    taskAPI.getAll().then((result) => {\r\n      let arr = [];\r\n      let filter = [];\r\n\r\n      result.data.data.map((res) => {\r\n        res.member.map((value) => {\r\n          if (value._id === userId) {\r\n            arr.push(res);\r\n\r\n            if (res.boardID._id === id) {\r\n              filter.push(res);\r\n            }\r\n          }\r\n        });\r\n      });\r\n\r\n      if (event.target.checked === true) {\r\n        setTask(filter);\r\n      } else {\r\n        setTask(arr);\r\n      }\r\n    });\r\n  };\r\n\r\n  const handleFilterDate = (event, id) => {\r\n    setDateID(id);\r\n    setCheckDate(event.target.checked);\r\n\r\n    taskAPI.getAll().then((result) => {\r\n      let arr = [];\r\n\r\n      result.data.data.map((res) => {\r\n        res.member.map((value) => {\r\n          if (value._id === userId) {\r\n            arr.push(res);\r\n          }\r\n        });\r\n      });\r\n\r\n      if (event.target.checked === true) {\r\n        if (id === 0) {\r\n          setTask(date[0].task);\r\n        } else if (id === 1) {\r\n          setTask(date[1].task);\r\n        } else if (id === 2) {\r\n          setTask(date[2].task);\r\n        }\r\n      } else {\r\n        setTask(arr);\r\n      }\r\n    });\r\n  };\r\n\r\n  useEffect(() => {\r\n    loadData(userId);\r\n\r\n    socket.on('workspace', () => {\r\n      loadData(userId);\r\n    });\r\n\r\n    socket.on('board', () => {\r\n      loadData(userId);\r\n    });\r\n\r\n    socket.on('task', () => {\r\n      loadData(userId);\r\n    });\r\n  }, [userId]);\r\n\r\n  return (\r\n    <Grid sx={{ my: 5, px: 20 }}>\r\n      <Grid sx={{ px: 30 }}>\r\n        <Grid item display=\"flex\" alignItems=\"center\">\r\n          <IconUsers />\r\n\r\n          <Typography variant=\"h3\" sx={{ ml: 2 }}>\r\n            Workspaces\r\n          </Typography>\r\n        </Grid>\r\n        {workspace.length === 0 ? (\r\n          <Grid container justifyContent=\"center\" alignItems=\"center\" sx={{ mt: 2, height: 150, bgcolor: 'rgba(128, 128, 128, 0.1)' }}>\r\n            <Typography variant=\"h4\">Can't see any workspace. You must be added to the workspace to see them.</Typography>\r\n          </Grid>\r\n        ) : (\r\n          <>\r\n            <TableContainer\r\n              sx={{\r\n                maxHeight: 500,\r\n                overflow: 'hidden',\r\n                '&:hover': {\r\n                  overflow: 'auto',\r\n                  '&::-webkit-scrollbar': {\r\n                    width: 7,\r\n                  },\r\n                  '&::-webkit-scrollbar-track': {\r\n                    background: '#f1f1f1',\r\n                    borderRadius: 10,\r\n                  },\r\n                  '&::-webkit-scrollbar-thumb': {\r\n                    background: '#888',\r\n                    borderRadius: 10,\r\n                  },\r\n                  '&::-webkit-scrollbar-thumb:hover': {\r\n                    background: '#555',\r\n                  },\r\n                },\r\n              }}\r\n            >\r\n              <Table>\r\n                <TableBody>\r\n                  {workspace.slice(wsPage * wsRowsPerPage, wsPage * wsRowsPerPage + wsRowsPerPage).map((data) => (\r\n                    <TableRow\r\n                      key={data._id}\r\n                      hover\r\n                      onClick={() => {\r\n                        navigate(`/w/detail/${data._id}`, { replace: true });\r\n                      }}\r\n                      sx={{ cursor: 'pointer' }}\r\n                    >\r\n                      <TableCell sx={{ display: 'flex', alignItems: 'center' }}>\r\n                        {data.logo && (\r\n                          <>\r\n                            {data.logo.data === '' ? (\r\n                              <BackgroundLetterAvatars name={data.name} h={30} w={30} f={24} />\r\n                            ) : (\r\n                              <Avatar src={data.logo.data} variant=\"rounded\" sx={{ height: 30, width: 30 }} />\r\n                            )}\r\n                          </>\r\n                        )}\r\n\r\n                        <Typography variant=\"h5\" sx={{ ml: 2 }}>\r\n                          {data.name}\r\n                        </Typography>\r\n                      </TableCell>\r\n                    </TableRow>\r\n                  ))}\r\n                </TableBody>\r\n              </Table>\r\n            </TableContainer>\r\n            <TablePagination\r\n              sx={{ overflow: 'hidden' }}\r\n              rowsPerPageOptions={[5, 10, 25, 50, 100]}\r\n              component=\"div\"\r\n              count={workspace.length}\r\n              rowsPerPage={wsRowsPerPage}\r\n              page={wsPage}\r\n              onPageChange={handleChangeWSPage}\r\n              onRowsPerPageChange={handleChangeWSRowsPerPage}\r\n            />\r\n          </>\r\n        )}\r\n      </Grid>\r\n\r\n      <Grid>\r\n        <Grid container justifyContent=\"space-between\" alignItems=\"center\">\r\n          <Grid item display=\"flex\" alignItems=\"center\">\r\n            <IconList />\r\n\r\n            <Typography variant=\"h3\" sx={{ ml: 2 }}>\r\n              Work\r\n            </Typography>\r\n          </Grid>\r\n\r\n          <FilterBtn\r\n            page=\"user\"\r\n            boardId={boardID}\r\n            checkBoard={check}\r\n            board={board}\r\n            handleFilterBoard={handleFilterBoard}\r\n            checkDate={checkDate}\r\n            date={date}\r\n            dateId={dateID}\r\n            handleFilterDate={handleFilterDate}\r\n          />\r\n        </Grid>\r\n\r\n        {task.length === 0 ? (\r\n          <Grid container justifyContent=\"center\" alignItems=\"center\" sx={{ mt: 2, height: 150, bgcolor: 'rgba(128, 128, 128, 0.1)' }}>\r\n            <Typography variant=\"h3\">Can't see any task. You must be added to the task to see them.</Typography>\r\n          </Grid>\r\n        ) : (\r\n          <>\r\n            <TableContainer\r\n              sx={{\r\n                maxHeight: 500,\r\n                '&::-webkit-scrollbar': {\r\n                  width: 10,\r\n                  height: 10,\r\n                },\r\n                '&::-webkit-scrollbar-track': {\r\n                  background: '#f1f1f1',\r\n                  borderRadius: 10,\r\n                },\r\n                '&::-webkit-scrollbar-thumb': {\r\n                  background: '#888',\r\n                  borderRadius: 10,\r\n                },\r\n                '&::-webkit-scrollbar-thumb:hover': {\r\n                  background: '#555',\r\n                },\r\n              }}\r\n            >\r\n              <Table stickyHeader>\r\n                <TableHead>\r\n                  <TableRow>\r\n                    <TableCell>#</TableCell>\r\n                    <TableCell sx={{ minWidth: 300 }}>Task</TableCell>\r\n                    <TableCell sx={{ minWidth: 300 }}>Describe</TableCell>\r\n                    <TableCell sx={{ minWidth: 200 }}>Member</TableCell>\r\n                    <TableCell sx={{ minWidth: 100 }}>Status</TableCell>\r\n                    <TableCell sx={{ minWidth: 250 }}>Board</TableCell>\r\n                    <TableCell sx={{ minWidth: 250 }}>Expiration date</TableCell>\r\n                  </TableRow>\r\n                </TableHead>\r\n\r\n                <TableBody>\r\n                  {task.slice(taskPage * taskRowsPerPage, taskPage * taskRowsPerPage + taskRowsPerPage).map((data, index) => (\r\n                    <TableRow\r\n                      key={data._id}\r\n                      hover\r\n                      onClick={() => {\r\n                        navigate(`/b/${data.boardID._id}`, { replace: true });\r\n                      }}\r\n                      sx={{ cursor: 'pointer', borderTop: '2px solid', borderBottom: '2px solid' }}\r\n                    >\r\n                      <TableCell>{index + 1}</TableCell>\r\n                      <TableCell>\r\n                        <Typography variant=\"h5\">{data.task}</Typography>\r\n                      </TableCell>\r\n                      <TableCell>\r\n                        <Typography variant=\"h5\">{data.describe}</Typography>\r\n                      </TableCell>\r\n                      <TableCell>\r\n                        {data.member !== [] && (\r\n                          <div style={{ display: 'flex', flexWrap: 'wrap' }}>\r\n                            {data.member.map((user) => (\r\n                              <Avatar key={user._id} src={user.avatar.data} sx={{ width: 24, height: 24 }} />\r\n                            ))}\r\n                          </div>\r\n                        )}\r\n                      </TableCell>\r\n                      <TableCell>\r\n                        <Typography variant=\"h5\">\r\n                          {lists.map((value) => (\r\n                            <div key={value.id}>{value.id === data.status && <>{value.title}</>}</div>\r\n                          ))}\r\n                        </Typography>\r\n                      </TableCell>\r\n                      <TableCell>\r\n                        <Typography variant=\"h5\">{data.boardID.name}</Typography>\r\n                      </TableCell>\r\n                      <TableCell>\r\n                        {data.day && data.day.startTime !== '' && data.day.expirationDate !== '' && data.day.expirationTime !== '' ? (\r\n                          <Typography variant=\"h5\">\r\n                            {data.day.startTime} - {data.day.expirationDate} at {data.day.expirationTime}\r\n                          </Typography>\r\n                        ) : (\r\n                          <Typography variant=\"h5\">The task has no expiration date</Typography>\r\n                        )}\r\n                      </TableCell>\r\n                    </TableRow>\r\n                  ))}\r\n                </TableBody>\r\n              </Table>\r\n            </TableContainer>\r\n            <TablePagination\r\n              rowsPerPageOptions={[5, 10, 25, 50, 100]}\r\n              component=\"div\"\r\n              count={task.length}\r\n              rowsPerPage={taskRowsPerPage}\r\n              page={taskPage}\r\n              onPageChange={handleChangeTaskPage}\r\n              onRowsPerPageChange={handleChangeTaskRowsPerPage}\r\n            />\r\n          </>\r\n        )}\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport default Work;\r\n","import { useEffect, useState } from 'react';\r\nimport { useParams } from 'react-router';\r\n\r\n// material-ui\r\nimport { Avatar, Button, Typography, Grid, ButtonGroup } from '@mui/material';\r\n\r\n// project import\r\nimport UserAPI from 'services/UserAPI';\r\nimport EditProfile from './EditProfile';\r\nimport PersonalInfo from './PersonalInfomation';\r\nimport Work from './Work';\r\nimport io from 'socket.io-client';\r\nimport { host } from 'services/baseAPI';\r\n\r\n// ==============================|| USER PROFILE PAGE ||============================== //\r\nconst userAPI = new UserAPI();\r\nconst socket = io(host, {\r\n  transports: ['websocket'],\r\n  withCredentials: true,\r\n});\r\n\r\nconst Profile = () => {\r\n  const { userId } = useParams();\r\n  const userID = sessionStorage.getItem('id');\r\n\r\n  const [user, setUser] = useState({});\r\n\r\n  const [show, setShow] = useState(true);\r\n  const [edit, setEdit] = useState(false);\r\n\r\n  const loadData = (id) => {\r\n    userAPI.getByID(id).then((res) => setUser(res.data[0]));\r\n\r\n    if (userId !== userID) {\r\n      setShow(false);\r\n    }\r\n  };\r\n\r\n  const handleInfo = () => {\r\n    setShow(true);\r\n  };\r\n\r\n  const handleWork = () => {\r\n    setShow(false);\r\n  };\r\n\r\n  const handleEdit = () => {\r\n    setEdit(true);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setEdit(false);\r\n  };\r\n\r\n  useEffect(() => {\r\n    loadData(userId);\r\n\r\n    socket.on('user', () => {\r\n      loadData(userId);\r\n    });\r\n  }, [userId]);\r\n\r\n  return (\r\n    <Grid>\r\n      <Grid container direction=\"column\" alignItems=\"center\" sx={{ bgcolor: 'rgba(128, 128, 128, 0.1)' }}>\r\n        <Grid container justifyContent=\"center\" alignItems=\"center\" sx={{ my: 5 }}>\r\n          <Avatar alt=\"profile user\" src={user.avatar && user.avatar.data} sx={{ height: 120, width: 120, mr: 2 }} />\r\n\r\n          <Typography variant=\"h1\">{user.name}</Typography>\r\n        </Grid>\r\n\r\n        <ButtonGroup variant=\"text\" aria-label=\"text button group\" sx={{ width: '100%', justifyContent: 'center' }}>\r\n          <Button disableElevation onClick={handleInfo}>\r\n            Personal Infomation\r\n          </Button>\r\n\r\n          <Button disableElevation onClick={handleWork}>\r\n            Work\r\n          </Button>\r\n\r\n          <Button disableElevation disabled={userId === userID ? false : true} onClick={handleEdit}>\r\n            Edit Profile\r\n          </Button>\r\n        </ButtonGroup>\r\n      </Grid>\r\n\r\n      {show === true ? <PersonalInfo /> : <Work />}\r\n\r\n      <EditProfile open={edit} onClose={handleClose} formData={user} />\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport default Profile;\r\n"],"names":["TaskAPI","BaseAPI","constructor","super","endpoint","createNew","async","axios","method","url","this","api","data","task","getAll","updateByID","id","StyledMenu","styled","props","elevation","anchorOrigin","vertical","horizontal","transformOrigin","theme","borderRadius","marginTop","spacing","minWidth","color","palette","mode","grey","boxShadow","padding","fontSize","text","secondary","marginRight","backgroundColor","alpha","primary","main","action","selectedOpacity","page","userId","checkMember","checkNone","member","handleFilterMemberNone","handleFilterMember","checkBoard","boardId","board","handleFilterBoard","checkDate","date","dateId","handleFilterDate","anchorEl","setAnchorEl","useState","open","Boolean","undefined","variant","disableElevation","onClick","event","currentTarget","startIcon","size","MenuListProps","onClose","sx","display","flexDirection","m","component","control","checked","onChange","e","src","width","height","mr","label","map","user","_id","avatar","name","iconColor","style","userAPI","UserAPI","socket","io","host","transports","withCredentials","formData","setUser","handleClose","handleChange","target","value","useEffect","scroll","onSubmit","preventDefault","FormData","editUser","get","email","gender","group","position","address","swal","buttons","timer","icon","test","base64","EndcodeFileBase64","type","match","then","res","success","emit","setTimeout","catch","noValidate","mt","textAlign","dividers","container","alignItems","defaultValue","justifyContent","placeholder","row","my","useParams","loadData","getByID","on","Grid","px","Stack","mx","Typography","Divider","borderBottom","workSpaceAPI","WorkSpaceAPI","boardAPI","BoardAPI","taskAPI","lists","title","navigate","useNavigate","workspace","setWorkSpace","setBoard","setTask","wsPage","setWSPage","wsRowsPerPage","setWSRowsPerPage","taskPage","setTaskPage","taskRowsPerPage","setTaskRowsPerPage","boardID","setBoardID","check","setCheck","dateID","setDateID","setCheckDate","result","arr","push","noDate","taskDone","expired","day","startTime","expirationDate","expirationTime","Date","toLocaleDateString","getHours","split","getMinutes","item","ml","length","bgcolor","TableContainer","maxHeight","overflow","background","Table","TableBody","slice","TableRow","hover","replace","cursor","TableCell","logo","BackgroundLetterAvatar","h","w","f","Avatar","TablePagination","rowsPerPageOptions","count","rowsPerPage","onPageChange","newPage","onRowsPerPageChange","FilterBtn","filter","stickyHeader","TableHead","index","borderTop","describe","flexWrap","status","userID","sessionStorage","getItem","show","setShow","edit","setEdit","direction","alt","ButtonGroup","Button","disabled","EditProfile"],"sourceRoot":""}